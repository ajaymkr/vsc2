{
  "openapi": "3.0.0",
  "info": {
    "description": "Copyright 2018 - 2022 Trend Micro Incorporated.<br/>Get protected, stay secured, and keep informed with Trend Micro Workload Security's new RESTful API. Access system data and manage security configurations to automate your security workflows and integrate Workload Security into your CI/CD pipeline.\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->",
    "version": "50.0.1355",
    "title": "Trend Micro Workload Security API"
  },
  "tags": [
    {
      "name": "Account Details"
    },
    {
      "name": "Administrators"
    },
    {
      "name": "Administrator Roles"
    },
    {
      "name": "Agent Activation Information"
    },
    {
      "name": "Agent Deployment Scripts"
    },
    {
      "name": "Agent Scan Controls"
    },
    {
      "name": "Agent Version Controls"
    },
    {
      "name": "Agent Version Control Profiles"
    },
    {
      "name": "Anti-Malware Configurations"
    },
    {
      "name": "API Keys"
    },
    {
      "name": "API Usage"
    },
    {
      "name": "Global Rules"
    },
    {
      "name": "Application Types"
    },
    {
      "name": "AWS Connectors"
    },
    {
      "name": "AWS Connector Settings"
    },
    {
      "name": "Azure Connectors"
    },
    {
      "name": "Certificates"
    },
    {
      "name": "Common Object Import Tasks"
    },
    {
      "name": "Computers"
    },
    {
      "name": "Computer Device Control Exception Rules"
    },
    {
      "name": "Computer Firewall Rule Assignments"
    },
    {
      "name": "Computer Firewall Rule Details"
    },
    {
      "name": "Computer Groups"
    },
    {
      "name": "Computer Integrity Monitoring Rule Assignments & Recommendations"
    },
    {
      "name": "Computer Integrity Monitoring Rule Details"
    },
    {
      "name": "Computer Intrusion Prevention Rule Assignments & Recommendations"
    },
    {
      "name": "Computer Intrusion Prevention Application Type Details"
    },
    {
      "name": "Computer Intrusion Prevention Rule Details"
    },
    {
      "name": "Computer Log Inspection Rule Assignments & Recommendations"
    },
    {
      "name": "Computer Log Inspection Rule Details"
    },
    {
      "name": "Contacts"
    },
    {
      "name": "Data Center Gateways"
    },
    {
      "name": "USB Storage Devices"
    },
    {
      "name": "Directory Lists"
    },
    {
      "name": "Event Based Tasks"
    },
    {
      "name": "File Extension Lists"
    },
    {
      "name": "File Lists"
    },
    {
      "name": "Firewall Rules"
    },
    {
      "name": "GCP Connector Actions"
    },
    {
      "name": "GCP Connectors"
    },
    {
      "name": "Integrity Monitoring Rules"
    },
    {
      "name": "Interface Types"
    },
    {
      "name": "Intrusion Prevention Rules"
    },
    {
      "name": "IP Lists"
    },
    {
      "name": "Log Inspection Rules"
    },
    {
      "name": "MAC Lists"
    },
    {
      "name": "MovedComputers"
    },
    {
      "name": "Policies"
    },
    {
      "name": "Policy Device Control Exception Rules"
    },
    {
      "name": "Policy Firewall Rule Assignments"
    },
    {
      "name": "Policy Firewall Rule Details"
    },
    {
      "name": "Policy Import Tasks"
    },
    {
      "name": "Policy Integrity Monitoring Rule Assignments & Recommendations"
    },
    {
      "name": "Policy Integrity Monitoring Rule Details"
    },
    {
      "name": "Policy Intrusion Prevention Rule Assignments & Recommendations"
    },
    {
      "name": "Policy Intrusion Prevention Application Type Details"
    },
    {
      "name": "Policy Intrusion Prevention Rule Details"
    },
    {
      "name": "Policy Log Inspection Rule Assignments & Recommendations"
    },
    {
      "name": "Policy Log Inspection Rule Details"
    },
    {
      "name": "Port Lists"
    },
    {
      "name": "Proxies"
    },
    {
      "name": "Report Templates"
    },
    {
      "name": "Contexts"
    },
    {
      "name": "Rulesets"
    },
    {
      "name": "Sap Entitlement"
    },
    {
      "name": "Schedules"
    },
    {
      "name": "Scheduled Tasks"
    },
    {
      "name": "System Settings"
    },
    {
      "name": "Smart Folders"
    },
    {
      "name": "Software Changes"
    },
    {
      "name": "Software Inventories"
    },
    {
      "name": "Stateful Configurations"
    },
    {
      "name": "Syslog Configurations"
    },
    {
      "name": "Trust Rules"
    },
    {
      "name": "Trust Rulesets"
    },
    {
      "name": "vCenter Connector Actions"
    },
    {
      "name": "vCenter Connectors"
    }
  ],
  "paths": {
    "/accountdetails/current": {
      "get": {
        "tags": [
          "Account Details"
        ],
        "summary": "Describe current Account Details",
        "description": "Describe current account details. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AccountDetailsApi.describeCurrentAccountDetails([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AccountDetailsApi.describe_current_account_details([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AccountDetailsApi.describeCurrentAccountDetails([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeCurrentAccountDetails",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accountDetails"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view account details."
          },
          "404": {
            "description": "The account details are not found."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AccountDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.AccountDetails;\r\n\r\n\r\npublic class DescribeCurrentAccountDetailsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAccountDetailsApi instance = new AccountDetailsApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAccountDetails result = instance.describeCurrentAccountDetails(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AccountDetailsApi.describeCurrentAccountDetails\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AccountDetailsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_current_account_details(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AccountDetailsApi.describe_current_account_details: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AccountDetailsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeCurrentAccountDetails(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/administrators/{administratorID}": {
      "get": {
        "tags": [
          "Administrators"
        ],
        "summary": "Describe an Administrator",
        "description": "Describe an administrator by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorsApi.describeAdministrator([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorsApi.describe_administrator([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorsApi.describeAdministrator([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeAdministrator",
        "parameters": [
          {
            "name": "administratorID",
            "in": "path",
            "description": "The ID number of the administrator to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/administrator"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view administrators."
          },
          "404": {
            "description": "The administrator does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AdministratorsApi;\r\nimport com.trendmicro.deepsecurity.model.Administrator;\r\n\r\n\r\npublic class DescribeAdministratorExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAdministratorsApi instance = new AdministratorsApi();\r\n\t\tInteger administratorID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAdministrator result = instance.describeAdministrator(administratorID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AdministratorsApi.describeAdministrator\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AdministratorsApi(deepsecurity.ApiClient(configuration))\r\nadministrator_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_administrator(administrator_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AdministratorsApi.describe_administrator: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AdministratorsApi();\r\nlet administratorID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeAdministrator(administratorID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Administrators"
        ],
        "summary": "Modify an Administrator",
        "description": "Modify an administrator by ID. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorsApi.modifyAdministrator([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorsApi.modify_administrator([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorsApi.modifyAdministrator([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyAdministrator",
        "parameters": [
          {
            "name": "administratorID",
            "in": "path",
            "description": "The ID number of the administrator to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/administrator"
              }
            }
          },
          "description": "The settings of the administrator to modify.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/administrator"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify administrators or the requested modification is not permitted."
          },
          "404": {
            "description": "The administrator does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AdministratorsApi;\r\nimport com.trendmicro.deepsecurity.model.Administrator;\r\n\r\n\r\npublic class ModifyAdministratorExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAdministratorsApi instance = new AdministratorsApi();\r\n\t\tInteger administratorID = 1;\r\n\t\tAdministrator administrator = new Administrator();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAdministrator result = instance.modifyAdministrator(administratorID, administrator, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AdministratorsApi.modifyAdministrator\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AdministratorsApi(deepsecurity.ApiClient(configuration))\r\nadministrator_id = 1\r\nadministrator = deepsecurity.Administrator()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_administrator(administrator_id, administrator, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AdministratorsApi.modify_administrator: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AdministratorsApi();\r\nlet administratorID = 1;\r\nlet administrator = new Deepsecurity.Administrator();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifyAdministrator(administratorID, administrator, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Administrators"
        ],
        "summary": "Delete an Administrator",
        "description": "Delete an administrator by ID. Not authorized for Trend Micro Cloud One users. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorsApi.deleteAdministrator([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorsApi.delete_administrator([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorsApi.deleteAdministrator([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteAdministrator",
        "parameters": [
          {
            "name": "administratorID",
            "in": "path",
            "description": "The ID number of the administrator to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete administrators."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AdministratorsApi;\r\n\r\n\r\npublic class DeleteAdministratorExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAdministratorsApi instance = new AdministratorsApi();\r\n\t\tInteger administratorID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteAdministrator(administratorID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AdministratorsApi.deleteAdministrator\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AdministratorsApi(deepsecurity.ApiClient(configuration))\r\nadministrator_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_administrator(administrator_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AdministratorsApi.delete_administrator: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AdministratorsApi();\r\nlet administratorID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteAdministrator(administratorID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/administrators": {
      "get": {
        "tags": [
          "Administrators"
        ],
        "summary": "List Administrators",
        "description": "Lists all administrators. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorsApi.listAdministrators([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorsApi.list_administrators([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorsApi.listAdministrators([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listAdministrators",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Administrators"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view administrators."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AdministratorsApi;\r\nimport com.trendmicro.deepsecurity.model.Administrators;\r\n\r\n\r\npublic class ListAdministratorsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAdministratorsApi instance = new AdministratorsApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAdministrators result = instance.listAdministrators(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AdministratorsApi.listAdministrators\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AdministratorsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_administrators(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AdministratorsApi.list_administrators: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AdministratorsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listAdministrators(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Administrators"
        ],
        "summary": "Create an Administrator",
        "description": "Create a new administrator. Not authorized for Trend Micro Cloud One users. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorsApi.createAdministrator([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorsApi.create_administrator([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorsApi.createAdministrator([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createAdministrator",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/administrator"
              }
            }
          },
          "description": "The settings of the new administrator.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/administrator"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create administrators."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AdministratorsApi;\r\nimport com.trendmicro.deepsecurity.model.Administrator;\r\n\r\n\r\npublic class CreateAdministratorExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAdministratorsApi instance = new AdministratorsApi();\r\n\t\tAdministrator administrator = new Administrator();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAdministrator result = instance.createAdministrator(administrator, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AdministratorsApi.createAdministrator\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AdministratorsApi(deepsecurity.ApiClient(configuration))\r\nadministrator = deepsecurity.Administrator()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_administrator(administrator, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AdministratorsApi.create_administrator: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AdministratorsApi();\r\nlet administrator = new Deepsecurity.Administrator();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createAdministrator(administrator, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/administrators/search": {
      "post": {
        "tags": [
          "Administrators"
        ],
        "summary": "Search Administrators",
        "description": "Search for administrators using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorsApi.searchAdministrators([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorsApi.search_administrators([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorsApi.searchAdministrators([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchAdministrators",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Administrators"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view administrators."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AdministratorsApi;\r\nimport com.trendmicro.deepsecurity.model.Administrators;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchAdministratorsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAdministratorsApi instance = new AdministratorsApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAdministrators result = instance.searchAdministrators(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AdministratorsApi.searchAdministrators\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AdministratorsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_administrators(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AdministratorsApi.search_administrators: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AdministratorsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchAdministrators(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/roles": {
      "get": {
        "tags": [
          "Administrator Roles"
        ],
        "summary": "List Administrator Roles",
        "description": "Lists all administrator roles. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorRolesApi.listAdministratorRoles([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorRolesApi.list_administrator_roles([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorRolesApi.listAdministratorRoles([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listAdministratorRoles",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdministratorRoles"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view administrator roles."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AdministratorRolesApi;\r\nimport com.trendmicro.deepsecurity.model.AdministratorRoles;\r\n\r\n\r\npublic class ListAdministratorRolesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAdministratorRolesApi instance = new AdministratorRolesApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAdministratorRoles result = instance.listAdministratorRoles(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AdministratorRolesApi.listAdministratorRoles\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AdministratorRolesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_administrator_roles(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AdministratorRolesApi.list_administrator_roles: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AdministratorRolesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listAdministratorRoles(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Administrator Roles"
        ],
        "summary": "Create an Administrator Role",
        "description": "Create a new administrator role. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorRolesApi.createAdministratorRole([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorRolesApi.create_administrator_role([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorRolesApi.createAdministratorRole([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createAdministratorRole",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/role"
              }
            }
          },
          "description": "The settings of the new administrator role.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/role"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create administrator roles."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AdministratorRolesApi;\r\nimport com.trendmicro.deepsecurity.model.Role;\r\n\r\n\r\npublic class CreateAdministratorRoleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAdministratorRolesApi instance = new AdministratorRolesApi();\r\n\t\tRole administratorrole = new Role();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tRole result = instance.createAdministratorRole(administratorrole, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AdministratorRolesApi.createAdministratorRole\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AdministratorRolesApi(deepsecurity.ApiClient(configuration))\r\nadministratorrole = deepsecurity.Role()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_administrator_role(administratorrole, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AdministratorRolesApi.create_administrator_role: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AdministratorRolesApi();\r\nlet administratorrole = new Deepsecurity.Role();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createAdministratorRole(administratorrole, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/roles/search": {
      "post": {
        "tags": [
          "Administrator Roles"
        ],
        "summary": "Search Administrator Roles",
        "description": "Search for administrator roles using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorRolesApi.searchAdministratorRoles([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorRolesApi.search_administrator_roles([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorRolesApi.searchAdministratorRoles([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchAdministratorRoles",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdministratorRoles"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view administrator roles."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AdministratorRolesApi;\r\nimport com.trendmicro.deepsecurity.model.AdministratorRoles;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchAdministratorRolesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAdministratorRolesApi instance = new AdministratorRolesApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAdministratorRoles result = instance.searchAdministratorRoles(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AdministratorRolesApi.searchAdministratorRoles\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AdministratorRolesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_administrator_roles(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AdministratorRolesApi.search_administrator_roles: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AdministratorRolesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchAdministratorRoles(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/roles/{roleID}": {
      "get": {
        "tags": [
          "Administrator Roles"
        ],
        "summary": "Describe an Administrator Role",
        "description": "Describe an administrator role by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorRolesApi.describeAdministratorRole([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorRolesApi.describe_administrator_role([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorRolesApi.describeAdministratorRole([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeAdministratorRole",
        "parameters": [
          {
            "name": "roleID",
            "in": "path",
            "description": "The ID number of the administrator role to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/role"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view administrator roles."
          },
          "404": {
            "description": "The administrator role does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AdministratorRolesApi;\r\nimport com.trendmicro.deepsecurity.model.Role;\r\n\r\n\r\npublic class DescribeAdministratorRoleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAdministratorRolesApi instance = new AdministratorRolesApi();\r\n\t\tInteger roleID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tRole result = instance.describeAdministratorRole(roleID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AdministratorRolesApi.describeAdministratorRole\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AdministratorRolesApi(deepsecurity.ApiClient(configuration))\r\nrole_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_administrator_role(role_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AdministratorRolesApi.describe_administrator_role: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AdministratorRolesApi();\r\nlet roleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeAdministratorRole(roleID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Administrator Roles"
        ],
        "summary": "Modify an Administrator Role",
        "description": "Modify an administrator role by ID. Any properties that have no value are not modified. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorRolesApi.modifyAdministratorRole([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorRolesApi.modify_administrator_role([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorRolesApi.modifyAdministratorRole([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyAdministratorRole",
        "parameters": [
          {
            "name": "roleID",
            "in": "path",
            "description": "The ID number of the administrator role to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/role"
              }
            }
          },
          "description": "The settings of the administrator role to modify.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/role"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify administrator roles or the requested modification is not permitted."
          },
          "404": {
            "description": "The administrator role does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AdministratorRolesApi;\r\nimport com.trendmicro.deepsecurity.model.Role;\r\n\r\n\r\npublic class ModifyAdministratorRoleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAdministratorRolesApi instance = new AdministratorRolesApi();\r\n\t\tInteger roleID = 1;\r\n\t\tRole administrator = new Role();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tRole result = instance.modifyAdministratorRole(roleID, administrator, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AdministratorRolesApi.modifyAdministratorRole\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AdministratorRolesApi(deepsecurity.ApiClient(configuration))\r\nrole_id = 1\r\nadministrator = deepsecurity.Role()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_administrator_role(role_id, administrator, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AdministratorRolesApi.modify_administrator_role: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AdministratorRolesApi();\r\nlet roleID = 1;\r\nlet administrator = new Deepsecurity.Role();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifyAdministratorRole(roleID, administrator, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Administrator Roles"
        ],
        "summary": "Delete an Administrator Role",
        "description": "Delete an administrator role by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorRolesApi.deleteAdministratorRole([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorRolesApi.delete_administrator_role([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AdministratorRolesApi.deleteAdministratorRole([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteAdministratorRole",
        "parameters": [
          {
            "name": "roleID",
            "in": "path",
            "description": "The ID number of the administrator role to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete administrator roles."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AdministratorRolesApi;\r\n\r\n\r\npublic class DeleteAdministratorRoleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAdministratorRolesApi instance = new AdministratorRolesApi();\r\n\t\tInteger roleID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteAdministratorRole(roleID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AdministratorRolesApi.deleteAdministratorRole\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AdministratorRolesApi(deepsecurity.ApiClient(configuration))\r\nrole_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_administrator_role(role_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AdministratorRolesApi.delete_administrator_role: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AdministratorRolesApi();\r\nlet roleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteAdministratorRole(roleID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/agentactivationinformation": {
      "get": {
        "tags": [
          "Agent Activation Information"
        ],
        "summary": "Describe Agent Activation Information",
        "description": "Describe the information required when performing agent activation. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AgentActivationInformationApi.describeAgentActivationInformation([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AgentActivationInformationApi.describe_agent_activation_information([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AgentActivationInformationApi.describeAgentActivationInformation([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeAgentActivationInformation",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/agentActivationInformation"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view Agent Activation Information."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AgentActivationInformationApi;\r\nimport com.trendmicro.deepsecurity.model.AgentActivationInformation;\r\n\r\n\r\npublic class DescribeAgentActivationInformationExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAgentActivationInformationApi instance = new AgentActivationInformationApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAgentActivationInformation result = instance.describeAgentActivationInformation(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AgentActivationInformationApi.describeAgentActivationInformation\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AgentActivationInformationApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_agent_activation_information(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AgentActivationInformationApi.describe_agent_activation_information: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AgentActivationInformationApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeAgentActivationInformation(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/agentdeploymentscripts": {
      "post": {
        "tags": [
          "Agent Deployment Scripts"
        ],
        "summary": "Generate Agent Deployment Scripts",
        "description": "Generate agent deployment scripts by platform. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AgentDeploymentScriptsApi.generateAgentDeploymentScript([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AgentDeploymentScriptsApi.generate_agent_deployment_script([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AgentDeploymentScriptsApi.generateAgentDeploymentScript([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "generateAgentDeploymentScript",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentDeploymentScript"
              }
            }
          },
          "description": "The platform type and activation details for the agent."
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentDeploymentScript"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to retrieve agent deployment scripts."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AgentDeploymentScriptsApi;\r\nimport com.trendmicro.deepsecurity.model.AgentDeploymentScript;\r\n\r\n\r\npublic class GenerateAgentDeploymentScriptExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAgentDeploymentScriptsApi instance = new AgentDeploymentScriptsApi();\r\n\t\tAgentDeploymentScript agentDeploymentScript = new AgentDeploymentScript();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAgentDeploymentScript result = instance.generateAgentDeploymentScript(agentDeploymentScript, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AgentDeploymentScriptsApi.generateAgentDeploymentScript\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AgentDeploymentScriptsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nagent_deployment_script = deepsecurity.AgentDeploymentScript()\r\n\r\ntry:\r\n\tapi_response = api_instance.generate_agent_deployment_script(api_version, agent_deployment_script=agent_deployment_script)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AgentDeploymentScriptsApi.generate_agent_deployment_script: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AgentDeploymentScriptsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  agentDeploymentScript: new Deepsecurity.AgentDeploymentScript(),\r\n};\r\n\r\napiInstance.generateAgentDeploymentScript(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/agentscancontrols": {
      "get": {
        "tags": [
          "Agent Scan Controls"
        ],
        "summary": "Retrieve AgentScanControl setting details",
        "description": "Retrieve max concurrent agent scans on each ESX host setting. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AgentScanControlsApi.listAgentScanControlSetting([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AgentScanControlsApi.list_agent_scan_control_setting([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AgentScanControlsApi.listAgentScanControlSetting([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listAgentScanControlSetting",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/agentScanControlSettings"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to retrieve AgentScanControl settings."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AgentScanControlsApi;\r\nimport com.trendmicro.deepsecurity.model.AgentScanControlSettings;\r\n\r\n\r\npublic class ListAgentScanControlSettingExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAgentScanControlsApi instance = new AgentScanControlsApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAgentScanControlSettings result = instance.listAgentScanControlSetting(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AgentScanControlsApi.listAgentScanControlSetting\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AgentScanControlsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_agent_scan_control_setting(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AgentScanControlsApi.list_agent_scan_control_setting: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AgentScanControlsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listAgentScanControlSetting(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Agent Scan Controls"
        ],
        "summary": "Modify AgentScanControl setting ",
        "description": "Modify max concurrent agent scans on each ESX host setting. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AgentScanControlsApi.modifyAgentScanControlSetting([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AgentScanControlsApi.modify_agent_scan_control_setting([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AgentScanControlsApi.modifyAgentScanControlSetting([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyAgentScanControlSetting",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/agentScanControlSettings"
              }
            }
          },
          "description": "AgentScanControl setting details."
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/agentScanControlSettings"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to change AgentScanControl settings."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AgentScanControlsApi;\r\nimport com.trendmicro.deepsecurity.model.AgentScanControlSettings;\r\n\r\n\r\npublic class ModifyAgentScanControlSettingExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAgentScanControlsApi instance = new AgentScanControlsApi();\r\n\t\tAgentScanControlSettings agentScanControlSettings = new AgentScanControlSettings();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAgentScanControlSettings result = instance.modifyAgentScanControlSetting(agentScanControlSettings, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AgentScanControlsApi.modifyAgentScanControlSetting\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AgentScanControlsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nagent_scan_control_settings = deepsecurity.AgentScanControlSettings()\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_agent_scan_control_setting(api_version, agent_scan_control_settings=agent_scan_control_settings)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AgentScanControlsApi.modify_agent_scan_control_setting: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AgentScanControlsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  agentScanControlSettings: new Deepsecurity.AgentScanControlSettings(),\r\n};\r\n\r\napiInstance.modifyAgentScanControlSetting(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/agentversioncontrolprofiles/{agentVersionControlProfileID}/agentversioncontrols": {
      "get": {
        "tags": [
          "Agent Version Controls"
        ],
        "summary": "List agent version controls",
        "description": "Lists all agent version controls. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AgentVersionControlsApi.listAgentVersionControls([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AgentVersionControlsApi.list_agent_version_controls([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AgentVersionControlsApi.listAgentVersionControls([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listAgentVersionControls",
        "parameters": [
          {
            "name": "agentVersionControlProfileID",
            "in": "path",
            "description": "The ID number of the agent version control profile.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentVersionControls"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AgentVersionControlsApi;\r\nimport com.trendmicro.deepsecurity.model.AgentVersionControls;\r\n\r\n\r\npublic class ListAgentVersionControlsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAgentVersionControlsApi instance = new AgentVersionControlsApi();\r\n\t\tInteger agentVersionControlProfileID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAgentVersionControls result = instance.listAgentVersionControls(agentVersionControlProfileID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AgentVersionControlsApi.listAgentVersionControls\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AgentVersionControlsApi(deepsecurity.ApiClient(configuration))\r\nagent_version_control_profile_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_agent_version_controls(agent_version_control_profile_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AgentVersionControlsApi.list_agent_version_controls: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AgentVersionControlsApi();\r\nlet agentVersionControlProfileID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listAgentVersionControls(agentVersionControlProfileID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Agent Version Controls"
        ],
        "summary": "Modify agent version controls",
        "description": "Modify the agent version controls. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AgentVersionControlsApi.modifyAgentVersionControls([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AgentVersionControlsApi.modify_agent_version_controls([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AgentVersionControlsApi.modifyAgentVersionControls([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyAgentVersionControls",
        "parameters": [
          {
            "name": "agentVersionControlProfileID",
            "in": "path",
            "description": "The ID number of the agent version control profile.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentVersionControls"
              }
            }
          },
          "description": "The agent version controls to modify.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentVersionControls"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AgentVersionControlsApi;\r\nimport com.trendmicro.deepsecurity.model.AgentVersionControls;\r\n\r\n\r\npublic class ModifyAgentVersionControlsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAgentVersionControlsApi instance = new AgentVersionControlsApi();\r\n\t\tInteger agentVersionControlProfileID = 1;\r\n\t\tAgentVersionControls agentVersionControls = new AgentVersionControls();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAgentVersionControls result = instance.modifyAgentVersionControls(agentVersionControlProfileID, agentVersionControls, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AgentVersionControlsApi.modifyAgentVersionControls\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AgentVersionControlsApi(deepsecurity.ApiClient(configuration))\r\nagent_version_control_profile_id = 1\r\nagent_version_controls = deepsecurity.AgentVersionControls()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_agent_version_controls(agent_version_control_profile_id, agent_version_controls, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AgentVersionControlsApi.modify_agent_version_controls: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AgentVersionControlsApi();\r\nlet agentVersionControlProfileID = 1;\r\nlet agentVersionControls = new Deepsecurity.AgentVersionControls();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifyAgentVersionControls(agentVersionControlProfileID, agentVersionControls, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/agentversioncontrolprofiles/{agentVersionControlProfileID}/agentversioncontrols/search": {
      "post": {
        "tags": [
          "Agent Version Controls"
        ],
        "summary": "Search agent version controls",
        "description": "Search for agent version controls using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AgentVersionControlsApi.searchAgentVersionControls([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AgentVersionControlsApi.search_agent_version_controls([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AgentVersionControlsApi.searchAgentVersionControls([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchAgentVersionControls",
        "parameters": [
          {
            "name": "agentVersionControlProfileID",
            "in": "path",
            "description": "The ID number of the agent version control profile.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentVersionControls"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AgentVersionControlsApi;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\nimport com.trendmicro.deepsecurity.model.AgentVersionControls;\r\n\r\n\r\npublic class SearchAgentVersionControlsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAgentVersionControlsApi instance = new AgentVersionControlsApi();\r\n\t\tInteger agentVersionControlProfileID = 1;\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAgentVersionControls result = instance.searchAgentVersionControls(agentVersionControlProfileID, searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AgentVersionControlsApi.searchAgentVersionControls\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AgentVersionControlsApi(deepsecurity.ApiClient(configuration))\r\nagent_version_control_profile_id = 1\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_agent_version_controls(agent_version_control_profile_id, api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AgentVersionControlsApi.search_agent_version_controls: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AgentVersionControlsApi();\r\nlet agentVersionControlProfileID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchAgentVersionControls(agentVersionControlProfileID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/agentversioncontrolprofiles/{agentVersionControlProfileID}/agentversioncontrols/{agentVersionControlID}": {
      "get": {
        "tags": [
          "Agent Version Controls"
        ],
        "summary": "Describe an agent version control",
        "description": "Describe an Agent Version Control by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AgentVersionControlsApi.describeAgentVersionControl([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AgentVersionControlsApi.describe_agent_version_control([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AgentVersionControlsApi.describeAgentVersionControl([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeAgentVersionControl",
        "parameters": [
          {
            "name": "agentVersionControlProfileID",
            "in": "path",
            "description": "The ID number of the agent version control profile.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "agentVersionControlID",
            "in": "path",
            "description": "The ID number of the agent version control to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/agentVersionControl"
                }
              }
            }
          },
          "404": {
            "description": "The agent version control does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AgentVersionControlsApi;\r\nimport com.trendmicro.deepsecurity.model.AgentVersionControl;\r\n\r\n\r\npublic class DescribeAgentVersionControlExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAgentVersionControlsApi instance = new AgentVersionControlsApi();\r\n\t\tInteger agentVersionControlProfileID = 1;\r\n\t\tInteger agentVersionControlID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAgentVersionControl result = instance.describeAgentVersionControl(agentVersionControlProfileID, agentVersionControlID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AgentVersionControlsApi.describeAgentVersionControl\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AgentVersionControlsApi(deepsecurity.ApiClient(configuration))\r\nagent_version_control_profile_id = 1\r\nagent_version_control_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_agent_version_control(agent_version_control_profile_id, agent_version_control_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AgentVersionControlsApi.describe_agent_version_control: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AgentVersionControlsApi();\r\nlet agentVersionControlProfileID = 1;\r\nlet agentVersionControlID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeAgentVersionControl(agentVersionControlProfileID, agentVersionControlID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/agentversioncontrolprofiles": {
      "get": {
        "tags": [
          "Agent Version Control Profiles"
        ],
        "summary": "List agent version control profiles",
        "description": "Lists all agent version control profiles. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AgentVersionControlProfilesApi.listAgentVersionControlProfiles([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AgentVersionControlProfilesApi.list_agent_version_control_profiles([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AgentVersionControlProfilesApi.listAgentVersionControlProfiles([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listAgentVersionControlProfiles",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentVersionControlProfiles"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AgentVersionControlProfilesApi;\r\nimport com.trendmicro.deepsecurity.model.AgentVersionControlProfiles;\r\n\r\n\r\npublic class ListAgentVersionControlProfilesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAgentVersionControlProfilesApi instance = new AgentVersionControlProfilesApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAgentVersionControlProfiles result = instance.listAgentVersionControlProfiles(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AgentVersionControlProfilesApi.listAgentVersionControlProfiles\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AgentVersionControlProfilesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_agent_version_control_profiles(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AgentVersionControlProfilesApi.list_agent_version_control_profiles: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AgentVersionControlProfilesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listAgentVersionControlProfiles(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/agentversioncontrolprofiles/{agentVersionControlProfileID}": {
      "get": {
        "tags": [
          "Agent Version Control Profiles"
        ],
        "summary": "Describe an agent version control profile",
        "description": "Describe an Agent Version Control Profile by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AgentVersionControlProfilesApi.describeAgentVersionControlProfile([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AgentVersionControlProfilesApi.describe_agent_version_control_profile([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AgentVersionControlProfilesApi.describeAgentVersionControlProfile([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeAgentVersionControlProfile",
        "parameters": [
          {
            "name": "agentVersionControlProfileID",
            "in": "path",
            "description": "The ID number of the agent version control profile to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/agentVersionControlProfile"
                }
              }
            }
          },
          "404": {
            "description": "The agent version control profile does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AgentVersionControlProfilesApi;\r\nimport com.trendmicro.deepsecurity.model.AgentVersionControlProfile;\r\n\r\n\r\npublic class DescribeAgentVersionControlProfileExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAgentVersionControlProfilesApi instance = new AgentVersionControlProfilesApi();\r\n\t\tInteger agentVersionControlProfileID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAgentVersionControlProfile result = instance.describeAgentVersionControlProfile(agentVersionControlProfileID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AgentVersionControlProfilesApi.describeAgentVersionControlProfile\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AgentVersionControlProfilesApi(deepsecurity.ApiClient(configuration))\r\nagent_version_control_profile_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_agent_version_control_profile(agent_version_control_profile_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AgentVersionControlProfilesApi.describe_agent_version_control_profile: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AgentVersionControlProfilesApi();\r\nlet agentVersionControlProfileID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeAgentVersionControlProfile(agentVersionControlProfileID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/antimalwareconfigurations": {
      "get": {
        "tags": [
          "Anti-Malware Configurations"
        ],
        "summary": "List Anti-Malware Configurations",
        "description": "Lists all anti-malware configurations. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AntiMalwareConfigurationsApi.listAntiMalwares([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AntiMalwareConfigurationsApi.list_anti_malwares([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AntiMalwareConfigurationsApi.listAntiMalwares([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listAntiMalwares",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AntiMalwareConfigurations"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view anti-malware configurations."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AntiMalwareConfigurationsApi;\r\nimport com.trendmicro.deepsecurity.model.AntiMalwareConfigurations;\r\n\r\n\r\npublic class ListAntiMalwaresExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAntiMalwareConfigurationsApi instance = new AntiMalwareConfigurationsApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAntiMalwareConfigurations result = instance.listAntiMalwares(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AntiMalwareConfigurationsApi.listAntiMalwares\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AntiMalwareConfigurationsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_anti_malwares(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AntiMalwareConfigurationsApi.list_anti_malwares: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AntiMalwareConfigurationsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listAntiMalwares(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Anti-Malware Configurations"
        ],
        "summary": "Create an Anti-Malware Configuration",
        "description": "Create a new anti-malware configuration. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AntiMalwareConfigurationsApi.createAntiMalware([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AntiMalwareConfigurationsApi.create_anti_malware([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AntiMalwareConfigurationsApi.createAntiMalware([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createAntiMalware",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/antiMalwareConfiguration"
              }
            }
          },
          "description": "The settings of the new anti-malware configuration.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/antiMalwareConfiguration"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create anti-malware configurations."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AntiMalwareConfigurationsApi;\r\nimport com.trendmicro.deepsecurity.model.AntiMalwareConfiguration;\r\n\r\n\r\npublic class CreateAntiMalwareExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAntiMalwareConfigurationsApi instance = new AntiMalwareConfigurationsApi();\r\n\t\tAntiMalwareConfiguration antiMalwareConfiguration = new AntiMalwareConfiguration();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAntiMalwareConfiguration result = instance.createAntiMalware(antiMalwareConfiguration, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AntiMalwareConfigurationsApi.createAntiMalware\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AntiMalwareConfigurationsApi(deepsecurity.ApiClient(configuration))\r\nanti_malware_configuration = deepsecurity.AntiMalwareConfiguration()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_anti_malware(anti_malware_configuration, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AntiMalwareConfigurationsApi.create_anti_malware: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AntiMalwareConfigurationsApi();\r\nlet antiMalwareConfiguration = new Deepsecurity.AntiMalwareConfiguration();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createAntiMalware(antiMalwareConfiguration, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/antimalwareconfigurations/search": {
      "post": {
        "tags": [
          "Anti-Malware Configurations"
        ],
        "summary": "Search Anti-Malware Configurations",
        "description": "Search for anti-malware configurations using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AntiMalwareConfigurationsApi.searchAntiMalwares([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AntiMalwareConfigurationsApi.search_anti_malwares([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AntiMalwareConfigurationsApi.searchAntiMalwares([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchAntiMalwares",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AntiMalwareConfigurations"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view anti-malware configurations."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AntiMalwareConfigurationsApi;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\nimport com.trendmicro.deepsecurity.model.AntiMalwareConfigurations;\r\n\r\n\r\npublic class SearchAntiMalwaresExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAntiMalwareConfigurationsApi instance = new AntiMalwareConfigurationsApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAntiMalwareConfigurations result = instance.searchAntiMalwares(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AntiMalwareConfigurationsApi.searchAntiMalwares\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AntiMalwareConfigurationsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_anti_malwares(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AntiMalwareConfigurationsApi.search_anti_malwares: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AntiMalwareConfigurationsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchAntiMalwares(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/antimalwareconfigurations/{antiMalwareID}": {
      "get": {
        "tags": [
          "Anti-Malware Configurations"
        ],
        "summary": "Describe an Anti-Malware Configuration",
        "description": "Describe an anti-malware configuration by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AntiMalwareConfigurationsApi.describeAntiMalware([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AntiMalwareConfigurationsApi.describe_anti_malware([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AntiMalwareConfigurationsApi.describeAntiMalware([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeAntiMalware",
        "parameters": [
          {
            "name": "antiMalwareID",
            "in": "path",
            "description": "The ID number of the anti-malware configuration to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/antiMalwareConfiguration"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view anti-malware configurations."
          },
          "404": {
            "description": "The anti-malware configuration does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AntiMalwareConfigurationsApi;\r\nimport com.trendmicro.deepsecurity.model.AntiMalwareConfiguration;\r\n\r\n\r\npublic class DescribeAntiMalwareExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAntiMalwareConfigurationsApi instance = new AntiMalwareConfigurationsApi();\r\n\t\tInteger antiMalwareID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAntiMalwareConfiguration result = instance.describeAntiMalware(antiMalwareID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AntiMalwareConfigurationsApi.describeAntiMalware\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AntiMalwareConfigurationsApi(deepsecurity.ApiClient(configuration))\r\nanti_malware_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_anti_malware(anti_malware_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AntiMalwareConfigurationsApi.describe_anti_malware: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AntiMalwareConfigurationsApi();\r\nlet antiMalwareID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeAntiMalware(antiMalwareID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Anti-Malware Configurations"
        ],
        "summary": "Modify an Anti-Malware Configuration",
        "description": "Modify an anti-malware configuration by ID. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AntiMalwareConfigurationsApi.modifyAntiMalware([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AntiMalwareConfigurationsApi.modify_anti_malware([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AntiMalwareConfigurationsApi.modifyAntiMalware([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyAntiMalware",
        "parameters": [
          {
            "name": "antiMalwareID",
            "in": "path",
            "description": "The ID number of the anti-malware configuration to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/antiMalwareConfiguration"
              }
            }
          },
          "description": "The settings of the anti-malware configuration to modify.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/antiMalwareConfiguration"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify anti-malware configurations or the requested modification is not permitted."
          },
          "404": {
            "description": "The anti-malware configuration does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AntiMalwareConfigurationsApi;\r\nimport com.trendmicro.deepsecurity.model.AntiMalwareConfiguration;\r\n\r\n\r\npublic class ModifyAntiMalwareExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAntiMalwareConfigurationsApi instance = new AntiMalwareConfigurationsApi();\r\n\t\tInteger antiMalwareID = 1;\r\n\t\tAntiMalwareConfiguration antiMalwareConfiguration = new AntiMalwareConfiguration();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAntiMalwareConfiguration result = instance.modifyAntiMalware(antiMalwareID, antiMalwareConfiguration, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AntiMalwareConfigurationsApi.modifyAntiMalware\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AntiMalwareConfigurationsApi(deepsecurity.ApiClient(configuration))\r\nanti_malware_id = 1\r\nanti_malware_configuration = deepsecurity.AntiMalwareConfiguration()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_anti_malware(anti_malware_id, anti_malware_configuration, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AntiMalwareConfigurationsApi.modify_anti_malware: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AntiMalwareConfigurationsApi();\r\nlet antiMalwareID = 1;\r\nlet antiMalwareConfiguration = new Deepsecurity.AntiMalwareConfiguration();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifyAntiMalware(antiMalwareID, antiMalwareConfiguration, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Anti-Malware Configurations"
        ],
        "summary": "Delete an Anti-Malware Configuration",
        "description": "Delete an anti-malware configuration by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AntiMalwareConfigurationsApi.deleteAntiMalware([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AntiMalwareConfigurationsApi.delete_anti_malware([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AntiMalwareConfigurationsApi.deleteAntiMalware([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteAntiMalware",
        "parameters": [
          {
            "name": "antiMalwareID",
            "in": "path",
            "description": "The ID number of the anti-malware configuration to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete anti-malware configurations."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AntiMalwareConfigurationsApi;\r\n\r\n\r\npublic class DeleteAntiMalwareExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAntiMalwareConfigurationsApi instance = new AntiMalwareConfigurationsApi();\r\n\t\tInteger antiMalwareID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteAntiMalware(antiMalwareID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AntiMalwareConfigurationsApi.deleteAntiMalware\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AntiMalwareConfigurationsApi(deepsecurity.ApiClient(configuration))\r\nanti_malware_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_anti_malware(anti_malware_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AntiMalwareConfigurationsApi.delete_anti_malware: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AntiMalwareConfigurationsApi();\r\nlet antiMalwareID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteAntiMalware(antiMalwareID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/apikeys/current": {
      "get": {
        "tags": [
          "API Keys"
        ],
        "summary": "Describe the Current API Key",
        "description": "Describe the API key that is associated with the credentials that are being used to authenticate this call. Authentication must be done via an API secret key. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ApiKeysApi.describeCurrentApiKey([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>APIKeysApi.describe_current_api_key([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>APIKeysApi.describeCurrentApiKey([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeCurrentApiKey",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiKeyCurrent"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view API keys."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ApiKeysApi;\r\nimport com.trendmicro.deepsecurity.model.ApiKeyCurrent;\r\n\r\n\r\npublic class DescribeCurrentApiKeyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tApiKeysApi instance = new ApiKeysApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApiKeyCurrent result = instance.describeCurrentApiKey(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiKeysApi.describeCurrentApiKey\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.APIKeysApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_current_api_key(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling APIKeysApi.describe_current_api_key: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.APIKeysApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeCurrentApiKey(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "API Keys"
        ],
        "summary": "Modify the Current API Key",
        "description": "Modify the API key that is associated with the credentials that are being used to authenticate this call. Authentication must be done via an API secret key. Writable fields are: keyName, description, locale, & timeZone. Any unset elements will be left unchanged. This method works only for Legacy API Key. For managing the CloudOne API Key, see the [CloudOne API KEY Reference](https://cloudone.trendmicro.com/docs/identity-and-account-management/api-reference/tag/API-Keys). <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ApiKeysApi.modifyCurrentApiKey([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>APIKeysApi.modify_current_api_key([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>APIKeysApi.modifyCurrentApiKey([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyCurrentApiKey",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiKeyCurrent"
              }
            }
          },
          "description": "The settings of the API key to modify.",
          "required": true
        },
        "security": [
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiKeyCurrent"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify API keys or the requested modification is not permitted."
          },
          "404": {
            "description": "The API key does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ApiKeysApi;\r\nimport com.trendmicro.deepsecurity.model.ApiKeyCurrent;\r\n\r\n\r\npublic class ModifyCurrentApiKeyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tApiKeysApi instance = new ApiKeysApi();\r\n\t\tApiKeyCurrent apiKey = new ApiKeyCurrent();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApiKeyCurrent result = instance.modifyCurrentApiKey(apiKey, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiKeysApi.modifyCurrentApiKey\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.APIKeysApi(deepsecurity.ApiClient(configuration))\r\napi_key = deepsecurity.ApiKeyCurrent()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_current_api_key(api_key, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling APIKeysApi.modify_current_api_key: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.APIKeysApi();\r\nlet apiKey = new Deepsecurity.ApiKeyCurrent();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifyCurrentApiKey(apiKey, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/apikeys/current/secretkey": {
      "post": {
        "tags": [
          "API Keys"
        ],
        "summary": "Generate a Secret Key for the Current API Key",
        "description": "Generate a new secret key for the current API key. Authentication must be done via an API secret key. This method works only for Legacy API Key. For managing the CloudOne API Key, see the [CloudOne API KEY Reference](https://cloudone.trendmicro.com/docs/identity-and-account-management/api-reference/tag/API-Keys). <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ApiKeysApi.replaceCurrentApiSecretKey([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>APIKeysApi.replace_current_api_secret_key([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>APIKeysApi.replaceCurrentApiSecretKey([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "replaceCurrentApiSecretKey",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiKey"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify API keys and generate a new Secret Key or the requested modification is not permitted."
          },
          "404": {
            "description": "The API key does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ApiKeysApi;\r\nimport com.trendmicro.deepsecurity.model.ApiKey;\r\n\r\n\r\npublic class ReplaceCurrentApiSecretKeyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tApiKeysApi instance = new ApiKeysApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApiKey result = instance.replaceCurrentApiSecretKey(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiKeysApi.replaceCurrentApiSecretKey\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.APIKeysApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.replace_current_api_secret_key(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling APIKeysApi.replace_current_api_secret_key: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.APIKeysApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.replaceCurrentApiSecretKey(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/apikeys/{apiKeyID}": {
      "get": {
        "tags": [
          "API Keys"
        ],
        "summary": "Describe an API Key",
        "description": "Describe an API key by ID. For managing the CloudOne API Key, see the [CloudOne API KEY Reference](https://cloudone.trendmicro.com/docs/identity-and-account-management/api-reference/tag/API-Keys). <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ApiKeysApi.describeApiKey([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>APIKeysApi.describe_api_key([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>APIKeysApi.describeApiKey([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeApiKey",
        "parameters": [
          {
            "name": "apiKeyID",
            "in": "path",
            "description": "The ID number of the API key to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiKey"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view API keys."
          },
          "404": {
            "description": "The API key does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ApiKeysApi;\r\nimport com.trendmicro.deepsecurity.model.ApiKey;\r\n\r\n\r\npublic class DescribeApiKeyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tApiKeysApi instance = new ApiKeysApi();\r\n\t\tInteger apiKeyID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApiKey result = instance.describeApiKey(apiKeyID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiKeysApi.describeApiKey\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.APIKeysApi(deepsecurity.ApiClient(configuration))\r\napi_key_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_api_key(api_key_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling APIKeysApi.describe_api_key: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.APIKeysApi();\r\nlet apiKeyID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeApiKey(apiKeyID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "API Keys"
        ],
        "summary": "Modify an API Key",
        "description": "Modify an API key by ID. Any unset elements will be left unchanged. This method works only for Legacy API Key. For managing the CloudOne API Key, see the [CloudOne API KEY Reference](https://cloudone.trendmicro.com/docs/identity-and-account-management/api-reference/tag/API-Keys). <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ApiKeysApi.modifyApiKey([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>APIKeysApi.modify_api_key([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>APIKeysApi.modifyApiKey([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyApiKey",
        "parameters": [
          {
            "name": "apiKeyID",
            "in": "path",
            "description": "The ID number of the API key to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiKey"
              }
            }
          },
          "description": "The settings of the API key to modify.",
          "required": true
        },
        "security": [
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiKey"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify API keys or the requested modification is not permitted."
          },
          "404": {
            "description": "The API key does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ApiKeysApi;\r\nimport com.trendmicro.deepsecurity.model.ApiKey;\r\n\r\n\r\npublic class ModifyApiKeyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tApiKeysApi instance = new ApiKeysApi();\r\n\t\tInteger apiKeyID = 1;\r\n\t\tApiKey apiKey = new ApiKey();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApiKey result = instance.modifyApiKey(apiKeyID, apiKey, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiKeysApi.modifyApiKey\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.APIKeysApi(deepsecurity.ApiClient(configuration))\r\napi_key_id = 1\r\napi_key = deepsecurity.ApiKey()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_api_key(api_key_id, api_key, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling APIKeysApi.modify_api_key: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.APIKeysApi();\r\nlet apiKeyID = 1;\r\nlet apiKey = new Deepsecurity.ApiKey();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifyApiKey(apiKeyID, apiKey, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "API Keys"
        ],
        "summary": "Delete an API Key",
        "description": "Delete an API key by ID. This method works only for Legacy API Key. For managing the CloudOne API Key, see the [CloudOne API KEY Reference](https://cloudone.trendmicro.com/docs/identity-and-account-management/api-reference/tag/API-Keys). <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ApiKeysApi.deleteApiKey([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>APIKeysApi.delete_api_key([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>APIKeysApi.deleteApiKey([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteApiKey",
        "parameters": [
          {
            "name": "apiKeyID",
            "in": "path",
            "description": "The ID number of the API key to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete API keys."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ApiKeysApi;\r\n\r\n\r\npublic class DeleteApiKeyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tApiKeysApi instance = new ApiKeysApi();\r\n\t\tInteger apiKeyID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteApiKey(apiKeyID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiKeysApi.deleteApiKey\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.APIKeysApi(deepsecurity.ApiClient(configuration))\r\napi_key_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_api_key(api_key_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling APIKeysApi.delete_api_key: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.APIKeysApi();\r\nlet apiKeyID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteApiKey(apiKeyID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/apikeys/{apiKeyID}/secretkey": {
      "post": {
        "tags": [
          "API Keys"
        ],
        "summary": "Generate an API Secret Key",
        "description": "Generate a new API secret key. This method works only for Legacy API Key. For managing the CloudOne API Key, see the [CloudOne API KEY Reference](https://cloudone.trendmicro.com/docs/identity-and-account-management/api-reference/tag/API-Keys). <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ApiKeysApi.replaceApiSecretKey([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>APIKeysApi.replace_api_secret_key([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>APIKeysApi.replaceApiSecretKey([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "replaceApiSecretKey",
        "parameters": [
          {
            "name": "apiKeyID",
            "in": "path",
            "description": "The ID number of API key used to generate the secret key.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiKey"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to generate API secret keys."
          },
          "404": {
            "description": "The API key does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ApiKeysApi;\r\nimport com.trendmicro.deepsecurity.model.ApiKey;\r\n\r\n\r\npublic class ReplaceApiSecretKeyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tApiKeysApi instance = new ApiKeysApi();\r\n\t\tInteger apiKeyID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApiKey result = instance.replaceApiSecretKey(apiKeyID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiKeysApi.replaceApiSecretKey\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.APIKeysApi(deepsecurity.ApiClient(configuration))\r\napi_key_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.replace_api_secret_key(api_key_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling APIKeysApi.replace_api_secret_key: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.APIKeysApi();\r\nlet apiKeyID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.replaceApiSecretKey(apiKeyID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/apikeys/search": {
      "post": {
        "tags": [
          "API Keys"
        ],
        "summary": "Search API Keys",
        "description": "Search for API keys using optional filters. For managing the CloudOne API Key, see the [CloudOne API KEY Reference](https://cloudone.trendmicro.com/docs/identity-and-account-management/api-reference/tag/API-Keys). <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ApiKeysApi.searchApiKeys([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>APIKeysApi.search_api_keys([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>APIKeysApi.searchApiKeys([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchApiKeys",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiKeys"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view API keys."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ApiKeysApi;\r\nimport com.trendmicro.deepsecurity.model.ApiKeys;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchApiKeysExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tApiKeysApi instance = new ApiKeysApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApiKeys result = instance.searchApiKeys(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiKeysApi.searchApiKeys\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.APIKeysApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_api_keys(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling APIKeysApi.search_api_keys: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.APIKeysApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchApiKeys(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/apikeys": {
      "get": {
        "tags": [
          "API Keys"
        ],
        "summary": "List API Keys",
        "description": "Lists all API keys. For managing the CloudOne API Key, see the [CloudOne API KEY Reference](https://cloudone.trendmicro.com/docs/identity-and-account-management/api-reference/tag/API-Keys). <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ApiKeysApi.listApiKeys([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>APIKeysApi.list_api_keys([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>APIKeysApi.listApiKeys([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listApiKeys",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiKeys"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view API keys."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ApiKeysApi;\r\nimport com.trendmicro.deepsecurity.model.ApiKeys;\r\n\r\n\r\npublic class ListApiKeysExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tApiKeysApi instance = new ApiKeysApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApiKeys result = instance.listApiKeys(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiKeysApi.listApiKeys\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.APIKeysApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_api_keys(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling APIKeysApi.list_api_keys: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.APIKeysApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listApiKeys(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "API Keys"
        ],
        "summary": "Create an API Key",
        "description": "Create a new API key. This method works only for Legacy API Key. For managing the CloudOne API Key, see the [CloudOne API KEY Reference](https://cloudone.trendmicro.com/docs/identity-and-account-management/api-reference/tag/API-Keys). <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ApiKeysApi.createApiKey([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>APIKeysApi.create_api_key([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>APIKeysApi.createApiKey([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createApiKey",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/apiKey"
              }
            }
          },
          "description": "The settings of the new API key.",
          "required": true
        },
        "security": [
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/apiKey"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create API keys."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ApiKeysApi;\r\nimport com.trendmicro.deepsecurity.model.ApiKey;\r\n\r\n\r\npublic class CreateApiKeyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tApiKeysApi instance = new ApiKeysApi();\r\n\t\tApiKey apiKey = new ApiKey();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApiKey result = instance.createApiKey(apiKey, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiKeysApi.createApiKey\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.APIKeysApi(deepsecurity.ApiClient(configuration))\r\napi_key = deepsecurity.ApiKey()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_api_key(api_key, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling APIKeysApi.create_api_key: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.APIKeysApi();\r\nlet apiKey = new Deepsecurity.ApiKey();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createApiKey(apiKey, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/apiusagemetrics": {
      "get": {
        "tags": [
          "API Usage"
        ],
        "summary": "List API Usage Metrics",
        "description": "Lists all API usage metrics. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ApiUsageApi.listApiUsageMetrics([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>APIUsageApi.list_api_usage_metrics([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>APIUsageApi.listApiUsageMetrics([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listApiUsageMetrics",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIUsageMetrics"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view API events."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ApiUsageApi;\r\nimport com.trendmicro.deepsecurity.model.APIUsageMetrics;\r\n\r\n\r\npublic class ListApiUsageMetricsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tApiUsageApi instance = new ApiUsageApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAPIUsageMetrics result = instance.listApiUsageMetrics(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiUsageApi.listApiUsageMetrics\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.APIUsageApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_api_usage_metrics(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling APIUsageApi.list_api_usage_metrics: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.APIUsageApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listApiUsageMetrics(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/apiusagemetrics/search": {
      "post": {
        "tags": [
          "API Usage"
        ],
        "summary": "Search API Usage Metrics",
        "description": "Search for API usage metrics using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ApiUsageApi.searchApiUsageMetrics([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>APIUsageApi.search_api_usage_metrics([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>APIUsageApi.searchApiUsageMetrics([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchApiUsageMetrics",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIUsageMetrics"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view API events."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ApiUsageApi;\r\nimport com.trendmicro.deepsecurity.model.APIUsageMetrics;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchApiUsageMetricsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tApiUsageApi instance = new ApiUsageApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAPIUsageMetrics result = instance.searchApiUsageMetrics(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiUsageApi.searchApiUsageMetrics\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.APIUsageApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_api_usage_metrics(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling APIUsageApi.search_api_usage_metrics: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.APIUsageApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchApiUsageMetrics(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/applicationcontrolglobalrules": {
      "get": {
        "tags": [
          "Global Rules"
        ],
        "summary": "List all global rules",
        "description": "List all global rules. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GlobalRulesApi.listGlobalRules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GlobalRulesApi.list_global_rules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GlobalRulesApi.listGlobalRules([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listGlobalRules",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationControlGlobalRules"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view global rules"
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.GlobalRulesApi;\r\nimport com.trendmicro.deepsecurity.model.ApplicationControlGlobalRules;\r\n\r\n\r\npublic class ListGlobalRulesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tGlobalRulesApi instance = new GlobalRulesApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApplicationControlGlobalRules result = instance.listGlobalRules(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling GlobalRulesApi.listGlobalRules\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.GlobalRulesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_global_rules(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling GlobalRulesApi.list_global_rules: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.GlobalRulesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listGlobalRules(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Global Rules"
        ],
        "summary": "Create and add new global rules",
        "description": "Create and add global rules. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GlobalRulesApi.addGlobalRules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GlobalRulesApi.add_global_rules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GlobalRulesApi.addGlobalRules([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "addGlobalRules",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplicationControlGlobalRules"
              }
            }
          },
          "description": "The settings of the new rules.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationControlGlobalRules"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to add global rules."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.GlobalRulesApi;\r\nimport com.trendmicro.deepsecurity.model.ApplicationControlGlobalRules;\r\n\r\n\r\npublic class AddGlobalRulesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tGlobalRulesApi instance = new GlobalRulesApi();\r\n\t\tApplicationControlGlobalRules globalrules = new ApplicationControlGlobalRules();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApplicationControlGlobalRules result = instance.addGlobalRules(globalrules, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling GlobalRulesApi.addGlobalRules\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.GlobalRulesApi(deepsecurity.ApiClient(configuration))\r\nglobalrules = deepsecurity.ApplicationControlGlobalRules()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.add_global_rules(globalrules, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling GlobalRulesApi.add_global_rules: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.GlobalRulesApi();\r\nlet globalrules = new Deepsecurity.ApplicationControlGlobalRules();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.addGlobalRules(globalrules, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/applicationcontrolglobalrules/search": {
      "post": {
        "tags": [
          "Global Rules"
        ],
        "summary": "Search global rules",
        "description": "Search for global rules using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GlobalRulesApi.searchGlobalRules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GlobalRulesApi.search_global_rules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GlobalRulesApi.searchGlobalRules([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchGlobalRules",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationControlGlobalRules"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view global rules"
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.GlobalRulesApi;\r\nimport com.trendmicro.deepsecurity.model.ApplicationControlGlobalRules;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchGlobalRulesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tGlobalRulesApi instance = new GlobalRulesApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApplicationControlGlobalRules result = instance.searchGlobalRules(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling GlobalRulesApi.searchGlobalRules\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.GlobalRulesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_global_rules(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling GlobalRulesApi.search_global_rules: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.GlobalRulesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchGlobalRules(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/applicationcontrolglobalrules/{ruleID}": {
      "get": {
        "tags": [
          "Global Rules"
        ],
        "summary": "Describe a global rule",
        "description": "Describe a global rule by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GlobalRulesApi.describeGlobalRule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GlobalRulesApi.describe_global_rule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GlobalRulesApi.describeGlobalRule([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeGlobalRule",
        "parameters": [
          {
            "name": "ruleID",
            "in": "path",
            "description": "The ID number of the rule to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/applicationControlGlobalRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view global rules"
          },
          "404": {
            "description": "The rule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.GlobalRulesApi;\r\nimport com.trendmicro.deepsecurity.model.ApplicationControlGlobalRule;\r\n\r\n\r\npublic class DescribeGlobalRuleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tGlobalRulesApi instance = new GlobalRulesApi();\r\n\t\tLong ruleID = 1L;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApplicationControlGlobalRule result = instance.describeGlobalRule(ruleID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling GlobalRulesApi.describeGlobalRule\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.GlobalRulesApi(deepsecurity.ApiClient(configuration))\r\nrule_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_global_rule(rule_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling GlobalRulesApi.describe_global_rule: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.GlobalRulesApi();\r\nlet ruleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeGlobalRule(ruleID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Global Rules"
        ],
        "summary": "Modify a global rule",
        "description": "Modify a global rule by ID. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GlobalRulesApi.modifyGlobalRule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GlobalRulesApi.modify_global_rule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GlobalRulesApi.modifyGlobalRule([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyGlobalRule",
        "parameters": [
          {
            "name": "ruleID",
            "in": "path",
            "description": "The ID number of the rule to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/applicationControlGlobalRule"
              }
            }
          },
          "description": "The settings of the rule to be modified.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/applicationControlGlobalRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify rules or the requested modification is not permitted."
          },
          "404": {
            "description": "The rule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.GlobalRulesApi;\r\nimport com.trendmicro.deepsecurity.model.ApplicationControlGlobalRule;\r\n\r\n\r\npublic class ModifyGlobalRuleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tGlobalRulesApi instance = new GlobalRulesApi();\r\n\t\tLong ruleID = 1L;\r\n\t\tApplicationControlGlobalRule globalrule = new ApplicationControlGlobalRule();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApplicationControlGlobalRule result = instance.modifyGlobalRule(ruleID, globalrule, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling GlobalRulesApi.modifyGlobalRule\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.GlobalRulesApi(deepsecurity.ApiClient(configuration))\r\nrule_id = 1\r\nglobalrule = deepsecurity.ApplicationControlGlobalRule()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_global_rule(rule_id, globalrule, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling GlobalRulesApi.modify_global_rule: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.GlobalRulesApi();\r\nlet ruleID = 1;\r\nlet globalrule = new Deepsecurity.ApplicationControlGlobalRule();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifyGlobalRule(ruleID, globalrule, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Global Rules"
        ],
        "summary": " Delete a global rule",
        "description": "Delete a global rule by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GlobalRulesApi.deleteGlobalRule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GlobalRulesApi.delete_global_rule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GlobalRulesApi.deleteGlobalRule([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteGlobalRule",
        "parameters": [
          {
            "name": "ruleID",
            "in": "path",
            "description": "The ID number of the rule to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "204": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete rules."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.GlobalRulesApi;\r\n\r\n\r\npublic class DeleteGlobalRuleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tGlobalRulesApi instance = new GlobalRulesApi();\r\n\t\tLong ruleID = 1L;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteGlobalRule(ruleID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling GlobalRulesApi.deleteGlobalRule\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.GlobalRulesApi(deepsecurity.ApiClient(configuration))\r\nrule_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_global_rule(rule_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling GlobalRulesApi.delete_global_rule: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.GlobalRulesApi();\r\nlet ruleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteGlobalRule(ruleID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/applicationtypes": {
      "get": {
        "tags": [
          "Application Types"
        ],
        "summary": "List Application Types",
        "description": "Lists all application types. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ApplicationTypesApi.listApplicationTypes([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ApplicationTypesApi.list_application_types([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ApplicationTypesApi.listApplicationTypes([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listApplicationTypes",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationTypes"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view application types."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ApplicationTypesApi;\r\nimport com.trendmicro.deepsecurity.model.ApplicationTypes;\r\n\r\n\r\npublic class ListApplicationTypesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tApplicationTypesApi instance = new ApplicationTypesApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApplicationTypes result = instance.listApplicationTypes(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApplicationTypesApi.listApplicationTypes\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ApplicationTypesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_application_types(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ApplicationTypesApi.list_application_types: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ApplicationTypesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listApplicationTypes(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Application Types"
        ],
        "summary": "Create an Application Type",
        "description": "Create a new application type. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ApplicationTypesApi.createApplicationType([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ApplicationTypesApi.create_application_type([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ApplicationTypesApi.createApplicationType([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createApplicationType",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/applicationType"
              }
            }
          },
          "description": "The settings of the new application type.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/applicationType"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view application types."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ApplicationTypesApi;\r\nimport com.trendmicro.deepsecurity.model.ApplicationType;\r\n\r\n\r\npublic class CreateApplicationTypeExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tApplicationTypesApi instance = new ApplicationTypesApi();\r\n\t\tApplicationType applicationType = new ApplicationType();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApplicationType result = instance.createApplicationType(applicationType, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApplicationTypesApi.createApplicationType\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ApplicationTypesApi(deepsecurity.ApiClient(configuration))\r\napplication_type = deepsecurity.ApplicationType()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_application_type(application_type, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ApplicationTypesApi.create_application_type: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ApplicationTypesApi();\r\nlet applicationType = new Deepsecurity.ApplicationType();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createApplicationType(applicationType, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/applicationtypes/search": {
      "post": {
        "tags": [
          "Application Types"
        ],
        "summary": "Search Application Types",
        "description": "Search for application types using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ApplicationTypesApi.searchApplicationTypes([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ApplicationTypesApi.search_application_types([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ApplicationTypesApi.searchApplicationTypes([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchApplicationTypes",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationTypes"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view application types."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ApplicationTypesApi;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\nimport com.trendmicro.deepsecurity.model.ApplicationTypes;\r\n\r\n\r\npublic class SearchApplicationTypesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tApplicationTypesApi instance = new ApplicationTypesApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApplicationTypes result = instance.searchApplicationTypes(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApplicationTypesApi.searchApplicationTypes\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ApplicationTypesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_application_types(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ApplicationTypesApi.search_application_types: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ApplicationTypesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchApplicationTypes(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/applicationtypes/{applicationTypeID}": {
      "get": {
        "tags": [
          "Application Types"
        ],
        "summary": "Describe an Application Type",
        "description": "Describe an application type by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ApplicationTypesApi.describeApplicationType([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ApplicationTypesApi.describe_application_type([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ApplicationTypesApi.describeApplicationType([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeApplicationType",
        "parameters": [
          {
            "name": "applicationTypeID",
            "in": "path",
            "description": "The ID number of the application type to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/applicationType"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view application types."
          },
          "404": {
            "description": "The application type does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ApplicationTypesApi;\r\nimport com.trendmicro.deepsecurity.model.ApplicationType;\r\n\r\n\r\npublic class DescribeApplicationTypeExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tApplicationTypesApi instance = new ApplicationTypesApi();\r\n\t\tInteger applicationTypeID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApplicationType result = instance.describeApplicationType(applicationTypeID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApplicationTypesApi.describeApplicationType\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ApplicationTypesApi(deepsecurity.ApiClient(configuration))\r\napplication_type_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_application_type(application_type_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ApplicationTypesApi.describe_application_type: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ApplicationTypesApi();\r\nlet applicationTypeID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeApplicationType(applicationTypeID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Application Types"
        ],
        "summary": "Modify an Application Type",
        "description": "Modify an application type by ID. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ApplicationTypesApi.modifyApplicationType([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ApplicationTypesApi.modify_application_type([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ApplicationTypesApi.modifyApplicationType([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyApplicationType",
        "parameters": [
          {
            "name": "applicationTypeID",
            "in": "path",
            "description": "The ID number of the application type to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/applicationType"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/applicationType"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify application types or the requested modification is not permitted."
          },
          "404": {
            "description": "The application type does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ApplicationTypesApi;\r\nimport com.trendmicro.deepsecurity.model.ApplicationType;\r\n\r\n\r\npublic class ModifyApplicationTypeExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tApplicationTypesApi instance = new ApplicationTypesApi();\r\n\t\tInteger applicationTypeID = 1;\r\n\t\tApplicationType applicationType = new ApplicationType();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApplicationType result = instance.modifyApplicationType(applicationTypeID, applicationType, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApplicationTypesApi.modifyApplicationType\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ApplicationTypesApi(deepsecurity.ApiClient(configuration))\r\napplication_type_id = 1\r\napplication_type = deepsecurity.ApplicationType()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_application_type(application_type_id, application_type, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ApplicationTypesApi.modify_application_type: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ApplicationTypesApi();\r\nlet applicationTypeID = 1;\r\nlet applicationType = new Deepsecurity.ApplicationType();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifyApplicationType(applicationTypeID, applicationType, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Application Types"
        ],
        "summary": "Delete an Application Type",
        "description": "Delete an application type by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ApplicationTypesApi.deleteApplicationType([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ApplicationTypesApi.delete_application_type([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ApplicationTypesApi.deleteApplicationType([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteApplicationType",
        "parameters": [
          {
            "name": "applicationTypeID",
            "in": "path",
            "description": "The ID number of the application type to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete application types."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ApplicationTypesApi;\r\n\r\n\r\npublic class DeleteApplicationTypeExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tApplicationTypesApi instance = new ApplicationTypesApi();\r\n\t\tInteger applicationTypeID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteApplicationType(applicationTypeID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApplicationTypesApi.deleteApplicationType\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ApplicationTypesApi(deepsecurity.ApiClient(configuration))\r\napplication_type_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_application_type(application_type_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ApplicationTypesApi.delete_application_type: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ApplicationTypesApi();\r\nlet applicationTypeID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteApplicationType(applicationTypeID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/awsconnectors/{awsConnectorID}": {
      "get": {
        "tags": [
          "AWS Connectors"
        ],
        "summary": "Describe an existing AWS Connector",
        "description": "Describe an AWS Connector by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AwsConnectorsApi.describeAWSConnector([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AWSConnectorsApi.describe_aws_connector([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AWSConnectorsApi.describeAWSConnector([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeAWSConnector",
        "parameters": [
          {
            "name": "awsConnectorID",
            "in": "path",
            "description": "The ID number of the AWS Connector to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AWSConnector"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view AWS Connectors."
          },
          "404": {
            "description": "The AWS Connector does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AwsConnectorsApi;\r\nimport com.trendmicro.deepsecurity.model.AWSConnector;\r\n\r\n\r\npublic class DescribeAWSConnectorExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAwsConnectorsApi instance = new AwsConnectorsApi();\r\n\t\tInteger awsConnectorID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAWSConnector result = instance.describeAWSConnector(awsConnectorID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AwsConnectorsApi.describeAWSConnector\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AWSConnectorsApi(deepsecurity.ApiClient(configuration))\r\naws_connector_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_aws_connector(aws_connector_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AWSConnectorsApi.describe_aws_connector: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AWSConnectorsApi();\r\nlet awsConnectorID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeAWSConnector(awsConnectorID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "AWS Connectors"
        ],
        "summary": "Modify an AWS Connector",
        "description": "Modify the specified AWS Connector by ID. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AwsConnectorsApi.modifyAWSConnector([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AWSConnectorsApi.modify_aws_connector([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AWSConnectorsApi.modifyAWSConnector([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyAWSConnector",
        "parameters": [
          {
            "name": "awsConnectorID",
            "in": "path",
            "description": "The ID number of the AWS Connector to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "sync",
            "in": "query",
            "description": "Immediately trigger a synchronization for the AWS Connector.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AWSConnector"
              }
            }
          },
          "description": "The settings of the AWS Connector to modify.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AWSConnector"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify AWS Connectors or the requested modification is not permitted."
          },
          "404": {
            "description": "The AWS account does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AwsConnectorsApi;\r\nimport com.trendmicro.deepsecurity.model.AWSConnector;\r\n\r\n\r\npublic class ModifyAWSConnectorExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAwsConnectorsApi instance = new AwsConnectorsApi();\r\n\t\tInteger awsConnectorID = 1;\r\n\t\tBoolean sync = true;\r\n\t\tAWSConnector awsConnector = new AWSConnector();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAWSConnector result = instance.modifyAWSConnector(awsConnectorID, sync, awsConnector, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AwsConnectorsApi.modifyAWSConnector\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AWSConnectorsApi(deepsecurity.ApiClient(configuration))\r\naws_connector_id = 1\r\naws_connector = deepsecurity.AWSConnector()\r\napi_version = 'YOUR VERSION'\r\nsync = True\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_aws_connector(aws_connector_id, aws_connector, api_version, sync=sync)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AWSConnectorsApi.modify_aws_connector: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AWSConnectorsApi();\r\nlet awsConnectorID = 1;\r\nlet awsConnector = new Deepsecurity.AWSConnector();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  sync: true,\r\n};\r\n\r\napiInstance.modifyAWSConnector(awsConnectorID, awsConnector, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "AWS Connectors"
        ],
        "summary": "Delete an AWS Connector",
        "description": "Delete an existing AWS Connector by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AwsConnectorsApi.deleteAWSConnector([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AWSConnectorsApi.delete_aws_connector([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AWSConnectorsApi.deleteAWSConnector([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteAWSConnector",
        "parameters": [
          {
            "name": "awsConnectorID",
            "in": "path",
            "description": "The ID number of the AWS Connector to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Not authorized to delete AWS Connectors."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AwsConnectorsApi;\r\n\r\n\r\npublic class DeleteAWSConnectorExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAwsConnectorsApi instance = new AwsConnectorsApi();\r\n\t\tInteger awsConnectorID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteAWSConnector(awsConnectorID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AwsConnectorsApi.deleteAWSConnector\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AWSConnectorsApi(deepsecurity.ApiClient(configuration))\r\naws_connector_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_aws_connector(aws_connector_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AWSConnectorsApi.delete_aws_connector: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AWSConnectorsApi();\r\nlet awsConnectorID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteAWSConnector(awsConnectorID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/awsconnectors": {
      "get": {
        "tags": [
          "AWS Connectors"
        ],
        "summary": "List AWS Connectors",
        "description": "Lists all AWS Connectors. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AwsConnectorsApi.listAWSConnectors([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AWSConnectorsApi.list_aws_connectors([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AWSConnectorsApi.listAWSConnectors([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listAWSConnectors",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AWSConnectors"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view AWS Connectors."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AwsConnectorsApi;\r\nimport com.trendmicro.deepsecurity.model.AWSConnectors;\r\n\r\n\r\npublic class ListAWSConnectorsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAwsConnectorsApi instance = new AwsConnectorsApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAWSConnectors result = instance.listAWSConnectors(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AwsConnectorsApi.listAWSConnectors\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AWSConnectorsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_aws_connectors(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AWSConnectorsApi.list_aws_connectors: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AWSConnectorsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listAWSConnectors(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "AWS Connectors"
        ],
        "summary": "Create an AWS Connector",
        "description": "Create a new AWS Connector. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AwsConnectorsApi.createAWSConnector([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AWSConnectorsApi.create_aws_connector([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AWSConnectorsApi.createAWSConnector([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createAWSConnector",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AWSConnector"
              }
            }
          },
          "description": "The settings of the new AWS Connector.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AWSConnector"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create AWS Connectors."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AwsConnectorsApi;\r\nimport com.trendmicro.deepsecurity.model.AWSConnector;\r\n\r\n\r\npublic class CreateAWSConnectorExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAwsConnectorsApi instance = new AwsConnectorsApi();\r\n\t\tAWSConnector awsConnector = new AWSConnector();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAWSConnector result = instance.createAWSConnector(awsConnector, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AwsConnectorsApi.createAWSConnector\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AWSConnectorsApi(deepsecurity.ApiClient(configuration))\r\naws_connector = deepsecurity.AWSConnector()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_aws_connector(aws_connector, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AWSConnectorsApi.create_aws_connector: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AWSConnectorsApi();\r\nlet awsConnector = new Deepsecurity.AWSConnector();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createAWSConnector(awsConnector, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/awsconnectors/search": {
      "post": {
        "tags": [
          "AWS Connectors"
        ],
        "summary": "Search AWS Connectors",
        "description": "Search for AWS Connectors using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AwsConnectorsApi.searchAWSConnectors([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AWSConnectorsApi.search_aws_connectors([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AWSConnectorsApi.searchAWSConnectors([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchAWSConnectors",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AWSConnectors"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view AWS Connectors."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AwsConnectorsApi;\r\nimport com.trendmicro.deepsecurity.model.AWSConnectors;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchAWSConnectorsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAwsConnectorsApi instance = new AwsConnectorsApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAWSConnectors result = instance.searchAWSConnectors(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AwsConnectorsApi.searchAWSConnectors\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AWSConnectorsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_aws_connectors(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AWSConnectorsApi.search_aws_connectors: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AWSConnectorsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchAWSConnectors(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/awsconnectorsettings": {
      "get": {
        "tags": [
          "AWS Connector Settings"
        ],
        "summary": "List AWS Connector Settings",
        "description": " <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AwsConnectorSettingsApi.listAwsConnectorSettings([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AWSConnectorSettingsApi.list_aws_connector_settings([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AWSConnectorSettingsApi.listAwsConnectorSettings([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listAwsConnectorSettings",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/awsconnectorsettings"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to retrieve connector settings."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AwsConnectorSettingsApi;\r\nimport com.trendmicro.deepsecurity.model.Awsconnectorsettings;\r\n\r\n\r\npublic class ListAwsConnectorSettingsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAwsConnectorSettingsApi instance = new AwsConnectorSettingsApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAwsconnectorsettings result = instance.listAwsConnectorSettings(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AwsConnectorSettingsApi.listAwsConnectorSettings\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AWSConnectorSettingsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_aws_connector_settings(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AWSConnectorSettingsApi.list_aws_connector_settings: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AWSConnectorSettingsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listAwsConnectorSettings(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/azureconnectors/{azureConnectorID}": {
      "get": {
        "tags": [
          "Azure Connectors"
        ],
        "summary": "Describe an existing Azure Connector",
        "description": "Describe an Azure Connector by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AzureConnectorsApi.describeAzureConnector([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AzureConnectorsApi.describe_azure_connector([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AzureConnectorsApi.describeAzureConnector([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeAzureConnector",
        "parameters": [
          {
            "name": "azureConnectorID",
            "in": "path",
            "description": "The ID number of the Azure Connector to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AzureConnector"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view Azure Connectors."
          },
          "404": {
            "description": "The Azure Connector does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AzureConnectorsApi;\r\nimport com.trendmicro.deepsecurity.model.AzureConnector;\r\n\r\n\r\npublic class DescribeAzureConnectorExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAzureConnectorsApi instance = new AzureConnectorsApi();\r\n\t\tInteger azureConnectorID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAzureConnector result = instance.describeAzureConnector(azureConnectorID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AzureConnectorsApi.describeAzureConnector\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AzureConnectorsApi(deepsecurity.ApiClient(configuration))\r\nazure_connector_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_azure_connector(azure_connector_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AzureConnectorsApi.describe_azure_connector: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AzureConnectorsApi();\r\nlet azureConnectorID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeAzureConnector(azureConnectorID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Azure Connectors"
        ],
        "summary": "Modify an Azure Connector",
        "description": "Modify the specified Azure Connector by ID. Any unset elements will be left unchanged. Property `azureTenantID`, `subscriptionID`, `loginApiEndPoint` and `resourceApiEndPoint` can't be modified. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AzureConnectorsApi.modifyAzureConnector([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AzureConnectorsApi.modify_azure_connector([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AzureConnectorsApi.modifyAzureConnector([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyAzureConnector",
        "parameters": [
          {
            "name": "azureConnectorID",
            "in": "path",
            "description": "The ID number of the Azure Connector to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "sync",
            "in": "query",
            "description": "Immediately trigger a synchronization for the Azure Connector.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AzureConnector"
              }
            }
          },
          "description": "The settings of the Azure Connector to modify.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AzureConnector"
                }
              }
            }
          },
          "400": {
            "description": "Azure AD application not associated with subscription"
          },
          "403": {
            "description": "Not authorized to modify Azure Connectors or the requested modification is not permitted."
          },
          "404": {
            "description": "The Azure account does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AzureConnectorsApi;\r\nimport com.trendmicro.deepsecurity.model.AzureConnector;\r\n\r\n\r\npublic class ModifyAzureConnectorExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAzureConnectorsApi instance = new AzureConnectorsApi();\r\n\t\tInteger azureConnectorID = 1;\r\n\t\tBoolean sync = true;\r\n\t\tAzureConnector azureConnector = new AzureConnector();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAzureConnector result = instance.modifyAzureConnector(azureConnectorID, sync, azureConnector, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AzureConnectorsApi.modifyAzureConnector\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AzureConnectorsApi(deepsecurity.ApiClient(configuration))\r\nazure_connector_id = 1\r\nazure_connector = deepsecurity.AzureConnector()\r\napi_version = 'YOUR VERSION'\r\nsync = True\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_azure_connector(azure_connector_id, azure_connector, api_version, sync=sync)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AzureConnectorsApi.modify_azure_connector: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AzureConnectorsApi();\r\nlet azureConnectorID = 1;\r\nlet azureConnector = new Deepsecurity.AzureConnector();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  sync: true,\r\n};\r\n\r\napiInstance.modifyAzureConnector(azureConnectorID, azureConnector, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Azure Connectors"
        ],
        "summary": "Delete an Azure Connector",
        "description": "Delete an existing Azure Connector by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AzureConnectorsApi.deleteAzureConnector([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AzureConnectorsApi.delete_azure_connector([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AzureConnectorsApi.deleteAzureConnector([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteAzureConnector",
        "parameters": [
          {
            "name": "azureConnectorID",
            "in": "path",
            "description": "The ID number of the Azure Connector to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete Azure Connectors."
          },
          "404": {
            "description": "The Azure account does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AzureConnectorsApi;\r\n\r\n\r\npublic class DeleteAzureConnectorExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAzureConnectorsApi instance = new AzureConnectorsApi();\r\n\t\tInteger azureConnectorID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteAzureConnector(azureConnectorID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AzureConnectorsApi.deleteAzureConnector\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AzureConnectorsApi(deepsecurity.ApiClient(configuration))\r\nazure_connector_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_azure_connector(azure_connector_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AzureConnectorsApi.delete_azure_connector: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AzureConnectorsApi();\r\nlet azureConnectorID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteAzureConnector(azureConnectorID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/azureconnectors": {
      "get": {
        "tags": [
          "Azure Connectors"
        ],
        "summary": "List Azure Connectors",
        "description": "Lists all Azure Connectors. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AzureConnectorsApi.listAzureConnectors([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AzureConnectorsApi.list_azure_connectors([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AzureConnectorsApi.listAzureConnectors([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listAzureConnectors",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AzureConnectors"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view Azure Connectors."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AzureConnectorsApi;\r\nimport com.trendmicro.deepsecurity.model.AzureConnectors;\r\n\r\n\r\npublic class ListAzureConnectorsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAzureConnectorsApi instance = new AzureConnectorsApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAzureConnectors result = instance.listAzureConnectors(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AzureConnectorsApi.listAzureConnectors\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AzureConnectorsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_azure_connectors(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AzureConnectorsApi.list_azure_connectors: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AzureConnectorsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listAzureConnectors(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Azure Connectors"
        ],
        "summary": "Create an Azure Connector",
        "description": "Create a new Azure Connector. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AzureConnectorsApi.createAzureConnector([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AzureConnectorsApi.create_azure_connector([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AzureConnectorsApi.createAzureConnector([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createAzureConnector",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AzureConnector"
              }
            }
          },
          "description": "The settings of the new Azure Connector.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AzureConnector"
                }
              }
            }
          },
          "400": {
            "description": "Azure AD application not associated with subscription."
          },
          "403": {
            "description": "Not authorized to create Azure Connectors."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AzureConnectorsApi;\r\nimport com.trendmicro.deepsecurity.model.AzureConnector;\r\n\r\n\r\npublic class CreateAzureConnectorExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAzureConnectorsApi instance = new AzureConnectorsApi();\r\n\t\tAzureConnector azureConnector = new AzureConnector();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAzureConnector result = instance.createAzureConnector(azureConnector, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AzureConnectorsApi.createAzureConnector\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AzureConnectorsApi(deepsecurity.ApiClient(configuration))\r\nazure_connector = deepsecurity.AzureConnector()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_azure_connector(azure_connector, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AzureConnectorsApi.create_azure_connector: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AzureConnectorsApi();\r\nlet azureConnector = new Deepsecurity.AzureConnector();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createAzureConnector(azureConnector, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/azureconnectors/search": {
      "post": {
        "tags": [
          "Azure Connectors"
        ],
        "summary": "Search Azure Connectors",
        "description": "Search for Azure Connectors using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AzureConnectorsApi.searchAzureConnectors([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AzureConnectorsApi.search_azure_connectors([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>AzureConnectorsApi.searchAzureConnectors([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchAzureConnectors",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AzureConnectors"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view Azure Connectors."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.AzureConnectorsApi;\r\nimport com.trendmicro.deepsecurity.model.AzureConnectors;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchAzureConnectorsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tAzureConnectorsApi instance = new AzureConnectorsApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAzureConnectors result = instance.searchAzureConnectors(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling AzureConnectorsApi.searchAzureConnectors\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.AzureConnectorsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_azure_connectors(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling AzureConnectorsApi.search_azure_connectors: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.AzureConnectorsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchAzureConnectors(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/certificates": {
      "get": {
        "tags": [
          "Certificates"
        ],
        "summary": "List Certificates",
        "description": "List all SSL certificates. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>CertificatesApi.listCertificates([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>CertificatesApi.list_certificates([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>CertificatesApi.listCertificates([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listCertificates",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/certificates"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.CertificatesApi;\r\nimport com.trendmicro.deepsecurity.model.Certificates;\r\n\r\n\r\npublic class ListCertificatesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tCertificatesApi instance = new CertificatesApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tCertificates result = instance.listCertificates(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling CertificatesApi.listCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.CertificatesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_certificates(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling CertificatesApi.list_certificates: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.CertificatesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listCertificates(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Certificates"
        ],
        "summary": "Add a Certificate",
        "description": "Add a certificate to Deep Security Manager. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>CertificatesApi.addCertificate([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>CertificatesApi.add_certificate([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>CertificatesApi.addCertificate([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "addCertificate",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/certificate"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/certificate"
                }
              }
            }
          },
          "400": {
            "description": "The certificate is invalid or the requested certificate already exists."
          },
          "403": {
            "description": "Not authorized to add certificates."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.CertificatesApi;\r\nimport com.trendmicro.deepsecurity.model.Certificate;\r\n\r\n\r\npublic class AddCertificateExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tCertificatesApi instance = new CertificatesApi();\r\n\t\tCertificate certificate = new Certificate();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tCertificate result = instance.addCertificate(certificate, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling CertificatesApi.addCertificate\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.CertificatesApi(deepsecurity.ApiClient(configuration))\r\ncertificate = deepsecurity.Certificate()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.add_certificate(certificate, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling CertificatesApi.add_certificate: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.CertificatesApi();\r\nlet certificate = new Deepsecurity.Certificate();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.addCertificate(certificate, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/certificates/{certificateID}": {
      "get": {
        "tags": [
          "Certificates"
        ],
        "summary": "Describe a Certificate",
        "description": "Describe a certificate by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>CertificatesApi.describeCertificate([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>CertificatesApi.describe_certificate([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>CertificatesApi.describeCertificate([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeCertificate",
        "parameters": [
          {
            "name": "certificateID",
            "in": "path",
            "description": "The ID number of the certificate to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/certificate"
                }
              }
            }
          },
          "404": {
            "description": "The certificate does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.CertificatesApi;\r\nimport com.trendmicro.deepsecurity.model.Certificate;\r\n\r\n\r\npublic class DescribeCertificateExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tCertificatesApi instance = new CertificatesApi();\r\n\t\tInteger certificateID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tCertificate result = instance.describeCertificate(certificateID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling CertificatesApi.describeCertificate\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.CertificatesApi(deepsecurity.ApiClient(configuration))\r\ncertificate_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_certificate(certificate_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling CertificatesApi.describe_certificate: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.CertificatesApi();\r\nlet certificateID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeCertificate(certificateID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Certificates"
        ],
        "summary": "Delete a Certificate",
        "description": "Delete a certificate by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>CertificatesApi.deleteCertificate([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>CertificatesApi.delete_certificate([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>CertificatesApi.deleteCertificate([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteCertificate",
        "parameters": [
          {
            "name": "certificateID",
            "in": "path",
            "description": "The ID number of the certificate to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "204": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete certificates."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.CertificatesApi;\r\n\r\n\r\npublic class DeleteCertificateExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tCertificatesApi instance = new CertificatesApi();\r\n\t\tInteger certificateID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteCertificate(certificateID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling CertificatesApi.deleteCertificate\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.CertificatesApi(deepsecurity.ApiClient(configuration))\r\ncertificate_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_certificate(certificate_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling CertificatesApi.delete_certificate: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.CertificatesApi();\r\nlet certificateID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteCertificate(certificateID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/certificates/target": {
      "get": {
        "tags": [
          "Certificates"
        ],
        "summary": "Retrieve a Certificate by URL",
        "description": "Retrieve a certificate by URL <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>CertificatesApi.targetCertificate([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>CertificatesApi.target_certificate([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>CertificatesApi.targetCertificate([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "targetCertificate",
        "parameters": [
          {
            "name": "URL",
            "in": "query",
            "description": "The URL of the certificate to describe",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/certificate"
                }
              }
            }
          },
          "400": {
            "description": "The certificate does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.CertificatesApi;\r\nimport com.trendmicro.deepsecurity.model.Certificate;\r\n\r\n\r\npublic class TargetCertificateExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tCertificatesApi instance = new CertificatesApi();\r\n\t\tString URL = \"URL_example\";\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tCertificate result = instance.targetCertificate(URL, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling CertificatesApi.targetCertificate\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.CertificatesApi(deepsecurity.ApiClient(configuration))\r\nurl = 'url_example'\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.target_certificate(url, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling CertificatesApi.target_certificate: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.CertificatesApi();\r\nlet URL = \"URL_example\";\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.targetCertificate(URL, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/commonobjectimporttasks/{commonObjectImportTaskID}": {
      "get": {
        "tags": [
          "Common Object Import Tasks"
        ],
        "summary": "Describe a CommonObjectImportTask",
        "description": "Describe a common object import task by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>CommonObjectImportTasksApi.describeCommonObjectImportTask([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>CommonObjectImportTasksApi.describe_common_object_import_task([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>CommonObjectImportTasksApi.describeCommonObjectImportTask([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeCommonObjectImportTask",
        "parameters": [
          {
            "name": "commonObjectImportTaskID",
            "in": "path",
            "description": "The ID number of the common object import task to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "DefaultAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commonObjectImportTask"
                }
              }
            }
          },
          "404": {
            "description": "The common object import task does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.CommonObjectImportTasksApi;\r\nimport com.trendmicro.deepsecurity.model.CommonObjectImportTask;\r\n\r\n\r\npublic class DescribeCommonObjectImportTaskExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tCommonObjectImportTasksApi instance = new CommonObjectImportTasksApi();\r\n\t\tInteger commonObjectImportTaskID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tCommonObjectImportTask result = instance.describeCommonObjectImportTask(commonObjectImportTaskID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling CommonObjectImportTasksApi.describeCommonObjectImportTask\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.CommonObjectImportTasksApi(deepsecurity.ApiClient(configuration))\r\ncommon_object_import_task_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_common_object_import_task(common_object_import_task_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling CommonObjectImportTasksApi.describe_common_object_import_task: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.CommonObjectImportTasksApi();\r\nlet commonObjectImportTaskID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeCommonObjectImportTask(commonObjectImportTaskID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/commonobjectimporttasks": {
      "get": {
        "tags": [
          "Common Object Import Tasks"
        ],
        "summary": "List CommonObjectImportTasks",
        "description": "List all common object import tasks. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>CommonObjectImportTasksApi.listCommonObjectImportTasks([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>CommonObjectImportTasksApi.list_common_object_import_tasks([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>CommonObjectImportTasksApi.listCommonObjectImportTasks([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listCommonObjectImportTasks",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "DefaultAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commonObjectImportTasks"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.CommonObjectImportTasksApi;\r\nimport com.trendmicro.deepsecurity.model.CommonObjectImportTasks;\r\n\r\n\r\npublic class ListCommonObjectImportTasksExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tCommonObjectImportTasksApi instance = new CommonObjectImportTasksApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tCommonObjectImportTasks result = instance.listCommonObjectImportTasks(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling CommonObjectImportTasksApi.listCommonObjectImportTasks\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.CommonObjectImportTasksApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_common_object_import_tasks(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling CommonObjectImportTasksApi.list_common_object_import_tasks: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.CommonObjectImportTasksApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listCommonObjectImportTasks(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Common Object Import Tasks"
        ],
        "summary": "Create a CommonObjectImportTask",
        "description": "Create a task to import common objects. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>CommonObjectImportTasksApi.createCommonObjectImportTask([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>CommonObjectImportTasksApi.create_common_object_import_task([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>CommonObjectImportTasksApi.createCommonObjectImportTask([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createCommonObjectImportTask",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/commonObjectImportTask"
              }
            }
          },
          "description": "Common object import task to create."
        },
        "security": [
          {
            "DefaultAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commonObjectImportTask"
                }
              }
            }
          },
          "400": {
            "description": "The common object import task is invalid."
          },
          "403": {
            "description": "Not authorized to import common objects."
          },
          "409": {
            "description": "A common object import task is still in progress for this type."
          },
          "413": {
            "description": "The given common object content is too large."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.CommonObjectImportTasksApi;\r\nimport com.trendmicro.deepsecurity.model.CommonObjectImportTask;\r\n\r\n\r\npublic class CreateCommonObjectImportTaskExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tCommonObjectImportTasksApi instance = new CommonObjectImportTasksApi();\r\n\t\tCommonObjectImportTask commonObjectImportTask = new CommonObjectImportTask();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tCommonObjectImportTask result = instance.createCommonObjectImportTask(commonObjectImportTask, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling CommonObjectImportTasksApi.createCommonObjectImportTask\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.CommonObjectImportTasksApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\ncommon_object_import_task = deepsecurity.CommonObjectImportTask()\r\n\r\ntry:\r\n\tapi_response = api_instance.create_common_object_import_task(api_version, common_object_import_task=common_object_import_task)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling CommonObjectImportTasksApi.create_common_object_import_task: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.CommonObjectImportTasksApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  commonObjectImportTask: new Deepsecurity.CommonObjectImportTask(),\r\n};\r\n\r\napiInstance.createCommonObjectImportTask(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/commonobjectimporttasks/search": {
      "post": {
        "tags": [
          "Common Object Import Tasks"
        ],
        "summary": "Search CommonObjectImportTasks",
        "description": "Search for CommonObjectImportTasks using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>CommonObjectImportTasksApi.searchCommonObjectImportTasks([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>CommonObjectImportTasksApi.search_common_object_import_tasks([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>CommonObjectImportTasksApi.searchCommonObjectImportTasks([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchCommonObjectImportTasks",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "DefaultAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commonObjectImportTasks"
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.CommonObjectImportTasksApi;\r\nimport com.trendmicro.deepsecurity.model.CommonObjectImportTasks;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchCommonObjectImportTasksExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tCommonObjectImportTasksApi instance = new CommonObjectImportTasksApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tCommonObjectImportTasks result = instance.searchCommonObjectImportTasks(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling CommonObjectImportTasksApi.searchCommonObjectImportTasks\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.CommonObjectImportTasksApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_common_object_import_tasks(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling CommonObjectImportTasksApi.search_common_object_import_tasks: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.CommonObjectImportTasksApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchCommonObjectImportTasks(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/computers": {
      "get": {
        "tags": [
          "Computers"
        ],
        "summary": "List Computers",
        "description": "Lists all computers. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputersApi.listComputers([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputersApi.list_computers([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputersApi.listComputers([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listComputers",
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Determines the computer information to include in the response. Use \"none\" to retrieve only basic computer information such as policyID and hostName. Use one or several expand options to retrieve a tailored response in addition to the basic information. Use \"all\" to retrieve all of the computer information. The default is \"all\", but we recommend using \"none\" or a limited set of options on all requests to improve performance.",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "none",
                  "all",
                  "computerStatus",
                  "tasks",
                  "securityUpdates",
                  "computerSettings",
                  "allSecurityModules",
                  "antiMalware",
                  "webReputation",
                  "activityMonitoring",
                  "deviceControl",
                  "firewall",
                  "intrusionPrevention",
                  "integrityMonitoring",
                  "logInspection",
                  "applicationControl",
                  "SAP",
                  "interfaces",
                  "ESXSummary",
                  "allVirtualMachineSummaries",
                  "azureARMVirtualMachineSummary",
                  "azureVMVirtualMachineSummary",
                  "ec2VirtualMachineSummary",
                  "noConnectorVirtualMachineSummary",
                  "vmwareVMVirtualMachineSummary",
                  "vcloudVMVirtualMachineSummary",
                  "workspaceVirtualMachineSummary",
                  "gcpVirtualMachineSummary"
                ]
              }
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Computers"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view computers."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputersApi;\r\nimport com.trendmicro.deepsecurity.model.Computers;\r\nimport com.trendmicro.deepsecurity.model.Expand;\r\n\r\nimport java.util.List;\r\n\r\npublic class ListComputersExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputersApi instance = new ComputersApi();\r\n\t\tList<String> expand = new Expand(Expand.OptionsEnum.NONE).list();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tComputers result = instance.listComputers(expand, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputersApi.listComputers\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputersApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nexpand_options = deepsecurity.Expand()\r\nexpand_options.add(expand_options.none)\r\nexpand = expand_options.list()\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.list_computers(api_version, expand=expand, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputersApi.list_computers: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputersApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  expand: [Deepsecurity.Expand.OptionsEnum.none],\r\n  overrides: false,\r\n};\r\n\r\napiInstance.listComputers(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Computers"
        ],
        "summary": "Create a Computer",
        "description": "Create a new computer. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputersApi.createComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputersApi.create_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputersApi.createComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createComputer",
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Determines the computer information to include in the response. Use \"none\" to retrieve only basic computer information such as policyID and hostName. Use one or several expand options to retrieve a tailored response in addition to the basic information. Use \"all\" to retrieve all of the computer information. The default is \"all\", but we recommend using \"none\" or a limited set of options on all requests to improve performance.",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "none",
                  "all",
                  "computerStatus",
                  "tasks",
                  "securityUpdates",
                  "computerSettings",
                  "allSecurityModules",
                  "antiMalware",
                  "webReputation",
                  "activityMonitoring",
                  "deviceControl",
                  "firewall",
                  "intrusionPrevention",
                  "integrityMonitoring",
                  "logInspection",
                  "applicationControl",
                  "SAP",
                  "interfaces",
                  "ESXSummary",
                  "allVirtualMachineSummaries",
                  "azureARMVirtualMachineSummary",
                  "azureVMVirtualMachineSummary",
                  "ec2VirtualMachineSummary",
                  "noConnectorVirtualMachineSummary",
                  "vmwareVMVirtualMachineSummary",
                  "vcloudVMVirtualMachineSummary",
                  "workspaceVirtualMachineSummary",
                  "gcpVirtualMachineSummary"
                ]
              }
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/computer"
              }
            }
          },
          "description": "The settings of the new computer.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/computer"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create computers."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputersApi;\r\nimport com.trendmicro.deepsecurity.model.Computer;\r\nimport com.trendmicro.deepsecurity.model.Expand;\r\n\r\nimport java.util.List;\r\n\r\npublic class CreateComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputersApi instance = new ComputersApi();\r\n\t\tComputer computer = new Computer();\r\n\t\tList<String> expand = new Expand(Expand.OptionsEnum.NONE).list();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tComputer result = instance.createComputer(computer, expand, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputersApi.createComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputersApi(deepsecurity.ApiClient(configuration))\r\ncomputer = deepsecurity.Computer()\r\napi_version = 'YOUR VERSION'\r\nexpand_options = deepsecurity.Expand()\r\nexpand_options.add(expand_options.none)\r\nexpand = expand_options.list()\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.create_computer(computer, api_version, expand=expand, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputersApi.create_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputersApi();\r\nlet computer = new Deepsecurity.Computer();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  expand: [Deepsecurity.Expand.OptionsEnum.none],\r\n  overrides: false,\r\n};\r\n\r\napiInstance.createComputer(computer, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Computers"
        ],
        "summary": "Delete Computers",
        "description": "Batch delete computers by a list of IDs. You cannot use this operation to delete a computer that is managed by a connector. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputersApi.deleteComputers([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputersApi.delete_computers([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputersApi.deleteComputers([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteComputers",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComputersToBeDeletedIDList"
              }
            }
          },
          "description": "The ID list of the computers to be deleted.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete computers."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputersApi;\r\nimport com.trendmicro.deepsecurity.model.ComputersToBeDeletedIDList;\r\n\r\n\r\npublic class DeleteComputersExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputersApi instance = new ComputersApi();\r\n\t\tComputersToBeDeletedIDList idList = new ComputersToBeDeletedIDList();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteComputers(idList, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputersApi.deleteComputers\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputersApi(deepsecurity.ApiClient(configuration))\r\nid_list = deepsecurity.ComputersToBeDeletedIDList()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_computers(id_list, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputersApi.delete_computers: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputersApi();\r\nlet idList = new Deepsecurity.ComputersToBeDeletedIDList();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteComputers(idList, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/computers/search": {
      "post": {
        "tags": [
          "Computers"
        ],
        "summary": "Search Computers",
        "description": "Search for computers using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputersApi.searchComputers([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputersApi.search_computers([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputersApi.searchComputers([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchComputers",
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Determines the computer information to include in the response. Use \"none\" to retrieve only basic computer information such as policyID and hostName. Use one or several expand options to retrieve a tailored response in addition to the basic information. Use \"all\" to retrieve all of the computer information. The default is \"all\", but we recommend using \"none\" or a limited set of options on all requests to improve performance.",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "none",
                  "all",
                  "computerStatus",
                  "tasks",
                  "securityUpdates",
                  "computerSettings",
                  "allSecurityModules",
                  "antiMalware",
                  "webReputation",
                  "activityMonitoring",
                  "deviceControl",
                  "firewall",
                  "intrusionPrevention",
                  "integrityMonitoring",
                  "logInspection",
                  "applicationControl",
                  "SAP",
                  "interfaces",
                  "ESXSummary",
                  "allVirtualMachineSummaries",
                  "azureARMVirtualMachineSummary",
                  "azureVMVirtualMachineSummary",
                  "ec2VirtualMachineSummary",
                  "noConnectorVirtualMachineSummary",
                  "vmwareVMVirtualMachineSummary",
                  "vcloudVMVirtualMachineSummary",
                  "workspaceVirtualMachineSummary",
                  "gcpVirtualMachineSummary"
                ]
              }
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Computers"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view computers."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputersApi;\r\nimport com.trendmicro.deepsecurity.model.Computers;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\nimport com.trendmicro.deepsecurity.model.Expand;\r\n\r\nimport java.util.List;\r\n\r\npublic class SearchComputersExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputersApi instance = new ComputersApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tList<String> expand = new Expand(Expand.OptionsEnum.NONE).list();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tComputers result = instance.searchComputers(searchFilter, expand, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputersApi.searchComputers\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputersApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\nexpand_options = deepsecurity.Expand()\r\nexpand_options.add(expand_options.none)\r\nexpand = expand_options.list()\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.search_computers(api_version, search_filter=search_filter, expand=expand, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputersApi.search_computers: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputersApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n  expand: [Deepsecurity.Expand.OptionsEnum.none],\r\n  overrides: false,\r\n};\r\n\r\napiInstance.searchComputers(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/computers/{computerID}": {
      "get": {
        "tags": [
          "Computers"
        ],
        "summary": "Describe a Computer",
        "description": "Describe a computer by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputersApi.describeComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputersApi.describe_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputersApi.describeComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Determines the computer information to include in the response. Use \"none\" to retrieve only basic computer information such as policyID and hostName. Use one or several expand options to retrieve a tailored response in addition to the basic information. Use \"all\" to retrieve all of the computer information. The default is \"all\", but we recommend using \"none\" or a limited set of options on all requests to improve performance.",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "none",
                  "all",
                  "computerStatus",
                  "tasks",
                  "securityUpdates",
                  "computerSettings",
                  "allSecurityModules",
                  "antiMalware",
                  "webReputation",
                  "activityMonitoring",
                  "deviceControl",
                  "firewall",
                  "intrusionPrevention",
                  "integrityMonitoring",
                  "logInspection",
                  "applicationControl",
                  "SAP",
                  "interfaces",
                  "ESXSummary",
                  "allVirtualMachineSummaries",
                  "azureARMVirtualMachineSummary",
                  "azureVMVirtualMachineSummary",
                  "ec2VirtualMachineSummary",
                  "noConnectorVirtualMachineSummary",
                  "vmwareVMVirtualMachineSummary",
                  "vcloudVMVirtualMachineSummary",
                  "workspaceVirtualMachineSummary",
                  "gcpVirtualMachineSummary"
                ]
              }
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/computer"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view computers."
          },
          "404": {
            "description": "The computer does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputersApi;\r\nimport com.trendmicro.deepsecurity.model.Computer;\r\nimport com.trendmicro.deepsecurity.model.Expand;\r\n\r\nimport java.util.List;\r\n\r\npublic class DescribeComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputersApi instance = new ComputersApi();\r\n\t\tInteger computerID = 1;\r\n\t\tList<String> expand = new Expand(Expand.OptionsEnum.NONE).list();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tComputer result = instance.describeComputer(computerID, expand, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputersApi.describeComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputersApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\napi_version = 'YOUR VERSION'\r\nexpand_options = deepsecurity.Expand()\r\nexpand_options.add(expand_options.none)\r\nexpand = expand_options.list()\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_computer(computer_id, api_version, expand=expand, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputersApi.describe_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputersApi();\r\nlet computerID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  expand: [Deepsecurity.Expand.OptionsEnum.none],\r\n  overrides: false,\r\n};\r\n\r\napiInstance.describeComputer(computerID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Computers"
        ],
        "summary": "Modify a Computer",
        "description": "Modify a computer by ID. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputersApi.modifyComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputersApi.modify_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputersApi.modifyComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Determines the computer information to include in the response. Use \"none\" to retrieve only basic computer information such as policyID and hostName. Use one or several expand options to retrieve a tailored response in addition to the basic information. Use \"all\" to retrieve all of the computer information. The default is \"all\", but we recommend using \"none\" or a limited set of options on all requests to improve performance.",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "none",
                  "all",
                  "computerStatus",
                  "tasks",
                  "securityUpdates",
                  "computerSettings",
                  "allSecurityModules",
                  "antiMalware",
                  "webReputation",
                  "activityMonitoring",
                  "deviceControl",
                  "firewall",
                  "intrusionPrevention",
                  "integrityMonitoring",
                  "logInspection",
                  "applicationControl",
                  "SAP",
                  "interfaces",
                  "ESXSummary",
                  "allVirtualMachineSummaries",
                  "azureARMVirtualMachineSummary",
                  "azureVMVirtualMachineSummary",
                  "ec2VirtualMachineSummary",
                  "noConnectorVirtualMachineSummary",
                  "vmwareVMVirtualMachineSummary",
                  "vcloudVMVirtualMachineSummary",
                  "workspaceVirtualMachineSummary",
                  "gcpVirtualMachineSummary"
                ]
              }
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/computer"
              }
            }
          },
          "description": "The settings of the computer to modify.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/computer"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify computers or the requested modification is not permitted."
          },
          "404": {
            "description": "The computer does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputersApi;\r\nimport com.trendmicro.deepsecurity.model.Computer;\r\nimport com.trendmicro.deepsecurity.model.Expand;\r\n\r\nimport java.util.List;\r\n\r\npublic class ModifyComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputersApi instance = new ComputersApi();\r\n\t\tInteger computerID = 1;\r\n\t\tComputer computer = new Computer();\r\n\t\tList<String> expand = new Expand(Expand.OptionsEnum.NONE).list();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tComputer result = instance.modifyComputer(computerID, computer, expand, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputersApi.modifyComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputersApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\ncomputer = deepsecurity.Computer()\r\napi_version = 'YOUR VERSION'\r\nexpand_options = deepsecurity.Expand()\r\nexpand_options.add(expand_options.none)\r\nexpand = expand_options.list()\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_computer(computer_id, computer, api_version, expand=expand, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputersApi.modify_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputersApi();\r\nlet computerID = 1;\r\nlet computer = new Deepsecurity.Computer();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  expand: [Deepsecurity.Expand.OptionsEnum.none],\r\n  overrides: false,\r\n};\r\n\r\napiInstance.modifyComputer(computerID, computer, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Computers"
        ],
        "summary": "Delete a Computer",
        "description": "Delete a computer by ID. You cannot use this operation to delete a computer that is managed by a connector. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputersApi.deleteComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputersApi.delete_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputersApi.deleteComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete computers."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputersApi;\r\n\r\n\r\npublic class DeleteComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputersApi instance = new ComputersApi();\r\n\t\tInteger computerID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteComputer(computerID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputersApi.deleteComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputersApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_computer(computer_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputersApi.delete_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputersApi();\r\nlet computerID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteComputer(computerID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/computers/{computerID}/settings/{name}": {
      "get": {
        "tags": [
          "Computers"
        ],
        "summary": "Describe a Computer Setting",
        "description": "Return the value for a computer setting. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputersApi.describeComputerSetting([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputersApi.describe_computer_setting([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputersApi.describeComputerSetting([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeComputerSetting",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the setting.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show the value only if defined for the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingValue"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view settings."
          },
          "404": {
            "description": "The setting does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputersApi;\r\nimport com.trendmicro.deepsecurity.model.SettingValue;\r\n\r\n\r\npublic class DescribeComputerSettingExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputersApi instance = new ComputersApi();\r\n\t\tInteger computerID = 1;\r\n\t\tString name = \"name_example\";\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSettingValue result = instance.describeComputerSetting(computerID, name, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputersApi.describeComputerSetting\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputersApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\nname = 'name_example'\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_computer_setting(computer_id, name, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputersApi.describe_computer_setting: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputersApi();\r\nlet computerID = 1;\r\nlet name = \"name_example\";\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.describeComputerSetting(computerID, name, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Computers"
        ],
        "summary": "Modify a Computer Setting",
        "description": "Modify the value for a computer setting. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputersApi.modifyComputerSetting([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputersApi.modify_computer_setting([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputersApi.modifyComputerSetting([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyComputerSetting",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the setting.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show the value only if defined for the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettingValue"
              }
            }
          },
          "description": "The new value for the setting.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingValue"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify settings or the requested modification is not permitted."
          },
          "404": {
            "description": "The setting does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputersApi;\r\nimport com.trendmicro.deepsecurity.model.SettingValue;\r\n\r\n\r\npublic class ModifyComputerSettingExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputersApi instance = new ComputersApi();\r\n\t\tInteger computerID = 1;\r\n\t\tString name = \"name_example\";\r\n\t\tSettingValue value = new SettingValue();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSettingValue result = instance.modifyComputerSetting(computerID, name, value, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputersApi.modifyComputerSetting\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputersApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\nname = 'name_example'\r\nvalue = deepsecurity.SettingValue()\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_computer_setting(computer_id, name, value, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputersApi.modify_computer_setting: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputersApi();\r\nlet computerID = 1;\r\nlet name = \"name_example\";\r\nlet value = new Deepsecurity.SettingValue();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.modifyComputerSetting(computerID, name, value, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Computers"
        ],
        "summary": "Reset a Computer Setting",
        "description": "Reset the value for a computer setting. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputersApi.resetComputerSetting([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputersApi.reset_computer_setting([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputersApi.resetComputerSetting([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "resetComputerSetting",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the setting.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show the value only if defined for the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingValue"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify settings or the requested modification is not permitted."
          },
          "404": {
            "description": "The setting does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputersApi;\r\nimport com.trendmicro.deepsecurity.model.SettingValue;\r\n\r\n\r\npublic class ResetComputerSettingExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputersApi instance = new ComputersApi();\r\n\t\tInteger computerID = 1;\r\n\t\tString name = \"name_example\";\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSettingValue result = instance.resetComputerSetting(computerID, name, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputersApi.resetComputerSetting\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputersApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\nname = 'name_example'\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.reset_computer_setting(computer_id, name, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputersApi.reset_computer_setting: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputersApi();\r\nlet computerID = 1;\r\nlet name = \"name_example\";\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.resetComputerSetting(computerID, name, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/computers/{computerID}/devicecontrol/usbdeviceexceptionrules": {
      "get": {
        "tags": [
          "Computer Device Control Exception Rules"
        ],
        "summary": "List Device Exception Rules",
        "description": "Lists all device exception rules assigned to a computer. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerDeviceControlExceptionRulesApi.listExceptionRulesOnComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerDeviceControlExceptionRulesApi.list_exception_rules_on_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerDeviceControlExceptionRulesApi.listExceptionRulesOnComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listExceptionRulesOnComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only Exception Rules directly related to the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionRules"
                }
              }
            }
          },
          "403": {
            "description": "User or API key is not authorized to view the computer."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerDeviceControlExceptionRulesApi;\r\nimport com.trendmicro.deepsecurity.model.ExceptionRules;\r\n\r\n\r\npublic class ListExceptionRulesOnComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerDeviceControlExceptionRulesApi instance = new ComputerDeviceControlExceptionRulesApi();\r\n\t\tInteger computerID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tExceptionRules result = instance.listExceptionRulesOnComputer(computerID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerDeviceControlExceptionRulesApi.listExceptionRulesOnComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerDeviceControlExceptionRulesApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.list_exception_rules_on_computer(computer_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerDeviceControlExceptionRulesApi.list_exception_rules_on_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerDeviceControlExceptionRulesApi();\r\nlet computerID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.listExceptionRulesOnComputer(computerID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Computer Device Control Exception Rules"
        ],
        "summary": "Add Device Exception Rules",
        "description": "Assign device exception rules to a computer. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerDeviceControlExceptionRulesApi.addExceptionRulesOnComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerDeviceControlExceptionRulesApi.add_exception_rules_on_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerDeviceControlExceptionRulesApi.addExceptionRulesOnComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "addExceptionRulesOnComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only Exception Rules directly related to the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ExceptionRules"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionRules"
                }
              }
            }
          },
          "403": {
            "description": "User or API key is not authorized to modify the computer or the requested modification is not permitted."
          },
          "404": {
            "description": "The computer does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerDeviceControlExceptionRulesApi;\r\nimport com.trendmicro.deepsecurity.model.ExceptionRules;\r\n\r\n\r\npublic class AddExceptionRulesOnComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerDeviceControlExceptionRulesApi instance = new ComputerDeviceControlExceptionRulesApi();\r\n\t\tInteger computerID = 1;\r\n\t\tExceptionRules exceptionRules = new ExceptionRules();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tExceptionRules result = instance.addExceptionRulesOnComputer(computerID, exceptionRules, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerDeviceControlExceptionRulesApi.addExceptionRulesOnComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerDeviceControlExceptionRulesApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\nexception_rules = deepsecurity.ExceptionRules()\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.add_exception_rules_on_computer(computer_id, exception_rules, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerDeviceControlExceptionRulesApi.add_exception_rules_on_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerDeviceControlExceptionRulesApi();\r\nlet computerID = 1;\r\nlet exceptionRules = new Deepsecurity.ExceptionRules();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.addExceptionRulesOnComputer(computerID, exceptionRules, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "put": {
        "tags": [
          "Computer Device Control Exception Rules"
        ],
        "summary": "Set Device Exception Rules",
        "description": "Set device exception rules assigned to a computer. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerDeviceControlExceptionRulesApi.setExceptionRulesOnComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerDeviceControlExceptionRulesApi.set_exception_rules_on_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerDeviceControlExceptionRulesApi.setExceptionRulesOnComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "setExceptionRulesOnComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only Exception Rules directly related to the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ExceptionRules"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionRules"
                }
              }
            }
          },
          "403": {
            "description": "User or API key is not authorized to modify the computer or the requested modification is not permitted."
          },
          "404": {
            "description": "The computer does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerDeviceControlExceptionRulesApi;\r\nimport com.trendmicro.deepsecurity.model.ExceptionRules;\r\n\r\n\r\npublic class SetExceptionRulesOnComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerDeviceControlExceptionRulesApi instance = new ComputerDeviceControlExceptionRulesApi();\r\n\t\tInteger computerID = 1;\r\n\t\tExceptionRules exceptionRules = new ExceptionRules();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tExceptionRules result = instance.setExceptionRulesOnComputer(computerID, exceptionRules, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerDeviceControlExceptionRulesApi.setExceptionRulesOnComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerDeviceControlExceptionRulesApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\nexception_rules = deepsecurity.ExceptionRules()\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.set_exception_rules_on_computer(computer_id, exception_rules, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerDeviceControlExceptionRulesApi.set_exception_rules_on_computer: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerDeviceControlExceptionRulesApi();\r\nlet computerID = 1;\r\nlet exceptionRules = new Deepsecurity.ExceptionRules();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.setExceptionRulesOnComputer(computerID, exceptionRules, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/computers/{computerID}/devicecontrol/usbdeviceexceptionrules/{exceptionRuleID}": {
      "delete": {
        "tags": [
          "Computer Device Control Exception Rules"
        ],
        "summary": "Remove a Device Exception Rule",
        "description": "Unassign a device exception rule from a computer. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerDeviceControlExceptionRulesApi.removeExceptionRuleOnComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerDeviceControlExceptionRulesApi.remove_exception_rule_on_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerDeviceControlExceptionRulesApi.removeExceptionRuleOnComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "removeExceptionRuleOnComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "exceptionRuleID",
            "in": "path",
            "description": "The ID number of the Exception Rule to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only Exception Rules directly related to the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionRules"
                }
              }
            }
          },
          "403": {
            "description": "User or API key is not authorized to modify the computer or the requested modification is not permitted."
          },
          "404": {
            "description": "The computer does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerDeviceControlExceptionRulesApi;\r\nimport com.trendmicro.deepsecurity.model.ExceptionRules;\r\n\r\n\r\npublic class RemoveExceptionRuleOnComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerDeviceControlExceptionRulesApi instance = new ComputerDeviceControlExceptionRulesApi();\r\n\t\tInteger computerID = 1;\r\n\t\tLong exceptionRuleID = 1L;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tExceptionRules result = instance.removeExceptionRuleOnComputer(computerID, exceptionRuleID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerDeviceControlExceptionRulesApi.removeExceptionRuleOnComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerDeviceControlExceptionRulesApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\nexception_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.remove_exception_rule_on_computer(computer_id, exception_rule_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerDeviceControlExceptionRulesApi.remove_exception_rule_on_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerDeviceControlExceptionRulesApi();\r\nlet computerID = 1;\r\nlet exceptionRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.removeExceptionRuleOnComputer(computerID, exceptionRuleID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/computers/{computerID}/firewall/assignments": {
      "get": {
        "tags": [
          "Computer Firewall Rule Assignments"
        ],
        "summary": "List Firewall Rule IDs",
        "description": "Lists all firewall rule IDs assigned to a computer. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerFirewallRuleAssignmentsApi.listFirewallRuleIDsOnComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerFirewallRuleAssignmentsApi.list_firewall_rule_ids_on_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerFirewallRuleAssignmentsApi.listFirewallRuleIDsOnComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listFirewallRuleIDsOnComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only rule IDs assigned directly to the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firewallAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the computer."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerFirewallRuleAssignmentsApi;\r\nimport com.trendmicro.deepsecurity.model.FirewallAssignments;\r\n\r\n\r\npublic class ListFirewallRuleIDsOnComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerFirewallRuleAssignmentsApi instance = new ComputerFirewallRuleAssignmentsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tFirewallAssignments result = instance.listFirewallRuleIDsOnComputer(computerID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerFirewallRuleAssignmentsApi.listFirewallRuleIDsOnComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerFirewallRuleAssignmentsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.list_firewall_rule_ids_on_computer(computer_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerFirewallRuleAssignmentsApi.list_firewall_rule_ids_on_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerFirewallRuleAssignmentsApi();\r\nlet computerID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.listFirewallRuleIDsOnComputer(computerID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Computer Firewall Rule Assignments"
        ],
        "summary": "Add Firewall Rule IDs",
        "description": "Assign firewall rule IDs to a computer. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerFirewallRuleAssignmentsApi.addFirewallRuleIDsToComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerFirewallRuleAssignmentsApi.add_firewall_rule_ids_to_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerFirewallRuleAssignmentsApi.addFirewallRuleIDsToComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "addFirewallRuleIDsToComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only rule IDs assigned directly to the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/RuleIDs5"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firewallAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the computer or the requested modification is not permitted."
          },
          "404": {
            "description": "The computer does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerFirewallRuleAssignmentsApi;\r\nimport com.trendmicro.deepsecurity.model.RuleIDs;\r\nimport com.trendmicro.deepsecurity.model.FirewallAssignments;\r\n\r\n\r\npublic class AddFirewallRuleIDsToComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerFirewallRuleAssignmentsApi instance = new ComputerFirewallRuleAssignmentsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tRuleIDs firewallRuleIDs = new RuleIDs();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tFirewallAssignments result = instance.addFirewallRuleIDsToComputer(computerID, firewallRuleIDs, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerFirewallRuleAssignmentsApi.addFirewallRuleIDsToComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerFirewallRuleAssignmentsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\nfirewall_rule_ids = deepsecurity.RuleIDs()\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.add_firewall_rule_ids_to_computer(computer_id, firewall_rule_ids, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerFirewallRuleAssignmentsApi.add_firewall_rule_ids_to_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerFirewallRuleAssignmentsApi();\r\nlet computerID = 1;\r\nlet firewallRuleIDs = new Deepsecurity.RuleIDs();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.addFirewallRuleIDsToComputer(computerID, firewallRuleIDs, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "put": {
        "tags": [
          "Computer Firewall Rule Assignments"
        ],
        "summary": "Set Firewall Rule IDs",
        "description": "Set firewall rule IDs assigned to a computer. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerFirewallRuleAssignmentsApi.setFirewallRuleIDsOnComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerFirewallRuleAssignmentsApi.set_firewall_rule_ids_on_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerFirewallRuleAssignmentsApi.setFirewallRuleIDsOnComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "setFirewallRuleIDsOnComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only rule IDs assigned directly to the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/RuleIDs4"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firewallAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the computer or the requested modification is not permitted."
          },
          "404": {
            "description": "The computer does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerFirewallRuleAssignmentsApi;\r\nimport com.trendmicro.deepsecurity.model.RuleIDs;\r\nimport com.trendmicro.deepsecurity.model.FirewallAssignments;\r\n\r\n\r\npublic class SetFirewallRuleIDsOnComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerFirewallRuleAssignmentsApi instance = new ComputerFirewallRuleAssignmentsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tRuleIDs firewallRuleIDs = new RuleIDs();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tFirewallAssignments result = instance.setFirewallRuleIDsOnComputer(computerID, firewallRuleIDs, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerFirewallRuleAssignmentsApi.setFirewallRuleIDsOnComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerFirewallRuleAssignmentsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\napi_version = 'YOUR VERSION'\r\nfirewall_rule_ids = deepsecurity.RuleIDs()\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.set_firewall_rule_ids_on_computer(computer_id, api_version, firewall_rule_ids=firewall_rule_ids, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerFirewallRuleAssignmentsApi.set_firewall_rule_ids_on_computer: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerFirewallRuleAssignmentsApi();\r\nlet computerID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  firewallRuleIDs: new Deepsecurity.RuleIDs(),\r\n  overrides: false,\r\n};\r\n\r\napiInstance.setFirewallRuleIDsOnComputer(computerID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/computers/{computerID}/firewall/assignments/{firewallRuleID}": {
      "delete": {
        "tags": [
          "Computer Firewall Rule Assignments"
        ],
        "summary": "Remove a Firewall Rule ID",
        "description": "Unassign a firewall rule ID from a computer. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerFirewallRuleAssignmentsApi.removeFirewallRuleIDFromComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerFirewallRuleAssignmentsApi.remove_firewall_rule_id_from_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerFirewallRuleAssignmentsApi.removeFirewallRuleIDFromComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "removeFirewallRuleIDFromComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "firewallRuleID",
            "in": "path",
            "description": "The ID number of the firewall rule to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only rule IDs assigned directly to the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firewallAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the computer or the requested modification is not permitted."
          },
          "404": {
            "description": "The computer does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerFirewallRuleAssignmentsApi;\r\nimport com.trendmicro.deepsecurity.model.FirewallAssignments;\r\n\r\n\r\npublic class RemoveFirewallRuleIDFromComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerFirewallRuleAssignmentsApi instance = new ComputerFirewallRuleAssignmentsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tInteger firewallRuleID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tFirewallAssignments result = instance.removeFirewallRuleIDFromComputer(computerID, firewallRuleID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerFirewallRuleAssignmentsApi.removeFirewallRuleIDFromComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerFirewallRuleAssignmentsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\nfirewall_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.remove_firewall_rule_id_from_computer(computer_id, firewall_rule_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerFirewallRuleAssignmentsApi.remove_firewall_rule_id_from_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerFirewallRuleAssignmentsApi();\r\nlet computerID = 1;\r\nlet firewallRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.removeFirewallRuleIDFromComputer(computerID, firewallRuleID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/computers/{computerID}/firewall/rules": {
      "get": {
        "tags": [
          "Computer Firewall Rule Details"
        ],
        "summary": "List firewall rules",
        "description": "Lists all firewall rules assigned to a computer. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerFirewallRuleDetailsApi.listFirewallRulesOnComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerFirewallRuleDetailsApi.list_firewall_rules_on_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerFirewallRuleDetailsApi.listFirewallRulesOnComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listFirewallRulesOnComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only rules assigned to the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FirewallRules"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the computer."
          },
          "404": {
            "description": "The computer does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerFirewallRuleDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.FirewallRules;\r\n\r\n\r\npublic class ListFirewallRulesOnComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerFirewallRuleDetailsApi instance = new ComputerFirewallRuleDetailsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tFirewallRules result = instance.listFirewallRulesOnComputer(computerID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerFirewallRuleDetailsApi.listFirewallRulesOnComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerFirewallRuleDetailsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.list_firewall_rules_on_computer(computer_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerFirewallRuleDetailsApi.list_firewall_rules_on_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerFirewallRuleDetailsApi();\r\nlet computerID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.listFirewallRulesOnComputer(computerID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/computers/{computerID}/firewall/rules/{firewallRuleID}": {
      "get": {
        "tags": [
          "Computer Firewall Rule Details"
        ],
        "summary": "Describe a firewall rule",
        "description": "Describe a firewall rule including computer-level overrides. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerFirewallRuleDetailsApi.describeFirewallRuleOnComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerFirewallRuleDetailsApi.describe_firewall_rule_on_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerFirewallRuleDetailsApi.describeFirewallRuleOnComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeFirewallRuleOnComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "firewallRuleID",
            "in": "path",
            "description": "The ID number of the firewall rule.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firewallRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the computer."
          },
          "404": {
            "description": "The computer does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerFirewallRuleDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.FirewallRule;\r\n\r\n\r\npublic class DescribeFirewallRuleOnComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerFirewallRuleDetailsApi instance = new ComputerFirewallRuleDetailsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tInteger firewallRuleID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tFirewallRule result = instance.describeFirewallRuleOnComputer(computerID, firewallRuleID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerFirewallRuleDetailsApi.describeFirewallRuleOnComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerFirewallRuleDetailsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\nfirewall_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_firewall_rule_on_computer(computer_id, firewall_rule_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerFirewallRuleDetailsApi.describe_firewall_rule_on_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerFirewallRuleDetailsApi();\r\nlet computerID = 1;\r\nlet firewallRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.describeFirewallRuleOnComputer(computerID, firewallRuleID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Computer Firewall Rule Details"
        ],
        "summary": "Modify a firewall rule",
        "description": "Modify a firewall rule assigned to a computer. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerFirewallRuleDetailsApi.modifyFirewallRuleOnComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerFirewallRuleDetailsApi.modify_firewall_rule_on_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerFirewallRuleDetailsApi.modifyFirewallRuleOnComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyFirewallRuleOnComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "firewallRuleID",
            "in": "path",
            "description": "The ID number of the firewall rule to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/firewallRule"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firewallRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the computer or the requested modification is not permitted."
          },
          "404": {
            "description": "The firewall rule does not exist or the computer does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerFirewallRuleDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.FirewallRule;\r\n\r\n\r\npublic class ModifyFirewallRuleOnComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerFirewallRuleDetailsApi instance = new ComputerFirewallRuleDetailsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tInteger firewallRuleID = 1;\r\n\t\tFirewallRule firewallRule = new FirewallRule();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tFirewallRule result = instance.modifyFirewallRuleOnComputer(computerID, firewallRuleID, firewallRule, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerFirewallRuleDetailsApi.modifyFirewallRuleOnComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerFirewallRuleDetailsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\nfirewall_rule_id = 1\r\nfirewall_rule = deepsecurity.FirewallRule()\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_firewall_rule_on_computer(computer_id, firewall_rule_id, firewall_rule, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerFirewallRuleDetailsApi.modify_firewall_rule_on_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerFirewallRuleDetailsApi();\r\nlet computerID = 1;\r\nlet firewallRuleID = 1;\r\nlet firewallRule = new Deepsecurity.FirewallRule();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.modifyFirewallRuleOnComputer(computerID, firewallRuleID, firewallRule, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Computer Firewall Rule Details"
        ],
        "summary": "Reset firewall rule overrides",
        "description": "Remove all overrides for a firewall rule from a computer. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerFirewallRuleDetailsApi.resetFirewallRuleOnComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerFirewallRuleDetailsApi.reset_firewall_rule_on_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerFirewallRuleDetailsApi.resetFirewallRuleOnComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "resetFirewallRuleOnComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "firewallRuleID",
            "in": "path",
            "description": "The ID number of the firewall rule to reset.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firewallRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the computer."
          },
          "404": {
            "description": "The computer does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerFirewallRuleDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.FirewallRule;\r\n\r\n\r\npublic class ResetFirewallRuleOnComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerFirewallRuleDetailsApi instance = new ComputerFirewallRuleDetailsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tInteger firewallRuleID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tFirewallRule result = instance.resetFirewallRuleOnComputer(computerID, firewallRuleID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerFirewallRuleDetailsApi.resetFirewallRuleOnComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerFirewallRuleDetailsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\nfirewall_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.reset_firewall_rule_on_computer(computer_id, firewall_rule_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerFirewallRuleDetailsApi.reset_firewall_rule_on_computer: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerFirewallRuleDetailsApi();\r\nlet computerID = 1;\r\nlet firewallRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.resetFirewallRuleOnComputer(computerID, firewallRuleID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/computergroups": {
      "get": {
        "tags": [
          "Computer Groups"
        ],
        "summary": "List Computer Groups",
        "description": "Lists all computer groups. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerGroupsApi.listComputerGroups([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerGroupsApi.list_computer_groups([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerGroupsApi.listComputerGroups([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listComputerGroups",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComputerGroups"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view computer groups."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerGroupsApi;\r\nimport com.trendmicro.deepsecurity.model.ComputerGroups;\r\n\r\n\r\npublic class ListComputerGroupsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerGroupsApi instance = new ComputerGroupsApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tComputerGroups result = instance.listComputerGroups(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerGroupsApi.listComputerGroups\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerGroupsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_computer_groups(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerGroupsApi.list_computer_groups: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerGroupsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listComputerGroups(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Computer Groups"
        ],
        "summary": "Create a Computer Group",
        "description": "Create a new computer group. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerGroupsApi.createComputerGroup([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerGroupsApi.create_computer_group([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerGroupsApi.createComputerGroup([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createComputerGroup",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/computerGroup"
              }
            }
          },
          "description": "The settings of the new computer group.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/computerGroup"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create computer groups."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerGroupsApi;\r\nimport com.trendmicro.deepsecurity.model.ComputerGroup;\r\n\r\n\r\npublic class CreateComputerGroupExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerGroupsApi instance = new ComputerGroupsApi();\r\n\t\tComputerGroup computerGroup = new ComputerGroup();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tComputerGroup result = instance.createComputerGroup(computerGroup, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerGroupsApi.createComputerGroup\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerGroupsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_group = deepsecurity.ComputerGroup()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_computer_group(computer_group, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerGroupsApi.create_computer_group: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerGroupsApi();\r\nlet computerGroup = new Deepsecurity.ComputerGroup();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createComputerGroup(computerGroup, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/computergroups/search": {
      "post": {
        "tags": [
          "Computer Groups"
        ],
        "summary": "Search Computer Groups",
        "description": "Search for computer groups using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerGroupsApi.searchComputerGroups([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerGroupsApi.search_computer_groups([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerGroupsApi.searchComputerGroups([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchComputerGroups",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComputerGroups"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view computer groups."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerGroupsApi;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\nimport com.trendmicro.deepsecurity.model.ComputerGroups;\r\n\r\n\r\npublic class SearchComputerGroupsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerGroupsApi instance = new ComputerGroupsApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tComputerGroups result = instance.searchComputerGroups(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerGroupsApi.searchComputerGroups\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerGroupsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_computer_groups(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerGroupsApi.search_computer_groups: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerGroupsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchComputerGroups(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/computergroups/{computerGroupID}": {
      "get": {
        "tags": [
          "Computer Groups"
        ],
        "summary": "Describe a Computer Group",
        "description": "Describe a computer group by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerGroupsApi.describeComputerGroup([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerGroupsApi.describe_computer_group([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerGroupsApi.describeComputerGroup([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeComputerGroup",
        "parameters": [
          {
            "name": "computerGroupID",
            "in": "path",
            "description": "The ID number of the computer group to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/computerGroup"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view computer groups."
          },
          "404": {
            "description": "The computer group does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerGroupsApi;\r\nimport com.trendmicro.deepsecurity.model.ComputerGroup;\r\n\r\n\r\npublic class DescribeComputerGroupExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerGroupsApi instance = new ComputerGroupsApi();\r\n\t\tInteger computerGroupID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tComputerGroup result = instance.describeComputerGroup(computerGroupID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerGroupsApi.describeComputerGroup\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerGroupsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_group_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_computer_group(computer_group_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerGroupsApi.describe_computer_group: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerGroupsApi();\r\nlet computerGroupID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeComputerGroup(computerGroupID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Computer Groups"
        ],
        "summary": "Modify a Computer Group",
        "description": "Modify a computer group by ID. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerGroupsApi.modifyComputerGroup([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerGroupsApi.modify_computer_group([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerGroupsApi.modifyComputerGroup([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyComputerGroup",
        "parameters": [
          {
            "name": "computerGroupID",
            "in": "path",
            "description": "The ID number of the computer group to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/computerGroup"
              }
            }
          },
          "description": "The settings of the computer group to modify."
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/computerGroup"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify computer groups or the requested modification is not permitted."
          },
          "404": {
            "description": "The computer group does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerGroupsApi;\r\nimport com.trendmicro.deepsecurity.model.ComputerGroup;\r\n\r\n\r\npublic class ModifyComputerGroupExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerGroupsApi instance = new ComputerGroupsApi();\r\n\t\tInteger computerGroupID = 1;\r\n\t\tComputerGroup computerGroup = new ComputerGroup();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tComputerGroup result = instance.modifyComputerGroup(computerGroupID, computerGroup, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerGroupsApi.modifyComputerGroup\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerGroupsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_group_id = 1\r\napi_version = 'YOUR VERSION'\r\ncomputer_group = deepsecurity.ComputerGroup()\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_computer_group(computer_group_id, api_version, computer_group=computer_group)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerGroupsApi.modify_computer_group: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerGroupsApi();\r\nlet computerGroupID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  computerGroup: new Deepsecurity.ComputerGroup(),\r\n};\r\n\r\napiInstance.modifyComputerGroup(computerGroupID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Computer Groups"
        ],
        "summary": "Delete a Computer Group",
        "description": "Delete a computer group by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerGroupsApi.deleteComputerGroup([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerGroupsApi.delete_computer_group([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerGroupsApi.deleteComputerGroup([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteComputerGroup",
        "parameters": [
          {
            "name": "computerGroupID",
            "in": "path",
            "description": "The ID number of the computer group to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete computer groups."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerGroupsApi;\r\n\r\n\r\npublic class DeleteComputerGroupExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerGroupsApi instance = new ComputerGroupsApi();\r\n\t\tInteger computerGroupID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteComputerGroup(computerGroupID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerGroupsApi.deleteComputerGroup\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerGroupsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_group_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_computer_group(computer_group_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerGroupsApi.delete_computer_group: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerGroupsApi();\r\nlet computerGroupID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteComputerGroup(computerGroupID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/computers/{computerID}/integritymonitoring/assignments": {
      "get": {
        "tags": [
          "Computer Integrity Monitoring Rule Assignments & Recommendations"
        ],
        "summary": "List Assigned Integrity Monitoring Rule IDs",
        "description": "Lists all integrity monitoring rule IDs assigned to a computer. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi.listIntegrityMonitoringRuleIDsOnComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi.list_integrity_monitoring_rule_ids_on_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi.listIntegrityMonitoringRuleIDsOnComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listIntegrityMonitoringRuleIDsOnComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only rule IDs assigned directly to the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/integrityMonitoringAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the computer."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi;\r\nimport com.trendmicro.deepsecurity.model.IntegrityMonitoringAssignments;\r\n\r\n\r\npublic class ListIntegrityMonitoringRuleIDsOnComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi instance = new ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntegrityMonitoringAssignments result = instance.listIntegrityMonitoringRuleIDsOnComputer(computerID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi.listIntegrityMonitoringRuleIDsOnComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.list_integrity_monitoring_rule_ids_on_computer(computer_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi.list_integrity_monitoring_rule_ids_on_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi();\r\nlet computerID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.listIntegrityMonitoringRuleIDsOnComputer(computerID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Computer Integrity Monitoring Rule Assignments & Recommendations"
        ],
        "summary": "Add Integrity Monitoring Rule IDs",
        "description": "Assign integrity monitoring rule IDs to a computer. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi.addIntegrityMonitoringRuleIDsToComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi.add_integrity_monitoring_rule_ids_to_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi.addIntegrityMonitoringRuleIDsToComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "addIntegrityMonitoringRuleIDsToComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only rule IDs assigned directly to the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/RuleIDs6"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/integrityMonitoringAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the computer or the requested modification is not permitted."
          },
          "404": {
            "description": "The computer does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi;\r\nimport com.trendmicro.deepsecurity.model.RuleIDs;\r\nimport com.trendmicro.deepsecurity.model.IntegrityMonitoringAssignments;\r\n\r\n\r\npublic class AddIntegrityMonitoringRuleIDsToComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi instance = new ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tRuleIDs integrityMonitoringRuleIDs = new RuleIDs();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntegrityMonitoringAssignments result = instance.addIntegrityMonitoringRuleIDsToComputer(computerID, integrityMonitoringRuleIDs, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi.addIntegrityMonitoringRuleIDsToComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\napi_version = 'YOUR VERSION'\r\nintegrity_monitoring_rule_ids = deepsecurity.RuleIDs()\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.add_integrity_monitoring_rule_ids_to_computer(computer_id, api_version, integrity_monitoring_rule_ids=integrity_monitoring_rule_ids, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi.add_integrity_monitoring_rule_ids_to_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi();\r\nlet computerID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  integrityMonitoringRuleIDs: new Deepsecurity.RuleIDs(),\r\n  overrides: false,\r\n};\r\n\r\napiInstance.addIntegrityMonitoringRuleIDsToComputer(computerID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "put": {
        "tags": [
          "Computer Integrity Monitoring Rule Assignments & Recommendations"
        ],
        "summary": "Set Integrity Monitoring Rule IDs",
        "description": "Set integrity monitoring rule IDs assigned to a computer. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi.setIntegrityMonitoringRuleIDsOnComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi.set_integrity_monitoring_rule_ids_on_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi.setIntegrityMonitoringRuleIDsOnComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "setIntegrityMonitoringRuleIDsOnComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only rule IDs assigned directly to the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/RuleIDs7"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/integrityMonitoringAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the computer or the requested modification is not permitted."
          },
          "404": {
            "description": "The computer does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi;\r\nimport com.trendmicro.deepsecurity.model.RuleIDs;\r\nimport com.trendmicro.deepsecurity.model.IntegrityMonitoringAssignments;\r\n\r\n\r\npublic class SetIntegrityMonitoringRuleIDsOnComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi instance = new ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tRuleIDs integrityMonitoringRuleIDs = new RuleIDs();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntegrityMonitoringAssignments result = instance.setIntegrityMonitoringRuleIDsOnComputer(computerID, integrityMonitoringRuleIDs, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi.setIntegrityMonitoringRuleIDsOnComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\napi_version = 'YOUR VERSION'\r\nintegrity_monitoring_rule_ids = deepsecurity.RuleIDs()\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.set_integrity_monitoring_rule_ids_on_computer(computer_id, api_version, integrity_monitoring_rule_ids=integrity_monitoring_rule_ids, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi.set_integrity_monitoring_rule_ids_on_computer: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi();\r\nlet computerID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  integrityMonitoringRuleIDs: new Deepsecurity.RuleIDs(),\r\n  overrides: false,\r\n};\r\n\r\napiInstance.setIntegrityMonitoringRuleIDsOnComputer(computerID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/computers/{computerID}/integritymonitoring/assignments/{integrityMonitoringRuleID}": {
      "delete": {
        "tags": [
          "Computer Integrity Monitoring Rule Assignments & Recommendations"
        ],
        "summary": "Remove an Integrity Monitoring Rule ID",
        "description": "Unassign an integrity monitoring rule ID from a computer. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi.removeIntegrityMonitoringRuleIDFromComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi.remove_integrity_monitoring_rule_id_from_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi.removeIntegrityMonitoringRuleIDFromComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "removeIntegrityMonitoringRuleIDFromComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "integrityMonitoringRuleID",
            "in": "path",
            "description": "The ID number of the integrity monitoring rule to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only rule IDs assigned directly to the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/integrityMonitoringAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the computer or the requested modification is not permitted."
          },
          "404": {
            "description": "The computer does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi;\r\nimport com.trendmicro.deepsecurity.model.IntegrityMonitoringAssignments;\r\n\r\n\r\npublic class RemoveIntegrityMonitoringRuleIDFromComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi instance = new ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tInteger integrityMonitoringRuleID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntegrityMonitoringAssignments result = instance.removeIntegrityMonitoringRuleIDFromComputer(computerID, integrityMonitoringRuleID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi.removeIntegrityMonitoringRuleIDFromComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\nintegrity_monitoring_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.remove_integrity_monitoring_rule_id_from_computer(computer_id, integrity_monitoring_rule_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi.remove_integrity_monitoring_rule_id_from_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerIntegrityMonitoringRuleAssignmentsRecommendationsApi();\r\nlet computerID = 1;\r\nlet integrityMonitoringRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.removeIntegrityMonitoringRuleIDFromComputer(computerID, integrityMonitoringRuleID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/computers/{computerID}/integritymonitoring/rules": {
      "get": {
        "tags": [
          "Computer Integrity Monitoring Rule Details"
        ],
        "summary": "List integrity monitoring rules",
        "description": "Lists all integrity monitoring rules assigned to a computer. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntegrityMonitoringRuleDetailsApi.listIntegrityMonitoringRulesOnComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntegrityMonitoringRuleDetailsApi.list_integrity_monitoring_rules_on_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntegrityMonitoringRuleDetailsApi.listIntegrityMonitoringRulesOnComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listIntegrityMonitoringRulesOnComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only rules assigned to the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrityMonitoringRules"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the computer."
          },
          "404": {
            "description": "The computer does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerIntegrityMonitoringRuleDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.IntegrityMonitoringRules;\r\n\r\n\r\npublic class ListIntegrityMonitoringRulesOnComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerIntegrityMonitoringRuleDetailsApi instance = new ComputerIntegrityMonitoringRuleDetailsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntegrityMonitoringRules result = instance.listIntegrityMonitoringRulesOnComputer(computerID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerIntegrityMonitoringRuleDetailsApi.listIntegrityMonitoringRulesOnComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerIntegrityMonitoringRuleDetailsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.list_integrity_monitoring_rules_on_computer(computer_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerIntegrityMonitoringRuleDetailsApi.list_integrity_monitoring_rules_on_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerIntegrityMonitoringRuleDetailsApi();\r\nlet computerID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.listIntegrityMonitoringRulesOnComputer(computerID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/computers/{computerID}/integritymonitoring/rules/{integrityMonitoringRuleID}": {
      "get": {
        "tags": [
          "Computer Integrity Monitoring Rule Details"
        ],
        "summary": "Describe an integrity monitoring rule",
        "description": "Describe an integrity monitoring rule including computer-level overrides. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntegrityMonitoringRuleDetailsApi.describeIntegrityMonitoringRuleOnComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntegrityMonitoringRuleDetailsApi.describe_integrity_monitoring_rule_on_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntegrityMonitoringRuleDetailsApi.describeIntegrityMonitoringRuleOnComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeIntegrityMonitoringRuleOnComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "integrityMonitoringRuleID",
            "in": "path",
            "description": "The ID number of the integrity monitoring rule.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/integrityMonitoringRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the computer."
          },
          "404": {
            "description": "The computer or integrity monitoring rule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerIntegrityMonitoringRuleDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.IntegrityMonitoringRule;\r\n\r\n\r\npublic class DescribeIntegrityMonitoringRuleOnComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerIntegrityMonitoringRuleDetailsApi instance = new ComputerIntegrityMonitoringRuleDetailsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tInteger integrityMonitoringRuleID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntegrityMonitoringRule result = instance.describeIntegrityMonitoringRuleOnComputer(computerID, integrityMonitoringRuleID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerIntegrityMonitoringRuleDetailsApi.describeIntegrityMonitoringRuleOnComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerIntegrityMonitoringRuleDetailsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\nintegrity_monitoring_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_integrity_monitoring_rule_on_computer(computer_id, integrity_monitoring_rule_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerIntegrityMonitoringRuleDetailsApi.describe_integrity_monitoring_rule_on_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerIntegrityMonitoringRuleDetailsApi();\r\nlet computerID = 1;\r\nlet integrityMonitoringRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.describeIntegrityMonitoringRuleOnComputer(computerID, integrityMonitoringRuleID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Computer Integrity Monitoring Rule Details"
        ],
        "summary": "Modify an integrity monitoring rule",
        "description": "Modify an integrity monitoring rule assigned to a computer. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntegrityMonitoringRuleDetailsApi.modifyIntegrityMonitoringRuleOnComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntegrityMonitoringRuleDetailsApi.modify_integrity_monitoring_rule_on_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntegrityMonitoringRuleDetailsApi.modifyIntegrityMonitoringRuleOnComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyIntegrityMonitoringRuleOnComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "integrityMonitoringRuleID",
            "in": "path",
            "description": "The ID number of the integrity monitoring rule to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/integrityMonitoringRule"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/integrityMonitoringRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the computer or the requested modification is not permitted."
          },
          "404": {
            "description": "The computer or integrity monitoring rule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerIntegrityMonitoringRuleDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.IntegrityMonitoringRule;\r\n\r\n\r\npublic class ModifyIntegrityMonitoringRuleOnComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerIntegrityMonitoringRuleDetailsApi instance = new ComputerIntegrityMonitoringRuleDetailsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tInteger integrityMonitoringRuleID = 1;\r\n\t\tIntegrityMonitoringRule integrityMonitoringRule = new IntegrityMonitoringRule();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntegrityMonitoringRule result = instance.modifyIntegrityMonitoringRuleOnComputer(computerID, integrityMonitoringRuleID, integrityMonitoringRule, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerIntegrityMonitoringRuleDetailsApi.modifyIntegrityMonitoringRuleOnComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerIntegrityMonitoringRuleDetailsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\nintegrity_monitoring_rule_id = 1\r\nintegrity_monitoring_rule = deepsecurity.IntegrityMonitoringRule()\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_integrity_monitoring_rule_on_computer(computer_id, integrity_monitoring_rule_id, integrity_monitoring_rule, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerIntegrityMonitoringRuleDetailsApi.modify_integrity_monitoring_rule_on_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerIntegrityMonitoringRuleDetailsApi();\r\nlet computerID = 1;\r\nlet integrityMonitoringRuleID = 1;\r\nlet integrityMonitoringRule = new Deepsecurity.IntegrityMonitoringRule();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.modifyIntegrityMonitoringRuleOnComputer(computerID, integrityMonitoringRuleID, integrityMonitoringRule, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Computer Integrity Monitoring Rule Details"
        ],
        "summary": "Reset integrity monitoring rule overrides",
        "description": "Remove all overrides for an integrity monitoring rule from a computer. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntegrityMonitoringRuleDetailsApi.resetIntegrityMonitoringRuleOnComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntegrityMonitoringRuleDetailsApi.reset_integrity_monitoring_rule_on_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntegrityMonitoringRuleDetailsApi.resetIntegrityMonitoringRuleOnComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "resetIntegrityMonitoringRuleOnComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "integrityMonitoringRuleID",
            "in": "path",
            "description": "The ID number of the integrity monitoring rule to reset.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/integrityMonitoringRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the computer."
          },
          "404": {
            "description": "The computer does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerIntegrityMonitoringRuleDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.IntegrityMonitoringRule;\r\n\r\n\r\npublic class ResetIntegrityMonitoringRuleOnComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerIntegrityMonitoringRuleDetailsApi instance = new ComputerIntegrityMonitoringRuleDetailsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tInteger integrityMonitoringRuleID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntegrityMonitoringRule result = instance.resetIntegrityMonitoringRuleOnComputer(computerID, integrityMonitoringRuleID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerIntegrityMonitoringRuleDetailsApi.resetIntegrityMonitoringRuleOnComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerIntegrityMonitoringRuleDetailsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\nintegrity_monitoring_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.reset_integrity_monitoring_rule_on_computer(computer_id, integrity_monitoring_rule_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerIntegrityMonitoringRuleDetailsApi.reset_integrity_monitoring_rule_on_computer: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerIntegrityMonitoringRuleDetailsApi();\r\nlet computerID = 1;\r\nlet integrityMonitoringRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.resetIntegrityMonitoringRuleOnComputer(computerID, integrityMonitoringRuleID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/computers/{computerID}/intrusionprevention/assignments": {
      "get": {
        "tags": [
          "Computer Intrusion Prevention Rule Assignments & Recommendations"
        ],
        "summary": "List Intrusion Prevention Rule IDs",
        "description": "Lists all intrusion prevention rule IDs assigned to a computer. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi.listIntrusionPreventionRuleIDsOnComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi.list_intrusion_prevention_rule_ids_on_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi.listIntrusionPreventionRuleIDsOnComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listIntrusionPreventionRuleIDsOnComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only rule IDs assigned directly to the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/intrusionPreventionAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the computer."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi;\r\nimport com.trendmicro.deepsecurity.model.IntrusionPreventionAssignments;\r\n\r\n\r\npublic class ListIntrusionPreventionRuleIDsOnComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerIntrusionPreventionRuleAssignmentsRecommendationsApi instance = new ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntrusionPreventionAssignments result = instance.listIntrusionPreventionRuleIDsOnComputer(computerID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi.listIntrusionPreventionRuleIDsOnComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.list_intrusion_prevention_rule_ids_on_computer(computer_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi.list_intrusion_prevention_rule_ids_on_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi();\r\nlet computerID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.listIntrusionPreventionRuleIDsOnComputer(computerID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Computer Intrusion Prevention Rule Assignments & Recommendations"
        ],
        "summary": "Add Intrusion Prevention Rule IDs",
        "description": "Assign intrusion prevention rule IDs to a computer. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi.addIntrusionPreventionRuleIDsToComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi.add_intrusion_prevention_rule_ids_to_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi.addIntrusionPreventionRuleIDsToComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "addIntrusionPreventionRuleIDsToComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only rule IDs assigned directly to the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/RuleIDs8"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/intrusionPreventionAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the computer or the requested modification is not permitted."
          },
          "404": {
            "description": "The computer does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi;\r\nimport com.trendmicro.deepsecurity.model.RuleIDs;\r\nimport com.trendmicro.deepsecurity.model.IntrusionPreventionAssignments;\r\n\r\n\r\npublic class AddIntrusionPreventionRuleIDsToComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerIntrusionPreventionRuleAssignmentsRecommendationsApi instance = new ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tRuleIDs intrusionPreventionRuleIDs = new RuleIDs();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntrusionPreventionAssignments result = instance.addIntrusionPreventionRuleIDsToComputer(computerID, intrusionPreventionRuleIDs, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi.addIntrusionPreventionRuleIDsToComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\napi_version = 'YOUR VERSION'\r\nintrusion_prevention_rule_ids = deepsecurity.RuleIDs()\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.add_intrusion_prevention_rule_ids_to_computer(computer_id, api_version, intrusion_prevention_rule_ids=intrusion_prevention_rule_ids, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi.add_intrusion_prevention_rule_ids_to_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi();\r\nlet computerID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  intrusionPreventionRuleIDs: new Deepsecurity.RuleIDs(),\r\n  overrides: false,\r\n};\r\n\r\napiInstance.addIntrusionPreventionRuleIDsToComputer(computerID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "put": {
        "tags": [
          "Computer Intrusion Prevention Rule Assignments & Recommendations"
        ],
        "summary": "Set Intrusion Prevention Rule IDs",
        "description": "Set intrusion prevention rule IDs assigned to a computer. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi.setIntrusionPreventionRuleIDsOnComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi.set_intrusion_prevention_rule_ids_on_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi.setIntrusionPreventionRuleIDsOnComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "setIntrusionPreventionRuleIDsOnComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only rule IDs assigned directly to the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/RuleIDs"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/intrusionPreventionAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the computer or the requested modification is not permitted."
          },
          "404": {
            "description": "The computer does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi;\r\nimport com.trendmicro.deepsecurity.model.RuleIDs;\r\nimport com.trendmicro.deepsecurity.model.IntrusionPreventionAssignments;\r\n\r\n\r\npublic class SetIntrusionPreventionRuleIDsOnComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerIntrusionPreventionRuleAssignmentsRecommendationsApi instance = new ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tRuleIDs intrusionPreventionRuleIDs = new RuleIDs();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntrusionPreventionAssignments result = instance.setIntrusionPreventionRuleIDsOnComputer(computerID, intrusionPreventionRuleIDs, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi.setIntrusionPreventionRuleIDsOnComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\napi_version = 'YOUR VERSION'\r\nintrusion_prevention_rule_ids = deepsecurity.RuleIDs()\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.set_intrusion_prevention_rule_ids_on_computer(computer_id, api_version, intrusion_prevention_rule_ids=intrusion_prevention_rule_ids, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi.set_intrusion_prevention_rule_ids_on_computer: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi();\r\nlet computerID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  intrusionPreventionRuleIDs: new Deepsecurity.RuleIDs(),\r\n  overrides: false,\r\n};\r\n\r\napiInstance.setIntrusionPreventionRuleIDsOnComputer(computerID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/computers/{computerID}/intrusionprevention/assignments/{intrusionPreventionRuleID}": {
      "delete": {
        "tags": [
          "Computer Intrusion Prevention Rule Assignments & Recommendations"
        ],
        "summary": "Remove an Intrusion Prevention Rule ID",
        "description": "Unassign an intrusion prevention rule ID from a computer. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi.removeIntrusionPreventionRuleIDFromComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi.remove_intrusion_prevention_rule_id_from_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi.removeIntrusionPreventionRuleIDFromComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "removeIntrusionPreventionRuleIDFromComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "intrusionPreventionRuleID",
            "in": "path",
            "description": "The ID number of the intrusion prevention rule to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only rule IDs assigned directly to the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/intrusionPreventionAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the computer or the requested modification is not permitted."
          },
          "404": {
            "description": "The computer does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi;\r\nimport com.trendmicro.deepsecurity.model.IntrusionPreventionAssignments;\r\n\r\n\r\npublic class RemoveIntrusionPreventionRuleIDFromComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerIntrusionPreventionRuleAssignmentsRecommendationsApi instance = new ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tInteger intrusionPreventionRuleID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntrusionPreventionAssignments result = instance.removeIntrusionPreventionRuleIDFromComputer(computerID, intrusionPreventionRuleID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi.removeIntrusionPreventionRuleIDFromComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\nintrusion_prevention_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.remove_intrusion_prevention_rule_id_from_computer(computer_id, intrusion_prevention_rule_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi.remove_intrusion_prevention_rule_id_from_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerIntrusionPreventionRuleAssignmentsRecommendationsApi();\r\nlet computerID = 1;\r\nlet intrusionPreventionRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.removeIntrusionPreventionRuleIDFromComputer(computerID, intrusionPreventionRuleID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/computers/{computerID}/intrusionprevention/applicationtypes": {
      "get": {
        "tags": [
          "Computer Intrusion Prevention Application Type Details"
        ],
        "summary": "List intrusion prevention application types",
        "description": "Lists all intrusion prevention application types assigned to a computer. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionApplicationTypeDetailsApi.listIntrusionPreventionApplicationTypesOnComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionApplicationTypeDetailsApi.list_intrusion_prevention_application_types_on_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionApplicationTypeDetailsApi.listIntrusionPreventionApplicationTypesOnComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listIntrusionPreventionApplicationTypesOnComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only application types assigned to the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationTypes"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the computer."
          },
          "404": {
            "description": "The computer does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerIntrusionPreventionApplicationTypeDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.ApplicationTypes;\r\n\r\n\r\npublic class ListIntrusionPreventionApplicationTypesOnComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerIntrusionPreventionApplicationTypeDetailsApi instance = new ComputerIntrusionPreventionApplicationTypeDetailsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApplicationTypes result = instance.listIntrusionPreventionApplicationTypesOnComputer(computerID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerIntrusionPreventionApplicationTypeDetailsApi.listIntrusionPreventionApplicationTypesOnComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerIntrusionPreventionApplicationTypeDetailsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.list_intrusion_prevention_application_types_on_computer(computer_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerIntrusionPreventionApplicationTypeDetailsApi.list_intrusion_prevention_application_types_on_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerIntrusionPreventionApplicationTypeDetailsApi();\r\nlet computerID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.listIntrusionPreventionApplicationTypesOnComputer(computerID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/computers/{computerID}/intrusionprevention/applicationtypes/{applicationTypeID}": {
      "get": {
        "tags": [
          "Computer Intrusion Prevention Application Type Details"
        ],
        "summary": "Describe an intrusion prevention application type",
        "description": "Describe an intrusion prevention application type including computer-level overrides. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionApplicationTypeDetailsApi.describeIntrusionPreventionApplicationTypeOnComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionApplicationTypeDetailsApi.describe_intrusion_prevention_application_type_on_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionApplicationTypeDetailsApi.describeIntrusionPreventionApplicationTypeOnComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeIntrusionPreventionApplicationTypeOnComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "applicationTypeID",
            "in": "path",
            "description": "The ID number of the application type.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/applicationType"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the computer."
          },
          "404": {
            "description": "The computer or application type does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerIntrusionPreventionApplicationTypeDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.ApplicationType;\r\n\r\n\r\npublic class DescribeIntrusionPreventionApplicationTypeOnComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerIntrusionPreventionApplicationTypeDetailsApi instance = new ComputerIntrusionPreventionApplicationTypeDetailsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tInteger applicationTypeID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApplicationType result = instance.describeIntrusionPreventionApplicationTypeOnComputer(computerID, applicationTypeID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerIntrusionPreventionApplicationTypeDetailsApi.describeIntrusionPreventionApplicationTypeOnComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerIntrusionPreventionApplicationTypeDetailsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\napplication_type_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_intrusion_prevention_application_type_on_computer(computer_id, application_type_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerIntrusionPreventionApplicationTypeDetailsApi.describe_intrusion_prevention_application_type_on_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerIntrusionPreventionApplicationTypeDetailsApi();\r\nlet computerID = 1;\r\nlet applicationTypeID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.describeIntrusionPreventionApplicationTypeOnComputer(computerID, applicationTypeID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Computer Intrusion Prevention Application Type Details"
        ],
        "summary": "Modify an intrusion prevention application type",
        "description": "Modify an intrusion prevention application type assigned to a computer. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionApplicationTypeDetailsApi.modifyIntrusionPreventionApplicationTypeOnComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionApplicationTypeDetailsApi.modify_intrusion_prevention_application_type_on_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionApplicationTypeDetailsApi.modifyIntrusionPreventionApplicationTypeOnComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyIntrusionPreventionApplicationTypeOnComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "applicationTypeID",
            "in": "path",
            "description": "The ID number of the application type to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/applicationType"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/applicationType"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the computer or the requested modification is not permitted."
          },
          "404": {
            "description": "The computer or application type does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerIntrusionPreventionApplicationTypeDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.ApplicationType;\r\n\r\n\r\npublic class ModifyIntrusionPreventionApplicationTypeOnComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerIntrusionPreventionApplicationTypeDetailsApi instance = new ComputerIntrusionPreventionApplicationTypeDetailsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tInteger applicationTypeID = 1;\r\n\t\tApplicationType applicationType = new ApplicationType();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApplicationType result = instance.modifyIntrusionPreventionApplicationTypeOnComputer(computerID, applicationTypeID, applicationType, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerIntrusionPreventionApplicationTypeDetailsApi.modifyIntrusionPreventionApplicationTypeOnComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerIntrusionPreventionApplicationTypeDetailsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\napplication_type_id = 1\r\napplication_type = deepsecurity.ApplicationType()\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_intrusion_prevention_application_type_on_computer(computer_id, application_type_id, application_type, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerIntrusionPreventionApplicationTypeDetailsApi.modify_intrusion_prevention_application_type_on_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerIntrusionPreventionApplicationTypeDetailsApi();\r\nlet computerID = 1;\r\nlet applicationTypeID = 1;\r\nlet applicationType = new Deepsecurity.ApplicationType();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.modifyIntrusionPreventionApplicationTypeOnComputer(computerID, applicationTypeID, applicationType, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Computer Intrusion Prevention Application Type Details"
        ],
        "summary": "Reset intrusion prevention application type overrides",
        "description": "Remove all overrides for an intrusion prevention application type from a computer. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionApplicationTypeDetailsApi.resetIntrusionPreventionApplicationTypeOnComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionApplicationTypeDetailsApi.reset_intrusion_prevention_application_type_on_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionApplicationTypeDetailsApi.resetIntrusionPreventionApplicationTypeOnComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "resetIntrusionPreventionApplicationTypeOnComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "applicationTypeID",
            "in": "path",
            "description": "The ID number of the application type to reset.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/applicationType"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the computer."
          },
          "404": {
            "description": "The computer does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerIntrusionPreventionApplicationTypeDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.ApplicationType;\r\n\r\n\r\npublic class ResetIntrusionPreventionApplicationTypeOnComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerIntrusionPreventionApplicationTypeDetailsApi instance = new ComputerIntrusionPreventionApplicationTypeDetailsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tInteger applicationTypeID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApplicationType result = instance.resetIntrusionPreventionApplicationTypeOnComputer(computerID, applicationTypeID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerIntrusionPreventionApplicationTypeDetailsApi.resetIntrusionPreventionApplicationTypeOnComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerIntrusionPreventionApplicationTypeDetailsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\napplication_type_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.reset_intrusion_prevention_application_type_on_computer(computer_id, application_type_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerIntrusionPreventionApplicationTypeDetailsApi.reset_intrusion_prevention_application_type_on_computer: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerIntrusionPreventionApplicationTypeDetailsApi();\r\nlet computerID = 1;\r\nlet applicationTypeID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.resetIntrusionPreventionApplicationTypeOnComputer(computerID, applicationTypeID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/computers/{computerID}/intrusionprevention/rules": {
      "get": {
        "tags": [
          "Computer Intrusion Prevention Rule Details"
        ],
        "summary": "List intrusion prevention rules",
        "description": "Lists all intrusion prevention rules assigned to a computer. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionRuleDetailsApi.listIntrusionPreventionRulesOnComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionRuleDetailsApi.list_intrusion_prevention_rules_on_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionRuleDetailsApi.listIntrusionPreventionRulesOnComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listIntrusionPreventionRulesOnComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only rules assigned to the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntrusionPreventionRules"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the computer."
          },
          "404": {
            "description": "The computer does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerIntrusionPreventionRuleDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.IntrusionPreventionRules;\r\n\r\n\r\npublic class ListIntrusionPreventionRulesOnComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerIntrusionPreventionRuleDetailsApi instance = new ComputerIntrusionPreventionRuleDetailsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntrusionPreventionRules result = instance.listIntrusionPreventionRulesOnComputer(computerID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerIntrusionPreventionRuleDetailsApi.listIntrusionPreventionRulesOnComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerIntrusionPreventionRuleDetailsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.list_intrusion_prevention_rules_on_computer(computer_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerIntrusionPreventionRuleDetailsApi.list_intrusion_prevention_rules_on_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerIntrusionPreventionRuleDetailsApi();\r\nlet computerID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.listIntrusionPreventionRulesOnComputer(computerID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/computers/{computerID}/intrusionprevention/rules/{intrusionPreventionRuleID}": {
      "get": {
        "tags": [
          "Computer Intrusion Prevention Rule Details"
        ],
        "summary": "Describe an intrusion prevention rule",
        "description": "Describe an intrusion prevention rule including computer-level overrides. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionRuleDetailsApi.describeIntrusionPreventionRuleOnComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionRuleDetailsApi.describe_intrusion_prevention_rule_on_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionRuleDetailsApi.describeIntrusionPreventionRuleOnComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeIntrusionPreventionRuleOnComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "intrusionPreventionRuleID",
            "in": "path",
            "description": "The ID number of the intrusion prevention rule.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/intrusionPreventionRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the computer."
          },
          "404": {
            "description": "The computer or intrusion prevention rule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerIntrusionPreventionRuleDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.IntrusionPreventionRule;\r\n\r\n\r\npublic class DescribeIntrusionPreventionRuleOnComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerIntrusionPreventionRuleDetailsApi instance = new ComputerIntrusionPreventionRuleDetailsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tInteger intrusionPreventionRuleID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntrusionPreventionRule result = instance.describeIntrusionPreventionRuleOnComputer(computerID, intrusionPreventionRuleID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerIntrusionPreventionRuleDetailsApi.describeIntrusionPreventionRuleOnComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerIntrusionPreventionRuleDetailsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\nintrusion_prevention_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_intrusion_prevention_rule_on_computer(computer_id, intrusion_prevention_rule_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerIntrusionPreventionRuleDetailsApi.describe_intrusion_prevention_rule_on_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerIntrusionPreventionRuleDetailsApi();\r\nlet computerID = 1;\r\nlet intrusionPreventionRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.describeIntrusionPreventionRuleOnComputer(computerID, intrusionPreventionRuleID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Computer Intrusion Prevention Rule Details"
        ],
        "summary": "Modify an intrusion prevention rule",
        "description": "Modify an intrusion prevention rule assigned to a computer. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionRuleDetailsApi.modifyIntrusionPreventionRuleOnComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionRuleDetailsApi.modify_intrusion_prevention_rule_on_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionRuleDetailsApi.modifyIntrusionPreventionRuleOnComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyIntrusionPreventionRuleOnComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "intrusionPreventionRuleID",
            "in": "path",
            "description": "The ID number of the intrusion prevention rule to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/intrusionPreventionRule"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/intrusionPreventionRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the computer or the requested modification is not permitted."
          },
          "404": {
            "description": "The computer or intrusion prevention rule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerIntrusionPreventionRuleDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.IntrusionPreventionRule;\r\n\r\n\r\npublic class ModifyIntrusionPreventionRuleOnComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerIntrusionPreventionRuleDetailsApi instance = new ComputerIntrusionPreventionRuleDetailsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tInteger intrusionPreventionRuleID = 1;\r\n\t\tIntrusionPreventionRule intrusionPreventionRule = new IntrusionPreventionRule();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntrusionPreventionRule result = instance.modifyIntrusionPreventionRuleOnComputer(computerID, intrusionPreventionRuleID, intrusionPreventionRule, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerIntrusionPreventionRuleDetailsApi.modifyIntrusionPreventionRuleOnComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerIntrusionPreventionRuleDetailsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\nintrusion_prevention_rule_id = 1\r\nintrusion_prevention_rule = deepsecurity.IntrusionPreventionRule()\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_intrusion_prevention_rule_on_computer(computer_id, intrusion_prevention_rule_id, intrusion_prevention_rule, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerIntrusionPreventionRuleDetailsApi.modify_intrusion_prevention_rule_on_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerIntrusionPreventionRuleDetailsApi();\r\nlet computerID = 1;\r\nlet intrusionPreventionRuleID = 1;\r\nlet intrusionPreventionRule = new Deepsecurity.IntrusionPreventionRule();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.modifyIntrusionPreventionRuleOnComputer(computerID, intrusionPreventionRuleID, intrusionPreventionRule, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Computer Intrusion Prevention Rule Details"
        ],
        "summary": "Reset intrusion prevention rule overrides",
        "description": "Remove all overrides for an intrusion prevention rule from a computer. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionRuleDetailsApi.resetIntrusionPreventionRuleOnComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionRuleDetailsApi.reset_intrusion_prevention_rule_on_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerIntrusionPreventionRuleDetailsApi.resetIntrusionPreventionRuleOnComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "resetIntrusionPreventionRuleOnComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "intrusionPreventionRuleID",
            "in": "path",
            "description": "The ID number of the intrusion prevention rule to reset.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/intrusionPreventionRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the computer."
          },
          "404": {
            "description": "The computer does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerIntrusionPreventionRuleDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.IntrusionPreventionRule;\r\n\r\n\r\npublic class ResetIntrusionPreventionRuleOnComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerIntrusionPreventionRuleDetailsApi instance = new ComputerIntrusionPreventionRuleDetailsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tInteger intrusionPreventionRuleID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntrusionPreventionRule result = instance.resetIntrusionPreventionRuleOnComputer(computerID, intrusionPreventionRuleID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerIntrusionPreventionRuleDetailsApi.resetIntrusionPreventionRuleOnComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerIntrusionPreventionRuleDetailsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\nintrusion_prevention_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.reset_intrusion_prevention_rule_on_computer(computer_id, intrusion_prevention_rule_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerIntrusionPreventionRuleDetailsApi.reset_intrusion_prevention_rule_on_computer: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerIntrusionPreventionRuleDetailsApi();\r\nlet computerID = 1;\r\nlet intrusionPreventionRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.resetIntrusionPreventionRuleOnComputer(computerID, intrusionPreventionRuleID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/computers/{computerID}/loginspection/assignments": {
      "get": {
        "tags": [
          "Computer Log Inspection Rule Assignments & Recommendations"
        ],
        "summary": "List Log Inspection Rule IDs",
        "description": "Lists all log inspection rule IDs assigned to a computer. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerLogInspectionRuleAssignmentsRecommendationsApi.listLogInspectionRuleIDsOnComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerLogInspectionRuleAssignmentsRecommendationsApi.list_log_inspection_rule_ids_on_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerLogInspectionRuleAssignmentsRecommendationsApi.listLogInspectionRuleIDsOnComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listLogInspectionRuleIDsOnComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only rule IDs assigned directly to the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logInspectionAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the computer."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerLogInspectionRuleAssignmentsRecommendationsApi;\r\nimport com.trendmicro.deepsecurity.model.LogInspectionAssignments;\r\n\r\n\r\npublic class ListLogInspectionRuleIDsOnComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerLogInspectionRuleAssignmentsRecommendationsApi instance = new ComputerLogInspectionRuleAssignmentsRecommendationsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tLogInspectionAssignments result = instance.listLogInspectionRuleIDsOnComputer(computerID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerLogInspectionRuleAssignmentsRecommendationsApi.listLogInspectionRuleIDsOnComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerLogInspectionRuleAssignmentsRecommendationsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.list_log_inspection_rule_ids_on_computer(computer_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerLogInspectionRuleAssignmentsRecommendationsApi.list_log_inspection_rule_ids_on_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerLogInspectionRuleAssignmentsRecommendationsApi();\r\nlet computerID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.listLogInspectionRuleIDsOnComputer(computerID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Computer Log Inspection Rule Assignments & Recommendations"
        ],
        "summary": "Add Log Inspection Rule IDs",
        "description": "Assign log inspection rule IDs to a computer. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerLogInspectionRuleAssignmentsRecommendationsApi.addLogInspectionRuleIDsToComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerLogInspectionRuleAssignmentsRecommendationsApi.add_log_inspection_rule_ids_to_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerLogInspectionRuleAssignmentsRecommendationsApi.addLogInspectionRuleIDsToComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "addLogInspectionRuleIDsToComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only rule IDs assigned directly to the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/RuleIDs2"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logInspectionAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the computer or the requested modification is not permitted."
          },
          "404": {
            "description": "The computer does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerLogInspectionRuleAssignmentsRecommendationsApi;\r\nimport com.trendmicro.deepsecurity.model.RuleIDs;\r\nimport com.trendmicro.deepsecurity.model.LogInspectionAssignments;\r\n\r\n\r\npublic class AddLogInspectionRuleIDsToComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerLogInspectionRuleAssignmentsRecommendationsApi instance = new ComputerLogInspectionRuleAssignmentsRecommendationsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tRuleIDs logInspectionRuleIDs = new RuleIDs();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tLogInspectionAssignments result = instance.addLogInspectionRuleIDsToComputer(computerID, logInspectionRuleIDs, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerLogInspectionRuleAssignmentsRecommendationsApi.addLogInspectionRuleIDsToComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerLogInspectionRuleAssignmentsRecommendationsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\napi_version = 'YOUR VERSION'\r\nlog_inspection_rule_ids = deepsecurity.RuleIDs()\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.add_log_inspection_rule_ids_to_computer(computer_id, api_version, log_inspection_rule_ids=log_inspection_rule_ids, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerLogInspectionRuleAssignmentsRecommendationsApi.add_log_inspection_rule_ids_to_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerLogInspectionRuleAssignmentsRecommendationsApi();\r\nlet computerID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  logInspectionRuleIDs: new Deepsecurity.RuleIDs(),\r\n  overrides: false,\r\n};\r\n\r\napiInstance.addLogInspectionRuleIDsToComputer(computerID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "put": {
        "tags": [
          "Computer Log Inspection Rule Assignments & Recommendations"
        ],
        "summary": "Set Log Inspection Rule IDs",
        "description": "Set log inspection rule IDs assigned to a computer. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerLogInspectionRuleAssignmentsRecommendationsApi.setLogInspectionRuleIDsOnComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerLogInspectionRuleAssignmentsRecommendationsApi.set_log_inspection_rule_ids_on_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerLogInspectionRuleAssignmentsRecommendationsApi.setLogInspectionRuleIDsOnComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "setLogInspectionRuleIDsOnComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only rule IDs assigned directly to the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/RuleIDs3"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logInspectionAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the computer or the requested modification is not permitted."
          },
          "404": {
            "description": "The computer does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerLogInspectionRuleAssignmentsRecommendationsApi;\r\nimport com.trendmicro.deepsecurity.model.RuleIDs;\r\nimport com.trendmicro.deepsecurity.model.LogInspectionAssignments;\r\n\r\n\r\npublic class SetLogInspectionRuleIDsOnComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerLogInspectionRuleAssignmentsRecommendationsApi instance = new ComputerLogInspectionRuleAssignmentsRecommendationsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tRuleIDs logInspectionRuleIDs = new RuleIDs();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tLogInspectionAssignments result = instance.setLogInspectionRuleIDsOnComputer(computerID, logInspectionRuleIDs, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerLogInspectionRuleAssignmentsRecommendationsApi.setLogInspectionRuleIDsOnComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerLogInspectionRuleAssignmentsRecommendationsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\napi_version = 'YOUR VERSION'\r\nlog_inspection_rule_ids = deepsecurity.RuleIDs()\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.set_log_inspection_rule_ids_on_computer(computer_id, api_version, log_inspection_rule_ids=log_inspection_rule_ids, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerLogInspectionRuleAssignmentsRecommendationsApi.set_log_inspection_rule_ids_on_computer: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerLogInspectionRuleAssignmentsRecommendationsApi();\r\nlet computerID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  logInspectionRuleIDs: new Deepsecurity.RuleIDs(),\r\n  overrides: false,\r\n};\r\n\r\napiInstance.setLogInspectionRuleIDsOnComputer(computerID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/computers/{computerID}/loginspection/assignments/{logInspectionRuleID}": {
      "delete": {
        "tags": [
          "Computer Log Inspection Rule Assignments & Recommendations"
        ],
        "summary": "Remove a Log Inspection Rule ID",
        "description": "Unassign a log inspection rule ID from a computer. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerLogInspectionRuleAssignmentsRecommendationsApi.removeLogInspectionRuleIDFromComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerLogInspectionRuleAssignmentsRecommendationsApi.remove_log_inspection_rule_id_from_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerLogInspectionRuleAssignmentsRecommendationsApi.removeLogInspectionRuleIDFromComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "removeLogInspectionRuleIDFromComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "logInspectionRuleID",
            "in": "path",
            "description": "The ID number of the log inspection rule to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only rule IDs assigned directly to the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logInspectionAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the computer or the requested modification is not permitted."
          },
          "404": {
            "description": "The computer does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerLogInspectionRuleAssignmentsRecommendationsApi;\r\nimport com.trendmicro.deepsecurity.model.LogInspectionAssignments;\r\n\r\n\r\npublic class RemoveLogInspectionRuleIDFromComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerLogInspectionRuleAssignmentsRecommendationsApi instance = new ComputerLogInspectionRuleAssignmentsRecommendationsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tInteger logInspectionRuleID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tLogInspectionAssignments result = instance.removeLogInspectionRuleIDFromComputer(computerID, logInspectionRuleID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerLogInspectionRuleAssignmentsRecommendationsApi.removeLogInspectionRuleIDFromComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerLogInspectionRuleAssignmentsRecommendationsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\nlog_inspection_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.remove_log_inspection_rule_id_from_computer(computer_id, log_inspection_rule_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerLogInspectionRuleAssignmentsRecommendationsApi.remove_log_inspection_rule_id_from_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerLogInspectionRuleAssignmentsRecommendationsApi();\r\nlet computerID = 1;\r\nlet logInspectionRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.removeLogInspectionRuleIDFromComputer(computerID, logInspectionRuleID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/computers/{computerID}/loginspection/rules": {
      "get": {
        "tags": [
          "Computer Log Inspection Rule Details"
        ],
        "summary": "List log inspection rules",
        "description": "Lists all log inspection rules assigned to a computer. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerLogInspectionRuleDetailsApi.listLogInspectionRulesOnComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerLogInspectionRuleDetailsApi.list_log_inspection_rules_on_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerLogInspectionRuleDetailsApi.listLogInspectionRulesOnComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listLogInspectionRulesOnComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only rules assigned to the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogInspectionRules"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the computer."
          },
          "404": {
            "description": "The computer does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerLogInspectionRuleDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.LogInspectionRules;\r\n\r\n\r\npublic class ListLogInspectionRulesOnComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerLogInspectionRuleDetailsApi instance = new ComputerLogInspectionRuleDetailsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tLogInspectionRules result = instance.listLogInspectionRulesOnComputer(computerID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerLogInspectionRuleDetailsApi.listLogInspectionRulesOnComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerLogInspectionRuleDetailsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.list_log_inspection_rules_on_computer(computer_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerLogInspectionRuleDetailsApi.list_log_inspection_rules_on_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerLogInspectionRuleDetailsApi();\r\nlet computerID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.listLogInspectionRulesOnComputer(computerID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/computers/{computerID}/loginspection/rules/{logInspectionRuleID}": {
      "get": {
        "tags": [
          "Computer Log Inspection Rule Details"
        ],
        "summary": "Describe an log inspection rule",
        "description": "Describe an log inspection rule including computer-level overrides. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerLogInspectionRuleDetailsApi.describeLogInspectionRuleOnComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerLogInspectionRuleDetailsApi.describe_log_inspection_rule_on_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerLogInspectionRuleDetailsApi.describeLogInspectionRuleOnComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeLogInspectionRuleOnComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "logInspectionRuleID",
            "in": "path",
            "description": "The ID number of the log inspection rule.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logInspectionRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the computer."
          },
          "404": {
            "description": "The computer or log inspection rule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerLogInspectionRuleDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.LogInspectionRule;\r\n\r\n\r\npublic class DescribeLogInspectionRuleOnComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerLogInspectionRuleDetailsApi instance = new ComputerLogInspectionRuleDetailsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tInteger logInspectionRuleID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tLogInspectionRule result = instance.describeLogInspectionRuleOnComputer(computerID, logInspectionRuleID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerLogInspectionRuleDetailsApi.describeLogInspectionRuleOnComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerLogInspectionRuleDetailsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\nlog_inspection_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_log_inspection_rule_on_computer(computer_id, log_inspection_rule_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerLogInspectionRuleDetailsApi.describe_log_inspection_rule_on_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerLogInspectionRuleDetailsApi();\r\nlet computerID = 1;\r\nlet logInspectionRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.describeLogInspectionRuleOnComputer(computerID, logInspectionRuleID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Computer Log Inspection Rule Details"
        ],
        "summary": "Modify an log inspection rule",
        "description": "Modify an log inspection rule assigned to a computer. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerLogInspectionRuleDetailsApi.modifyLogInspectionRuleOnComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerLogInspectionRuleDetailsApi.modify_log_inspection_rule_on_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerLogInspectionRuleDetailsApi.modifyLogInspectionRuleOnComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyLogInspectionRuleOnComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "logInspectionRuleID",
            "in": "path",
            "description": "The ID number of the log inspection rule to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/logInspectionRule"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logInspectionRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the computer or the requested modification is not permitted."
          },
          "404": {
            "description": "The computer or log inspection rule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerLogInspectionRuleDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.LogInspectionRule;\r\n\r\n\r\npublic class ModifyLogInspectionRuleOnComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerLogInspectionRuleDetailsApi instance = new ComputerLogInspectionRuleDetailsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tInteger logInspectionRuleID = 1;\r\n\t\tLogInspectionRule logInspectionRule = new LogInspectionRule();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tLogInspectionRule result = instance.modifyLogInspectionRuleOnComputer(computerID, logInspectionRuleID, logInspectionRule, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerLogInspectionRuleDetailsApi.modifyLogInspectionRuleOnComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerLogInspectionRuleDetailsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\nlog_inspection_rule_id = 1\r\nlog_inspection_rule = deepsecurity.LogInspectionRule()\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_log_inspection_rule_on_computer(computer_id, log_inspection_rule_id, log_inspection_rule, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerLogInspectionRuleDetailsApi.modify_log_inspection_rule_on_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerLogInspectionRuleDetailsApi();\r\nlet computerID = 1;\r\nlet logInspectionRuleID = 1;\r\nlet logInspectionRule = new Deepsecurity.LogInspectionRule();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.modifyLogInspectionRuleOnComputer(computerID, logInspectionRuleID, logInspectionRule, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Computer Log Inspection Rule Details"
        ],
        "summary": "Reset log inspection rule overrides",
        "description": "Remove all overrides for an log inspection rule from a computer. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerLogInspectionRuleDetailsApi.resetLogInspectionRuleOnComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerLogInspectionRuleDetailsApi.reset_log_inspection_rule_on_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ComputerLogInspectionRuleDetailsApi.resetLogInspectionRuleOnComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "resetLogInspectionRuleOnComputer",
        "parameters": [
          {
            "name": "computerID",
            "in": "path",
            "description": "The ID number of the computer.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "logInspectionRuleID",
            "in": "path",
            "description": "The ID number of the log inspection rule to reset.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current computer.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logInspectionRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the computer."
          },
          "404": {
            "description": "The computer does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ComputerLogInspectionRuleDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.LogInspectionRule;\r\n\r\n\r\npublic class ResetLogInspectionRuleOnComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tComputerLogInspectionRuleDetailsApi instance = new ComputerLogInspectionRuleDetailsApi();\r\n\t\tInteger computerID = 1;\r\n\t\tInteger logInspectionRuleID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tLogInspectionRule result = instance.resetLogInspectionRuleOnComputer(computerID, logInspectionRuleID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ComputerLogInspectionRuleDetailsApi.resetLogInspectionRuleOnComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ComputerLogInspectionRuleDetailsApi(deepsecurity.ApiClient(configuration))\r\ncomputer_id = 1\r\nlog_inspection_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.reset_log_inspection_rule_on_computer(computer_id, log_inspection_rule_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ComputerLogInspectionRuleDetailsApi.reset_log_inspection_rule_on_computer: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ComputerLogInspectionRuleDetailsApi();\r\nlet computerID = 1;\r\nlet logInspectionRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.resetLogInspectionRuleOnComputer(computerID, logInspectionRuleID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "List Contacts",
        "description": "Lists all contacts. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContactsApi.listContacts([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContactsApi.list_contacts([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContactsApi.listContacts([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listContacts",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contacts"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view contacts."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ContactsApi;\r\nimport com.trendmicro.deepsecurity.model.Contacts;\r\n\r\n\r\npublic class ListContactsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tContactsApi instance = new ContactsApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tContacts result = instance.listContacts(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ContactsApi.listContacts\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ContactsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_contacts(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ContactsApi.list_contacts: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ContactsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listContacts(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create a Contact",
        "description": "Create a new contact. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContactsApi.createContact([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContactsApi.create_contact([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContactsApi.createContact([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createContact",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/contact"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/contact"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create contacts."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ContactsApi;\r\nimport com.trendmicro.deepsecurity.model.Contact;\r\n\r\n\r\npublic class CreateContactExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tContactsApi instance = new ContactsApi();\r\n\t\tContact contact = new Contact();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tContact result = instance.createContact(contact, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ContactsApi.createContact\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ContactsApi(deepsecurity.ApiClient(configuration))\r\ncontact = deepsecurity.Contact()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_contact(contact, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ContactsApi.create_contact: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ContactsApi();\r\nlet contact = new Deepsecurity.Contact();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createContact(contact, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/contacts/{contactID}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Describe a Contact",
        "description": "Describe a contact by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContactsApi.describeContact([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContactsApi.describe_contact([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContactsApi.describeContact([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeContact",
        "parameters": [
          {
            "name": "contactID",
            "in": "path",
            "description": "The ID number of the contact to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/contact"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view contacts."
          },
          "404": {
            "description": "The contact does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ContactsApi;\r\nimport com.trendmicro.deepsecurity.model.Contact;\r\n\r\n\r\npublic class DescribeContactExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tContactsApi instance = new ContactsApi();\r\n\t\tInteger contactID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tContact result = instance.describeContact(contactID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ContactsApi.describeContact\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ContactsApi(deepsecurity.ApiClient(configuration))\r\ncontact_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_contact(contact_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ContactsApi.describe_contact: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ContactsApi();\r\nlet contactID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeContact(contactID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Modify a Contact",
        "description": "Modify a contact by ID. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContactsApi.modifyContact([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContactsApi.modify_contact([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContactsApi.modifyContact([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyContact",
        "parameters": [
          {
            "name": "contactID",
            "in": "path",
            "description": "The ID number of the contact to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/contact"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/contact"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify contacts or the requested modification is not permitted."
          },
          "404": {
            "description": "The contact does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ContactsApi;\r\nimport com.trendmicro.deepsecurity.model.Contact;\r\n\r\n\r\npublic class ModifyContactExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tContactsApi instance = new ContactsApi();\r\n\t\tInteger contactID = 1;\r\n\t\tContact contact = new Contact();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tContact result = instance.modifyContact(contactID, contact, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ContactsApi.modifyContact\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ContactsApi(deepsecurity.ApiClient(configuration))\r\ncontact_id = 1\r\ncontact = deepsecurity.Contact()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_contact(contact_id, contact, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ContactsApi.modify_contact: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ContactsApi();\r\nlet contactID = 1;\r\nlet contact = new Deepsecurity.Contact();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifyContact(contactID, contact, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete a Contact",
        "description": "Delete a contact by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContactsApi.deleteContact([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContactsApi.delete_contact([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContactsApi.deleteContact([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteContact",
        "parameters": [
          {
            "name": "contactID",
            "in": "path",
            "description": "The ID number of the contact to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete contacts."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ContactsApi;\r\n\r\n\r\npublic class DeleteContactExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tContactsApi instance = new ContactsApi();\r\n\t\tInteger contactID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteContact(contactID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ContactsApi.deleteContact\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ContactsApi(deepsecurity.ApiClient(configuration))\r\ncontact_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_contact(contact_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ContactsApi.delete_contact: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ContactsApi();\r\nlet contactID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteContact(contactID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/contacts/search": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Search Contacts",
        "description": "Search for contacts using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContactsApi.searchContacts([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContactsApi.search_contacts([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContactsApi.searchContacts([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchContacts",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contacts"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view contacts."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ContactsApi;\r\nimport com.trendmicro.deepsecurity.model.Contacts;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchContactsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tContactsApi instance = new ContactsApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tContacts result = instance.searchContacts(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ContactsApi.searchContacts\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ContactsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_contacts(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ContactsApi.search_contacts: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ContactsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchContacts(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/datacentergateways": {
      "get": {
        "tags": [
          "Data Center Gateways"
        ],
        "summary": "List Data Center Gateways",
        "description": "List all data center gateways. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DataCenterGatewaysApi.listDataCenterGateways([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DataCenterGatewaysApi.list_data_center_gateways([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DataCenterGatewaysApi.listDataCenterGateways([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listDataCenterGateways",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataCenterGateways"
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameters."
          },
          "403": {
            "description": "Not authorized to view data center gateways."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.DataCenterGatewaysApi;\r\nimport com.trendmicro.deepsecurity.model.DataCenterGateways;\r\n\r\n\r\npublic class ListDataCenterGatewaysExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tDataCenterGatewaysApi instance = new DataCenterGatewaysApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tDataCenterGateways result = instance.listDataCenterGateways(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling DataCenterGatewaysApi.listDataCenterGateways\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.DataCenterGatewaysApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_data_center_gateways(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling DataCenterGatewaysApi.list_data_center_gateways: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.DataCenterGatewaysApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listDataCenterGateways(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Data Center Gateways"
        ],
        "summary": "Create a Data Center Gateway",
        "description": "Create a new data center gateway. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DataCenterGatewaysApi.createDataCenterGateway([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DataCenterGatewaysApi.create_data_center_gateway([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DataCenterGatewaysApi.createDataCenterGateway([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createDataCenterGateway",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dataCenterGateway"
              }
            }
          },
          "description": "The name of the data center gateway to create.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dataCenterGateway"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to add data center gateways."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.DataCenterGatewaysApi;\r\nimport com.trendmicro.deepsecurity.model.DataCenterGateway;\r\n\r\n\r\npublic class CreateDataCenterGatewayExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tDataCenterGatewaysApi instance = new DataCenterGatewaysApi();\r\n\t\tDataCenterGateway name = new DataCenterGateway();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tDataCenterGateway result = instance.createDataCenterGateway(name, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling DataCenterGatewaysApi.createDataCenterGateway\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.DataCenterGatewaysApi(deepsecurity.ApiClient(configuration))\r\nname = deepsecurity.DataCenterGateway()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_data_center_gateway(name, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling DataCenterGatewaysApi.create_data_center_gateway: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.DataCenterGatewaysApi();\r\nlet name = new Deepsecurity.DataCenterGateway();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createDataCenterGateway(name, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/datacentergateways/search": {
      "post": {
        "tags": [
          "Data Center Gateways"
        ],
        "summary": "Search Data Center Gateways",
        "description": "Search for data center gateways using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DataCenterGatewaysApi.searchDataCenterGateways([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DataCenterGatewaysApi.search_data_center_gateways([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DataCenterGatewaysApi.searchDataCenterGateways([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchDataCenterGateways",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataCenterGateways"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view data center gateways."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.DataCenterGatewaysApi;\r\nimport com.trendmicro.deepsecurity.model.DataCenterGateways;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchDataCenterGatewaysExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tDataCenterGatewaysApi instance = new DataCenterGatewaysApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tDataCenterGateways result = instance.searchDataCenterGateways(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling DataCenterGatewaysApi.searchDataCenterGateways\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.DataCenterGatewaysApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_data_center_gateways(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling DataCenterGatewaysApi.search_data_center_gateways: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.DataCenterGatewaysApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchDataCenterGateways(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/datacentergateways/{dataCenterGatewayID}": {
      "get": {
        "tags": [
          "Data Center Gateways"
        ],
        "summary": "Describe a Data Center Gateway",
        "description": "Describe a data center gateway by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DataCenterGatewaysApi.describeDataCenterGateway([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DataCenterGatewaysApi.describe_data_center_gateway([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DataCenterGatewaysApi.describeDataCenterGateway([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeDataCenterGateway",
        "parameters": [
          {
            "name": "dataCenterGatewayID",
            "in": "path",
            "description": "The ID number of the data center gateway to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dataCenterGateway"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view data center gateways."
          },
          "404": {
            "description": "The data center gateway does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.DataCenterGatewaysApi;\r\nimport com.trendmicro.deepsecurity.model.DataCenterGateway;\r\n\r\n\r\npublic class DescribeDataCenterGatewayExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tDataCenterGatewaysApi instance = new DataCenterGatewaysApi();\r\n\t\tInteger dataCenterGatewayID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tDataCenterGateway result = instance.describeDataCenterGateway(dataCenterGatewayID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling DataCenterGatewaysApi.describeDataCenterGateway\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.DataCenterGatewaysApi(deepsecurity.ApiClient(configuration))\r\ndata_center_gateway_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_data_center_gateway(data_center_gateway_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling DataCenterGatewaysApi.describe_data_center_gateway: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.DataCenterGatewaysApi();\r\nlet dataCenterGatewayID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeDataCenterGateway(dataCenterGatewayID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Data Center Gateways"
        ],
        "summary": "Modify a Data Center Gateway",
        "description": "Modify a data center gateway by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DataCenterGatewaysApi.modifyDataCenterGateway([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DataCenterGatewaysApi.modify_data_center_gateway([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DataCenterGatewaysApi.modifyDataCenterGateway([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyDataCenterGateway",
        "parameters": [
          {
            "name": "dataCenterGatewayID",
            "in": "path",
            "description": "The ID number of the data center gateway to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dataCenterGateway"
              }
            }
          },
          "description": "The name of the data center gateway to modify.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dataCenterGateway"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view data center gateways."
          },
          "404": {
            "description": "The data center gateway does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.DataCenterGatewaysApi;\r\nimport com.trendmicro.deepsecurity.model.DataCenterGateway;\r\n\r\n\r\npublic class ModifyDataCenterGatewayExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tDataCenterGatewaysApi instance = new DataCenterGatewaysApi();\r\n\t\tInteger dataCenterGatewayID = 1;\r\n\t\tDataCenterGateway name = new DataCenterGateway();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tDataCenterGateway result = instance.modifyDataCenterGateway(dataCenterGatewayID, name, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling DataCenterGatewaysApi.modifyDataCenterGateway\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.DataCenterGatewaysApi(deepsecurity.ApiClient(configuration))\r\ndata_center_gateway_id = 1\r\nname = deepsecurity.DataCenterGateway()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_data_center_gateway(data_center_gateway_id, name, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling DataCenterGatewaysApi.modify_data_center_gateway: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.DataCenterGatewaysApi();\r\nlet dataCenterGatewayID = 1;\r\nlet name = new Deepsecurity.DataCenterGateway();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifyDataCenterGateway(dataCenterGatewayID, name, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Data Center Gateways"
        ],
        "summary": "Delete a Data Center Gateway",
        "description": "Delete a data center gateway by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DataCenterGatewaysApi.deleteDataCenterGateway([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DataCenterGatewaysApi.delete_data_center_gateway([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DataCenterGatewaysApi.deleteDataCenterGateway([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteDataCenterGateway",
        "parameters": [
          {
            "name": "dataCenterGatewayID",
            "in": "path",
            "description": "The ID number of the data center gateway to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.DataCenterGatewaysApi;\r\n\r\n\r\npublic class DeleteDataCenterGatewayExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tDataCenterGatewaysApi instance = new DataCenterGatewaysApi();\r\n\t\tInteger dataCenterGatewayID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteDataCenterGateway(dataCenterGatewayID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling DataCenterGatewaysApi.deleteDataCenterGateway\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.DataCenterGatewaysApi(deepsecurity.ApiClient(configuration))\r\ndata_center_gateway_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_data_center_gateway(data_center_gateway_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling DataCenterGatewaysApi.delete_data_center_gateway: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.DataCenterGatewaysApi();\r\nlet dataCenterGatewayID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteDataCenterGateway(dataCenterGatewayID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/usbdevices/search": {
      "post": {
        "tags": [
          "USB Storage Devices"
        ],
        "summary": "Search USB Storage Devices",
        "description": "Search for USB storage devices using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>UsbStorageDevicesApi.searchUSBDevices([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>USBStorageDevicesApi.search_usb_devices([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>USBStorageDevicesApi.searchUSBDevices([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchUSBDevices",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/USBDevices"
                }
              }
            }
          },
          "403": {
            "description": "User or API key is not authorized to view devices."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.UsbStorageDevicesApi;\r\nimport com.trendmicro.deepsecurity.model.USBDevices;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchUSBDevicesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tUsbStorageDevicesApi instance = new UsbStorageDevicesApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tUSBDevices result = instance.searchUSBDevices(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling UsbStorageDevicesApi.searchUSBDevices\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.USBStorageDevicesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_usb_devices(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling USBStorageDevicesApi.search_usb_devices: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.USBStorageDevicesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchUSBDevices(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/usbdevices": {
      "get": {
        "tags": [
          "USB Storage Devices"
        ],
        "summary": "List USB Storage Devices",
        "description": "Lists all USB storage devices. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>UsbStorageDevicesApi.listUSBDevices([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>USBStorageDevicesApi.list_usb_devices([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>USBStorageDevicesApi.listUSBDevices([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listUSBDevices",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/USBDevices"
                }
              }
            }
          },
          "403": {
            "description": "User or API key is not authorized to view devices."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.UsbStorageDevicesApi;\r\nimport com.trendmicro.deepsecurity.model.USBDevices;\r\n\r\n\r\npublic class ListUSBDevicesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tUsbStorageDevicesApi instance = new UsbStorageDevicesApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tUSBDevices result = instance.listUSBDevices(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling UsbStorageDevicesApi.listUSBDevices\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.USBStorageDevicesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_usb_devices(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling USBStorageDevicesApi.list_usb_devices: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.USBStorageDevicesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listUSBDevices(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "USB Storage Devices"
        ],
        "summary": "Create a USB Storage Device",
        "description": "Create a new USB storage device. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>UsbStorageDevicesApi.createUSBDevice([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>USBStorageDevicesApi.create_usb_device([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>USBStorageDevicesApi.createUSBDevice([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createUSBDevice",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/USBDevice"
              }
            }
          },
          "description": "The settings of the USB storage device to create.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/USBDevice"
                }
              }
            }
          },
          "403": {
            "description": "User or API key is not authorized to create devices."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.UsbStorageDevicesApi;\r\nimport com.trendmicro.deepsecurity.model.USBDevice;\r\n\r\n\r\npublic class CreateUSBDeviceExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tUsbStorageDevicesApi instance = new UsbStorageDevicesApi();\r\n\t\tUSBDevice device = new USBDevice();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tUSBDevice result = instance.createUSBDevice(device, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling UsbStorageDevicesApi.createUSBDevice\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.USBStorageDevicesApi(deepsecurity.ApiClient(configuration))\r\ndevice = deepsecurity.USBDevice()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_usb_device(device, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling USBStorageDevicesApi.create_usb_device: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.USBStorageDevicesApi();\r\nlet device = new Deepsecurity.USBDevice();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createUSBDevice(device, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/usbdevices/{deviceID}": {
      "get": {
        "tags": [
          "USB Storage Devices"
        ],
        "summary": "Describe a USB Storage Device",
        "description": "Describe a USB storage device by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>UsbStorageDevicesApi.describeUSBDevice([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>USBStorageDevicesApi.describe_usb_device([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>USBStorageDevicesApi.describeUSBDevice([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeUSBDevice",
        "parameters": [
          {
            "name": "deviceID",
            "in": "path",
            "description": "The ID number of the USB storage device to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/USBDevice"
                }
              }
            }
          },
          "403": {
            "description": "User or API key is not authorized to view devices."
          },
          "404": {
            "description": "The device does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.UsbStorageDevicesApi;\r\nimport com.trendmicro.deepsecurity.model.USBDevice;\r\n\r\n\r\npublic class DescribeUSBDeviceExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tUsbStorageDevicesApi instance = new UsbStorageDevicesApi();\r\n\t\tLong deviceID = 1L;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tUSBDevice result = instance.describeUSBDevice(deviceID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling UsbStorageDevicesApi.describeUSBDevice\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.USBStorageDevicesApi(deepsecurity.ApiClient(configuration))\r\ndevice_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_usb_device(device_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling USBStorageDevicesApi.describe_usb_device: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.USBStorageDevicesApi();\r\nlet deviceID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeUSBDevice(deviceID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "USB Storage Devices"
        ],
        "summary": "Modify a USB Storage Device",
        "description": "Modify a USB storage device by ID. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>UsbStorageDevicesApi.modifyUSBDevice([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>USBStorageDevicesApi.modify_usb_device([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>USBStorageDevicesApi.modifyUSBDevice([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyUSBDevice",
        "parameters": [
          {
            "name": "deviceID",
            "in": "path",
            "description": "The ID number of the USB storage device to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/USBDevice"
              }
            }
          },
          "description": "The settings of the USB storage device to modify.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/USBDevice"
                }
              }
            }
          },
          "403": {
            "description": "User or API key is not authorized to modify devices or the requested modification is not permitted."
          },
          "404": {
            "description": "The device does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.UsbStorageDevicesApi;\r\nimport com.trendmicro.deepsecurity.model.USBDevice;\r\n\r\n\r\npublic class ModifyUSBDeviceExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tUsbStorageDevicesApi instance = new UsbStorageDevicesApi();\r\n\t\tLong deviceID = 1L;\r\n\t\tUSBDevice device = new USBDevice();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tUSBDevice result = instance.modifyUSBDevice(deviceID, device, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling UsbStorageDevicesApi.modifyUSBDevice\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.USBStorageDevicesApi(deepsecurity.ApiClient(configuration))\r\ndevice_id = 1\r\ndevice = deepsecurity.USBDevice()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_usb_device(device_id, device, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling USBStorageDevicesApi.modify_usb_device: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.USBStorageDevicesApi();\r\nlet deviceID = 1;\r\nlet device = new Deepsecurity.USBDevice();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifyUSBDevice(deviceID, device, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "USB Storage Devices"
        ],
        "summary": "Delete a USB Storage Device",
        "description": "Delete a USB storage device by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>UsbStorageDevicesApi.deleteUSBDevice([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>USBStorageDevicesApi.delete_usb_device([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>USBStorageDevicesApi.deleteUSBDevice([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteUSBDevice",
        "parameters": [
          {
            "name": "deviceID",
            "in": "path",
            "description": "The ID number of the USB storage device to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "User or API key is not authorized to delete devices."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.UsbStorageDevicesApi;\r\n\r\n\r\npublic class DeleteUSBDeviceExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tUsbStorageDevicesApi instance = new UsbStorageDevicesApi();\r\n\t\tLong deviceID = 1L;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteUSBDevice(deviceID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling UsbStorageDevicesApi.deleteUSBDevice\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.USBStorageDevicesApi(deepsecurity.ApiClient(configuration))\r\ndevice_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_usb_device(device_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling USBStorageDevicesApi.delete_usb_device: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.USBStorageDevicesApi();\r\nlet deviceID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteUSBDevice(deviceID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/usbdevices/{deviceID}/computerexceptionrules": {
      "get": {
        "tags": [
          "USB Storage Devices"
        ],
        "summary": "List Device Exception Rules",
        "description": "Lists device exception rules for this device assigned to computers. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>UsbStorageDevicesApi.listComputerExceptionRules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>USBStorageDevicesApi.list_computer_exception_rules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>USBStorageDevicesApi.listComputerExceptionRules([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listComputerExceptionRules",
        "parameters": [
          {
            "name": "deviceID",
            "in": "path",
            "description": "The ID number of the USB storage device.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComputerExceptionRules"
                }
              }
            }
          },
          "403": {
            "description": "User or API key is not authorized to view devices."
          },
          "404": {
            "description": "The device does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.UsbStorageDevicesApi;\r\nimport com.trendmicro.deepsecurity.model.ComputerExceptionRules;\r\n\r\n\r\npublic class ListComputerExceptionRulesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tUsbStorageDevicesApi instance = new UsbStorageDevicesApi();\r\n\t\tLong deviceID = 1L;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tComputerExceptionRules result = instance.listComputerExceptionRules(deviceID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling UsbStorageDevicesApi.listComputerExceptionRules\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.USBStorageDevicesApi(deepsecurity.ApiClient(configuration))\r\ndevice_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_computer_exception_rules(device_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling USBStorageDevicesApi.list_computer_exception_rules: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.USBStorageDevicesApi();\r\nlet deviceID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listComputerExceptionRules(deviceID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/usbdevices/{deviceID}/policyexceptionrules": {
      "get": {
        "tags": [
          "USB Storage Devices"
        ],
        "summary": "List Device Exception Rules",
        "description": "Lists device exception rules for this device assigned to policies. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>UsbStorageDevicesApi.listPolicyExceptionRules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>USBStorageDevicesApi.list_policy_exception_rules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>USBStorageDevicesApi.listPolicyExceptionRules([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listPolicyExceptionRules",
        "parameters": [
          {
            "name": "deviceID",
            "in": "path",
            "description": "The ID number of the USB storage device.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyExceptionRules"
                }
              }
            }
          },
          "403": {
            "description": "User or API key is not authorized to view devices."
          },
          "404": {
            "description": "The device does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.UsbStorageDevicesApi;\r\nimport com.trendmicro.deepsecurity.model.PolicyExceptionRules;\r\n\r\n\r\npublic class ListPolicyExceptionRulesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tUsbStorageDevicesApi instance = new UsbStorageDevicesApi();\r\n\t\tLong deviceID = 1L;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tPolicyExceptionRules result = instance.listPolicyExceptionRules(deviceID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling UsbStorageDevicesApi.listPolicyExceptionRules\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.USBStorageDevicesApi(deepsecurity.ApiClient(configuration))\r\ndevice_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_policy_exception_rules(device_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling USBStorageDevicesApi.list_policy_exception_rules: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.USBStorageDevicesApi();\r\nlet deviceID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listPolicyExceptionRules(deviceID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/directorylists": {
      "get": {
        "tags": [
          "Directory Lists"
        ],
        "summary": "List Directory Lists",
        "description": "Lists all directory lists. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DirectoryListsApi.listDirectoryLists([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DirectoryListsApi.list_directory_lists([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DirectoryListsApi.listDirectoryLists([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listDirectoryLists",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectoryLists"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view directory lists."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.DirectoryListsApi;\r\nimport com.trendmicro.deepsecurity.model.DirectoryLists;\r\n\r\n\r\npublic class ListDirectoryListsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tDirectoryListsApi instance = new DirectoryListsApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tDirectoryLists result = instance.listDirectoryLists(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling DirectoryListsApi.listDirectoryLists\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.DirectoryListsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_directory_lists(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling DirectoryListsApi.list_directory_lists: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.DirectoryListsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listDirectoryLists(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Directory Lists"
        ],
        "summary": "Create a Directory List",
        "description": "Create a new directory list. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DirectoryListsApi.createDirectoryList([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DirectoryListsApi.create_directory_list([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DirectoryListsApi.createDirectoryList([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createDirectoryList",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/directoryList"
              }
            }
          },
          "description": "The settings of the new directory list.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/directoryList"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create directory lists."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.DirectoryListsApi;\r\nimport com.trendmicro.deepsecurity.model.DirectoryList;\r\n\r\n\r\npublic class CreateDirectoryListExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tDirectoryListsApi instance = new DirectoryListsApi();\r\n\t\tDirectoryList directoryList = new DirectoryList();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tDirectoryList result = instance.createDirectoryList(directoryList, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling DirectoryListsApi.createDirectoryList\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.DirectoryListsApi(deepsecurity.ApiClient(configuration))\r\ndirectory_list = deepsecurity.DirectoryList()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_directory_list(directory_list, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling DirectoryListsApi.create_directory_list: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.DirectoryListsApi();\r\nlet directoryList = new Deepsecurity.DirectoryList();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createDirectoryList(directoryList, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/directorylists/search": {
      "post": {
        "tags": [
          "Directory Lists"
        ],
        "summary": "Search Directory Lists",
        "description": "Search for directory lists using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DirectoryListsApi.searchDirectoryLists([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DirectoryListsApi.search_directory_lists([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DirectoryListsApi.searchDirectoryLists([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchDirectoryLists",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DirectoryLists"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view directory lists."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.DirectoryListsApi;\r\nimport com.trendmicro.deepsecurity.model.DirectoryLists;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchDirectoryListsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tDirectoryListsApi instance = new DirectoryListsApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tDirectoryLists result = instance.searchDirectoryLists(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling DirectoryListsApi.searchDirectoryLists\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.DirectoryListsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_directory_lists(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling DirectoryListsApi.search_directory_lists: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.DirectoryListsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchDirectoryLists(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/directorylists/{directoryListID}": {
      "get": {
        "tags": [
          "Directory Lists"
        ],
        "summary": "Describe a Directory List",
        "description": "Describe a directory list by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DirectoryListsApi.describeDirectoryList([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DirectoryListsApi.describe_directory_list([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DirectoryListsApi.describeDirectoryList([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeDirectoryList",
        "parameters": [
          {
            "name": "directoryListID",
            "in": "path",
            "description": "The ID number of the directory list to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/directoryList"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view directory lists."
          },
          "404": {
            "description": "The directory list does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.DirectoryListsApi;\r\nimport com.trendmicro.deepsecurity.model.DirectoryList;\r\n\r\n\r\npublic class DescribeDirectoryListExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tDirectoryListsApi instance = new DirectoryListsApi();\r\n\t\tInteger directoryListID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tDirectoryList result = instance.describeDirectoryList(directoryListID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling DirectoryListsApi.describeDirectoryList\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.DirectoryListsApi(deepsecurity.ApiClient(configuration))\r\ndirectory_list_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_directory_list(directory_list_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling DirectoryListsApi.describe_directory_list: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.DirectoryListsApi();\r\nlet directoryListID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeDirectoryList(directoryListID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Directory Lists"
        ],
        "summary": "Modify a Directory List",
        "description": "Modify a directory list by ID. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DirectoryListsApi.modifyDirectoryList([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DirectoryListsApi.modify_directory_list([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DirectoryListsApi.modifyDirectoryList([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyDirectoryList",
        "parameters": [
          {
            "name": "directoryListID",
            "in": "path",
            "description": "The ID number of the directory list to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/directoryList"
              }
            }
          },
          "description": "The settings of the directory list to modify.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/directoryList"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify directory lists or the requested modification is not permitted."
          },
          "404": {
            "description": "The directory list does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.DirectoryListsApi;\r\nimport com.trendmicro.deepsecurity.model.DirectoryList;\r\n\r\n\r\npublic class ModifyDirectoryListExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tDirectoryListsApi instance = new DirectoryListsApi();\r\n\t\tInteger directoryListID = 1;\r\n\t\tDirectoryList directoryList = new DirectoryList();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tDirectoryList result = instance.modifyDirectoryList(directoryListID, directoryList, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling DirectoryListsApi.modifyDirectoryList\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.DirectoryListsApi(deepsecurity.ApiClient(configuration))\r\ndirectory_list_id = 1\r\ndirectory_list = deepsecurity.DirectoryList()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_directory_list(directory_list_id, directory_list, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling DirectoryListsApi.modify_directory_list: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.DirectoryListsApi();\r\nlet directoryListID = 1;\r\nlet directoryList = new Deepsecurity.DirectoryList();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifyDirectoryList(directoryListID, directoryList, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Directory Lists"
        ],
        "summary": "Delete a Directory List",
        "description": "Delete a directory list by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DirectoryListsApi.deleteDirectoryList([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DirectoryListsApi.delete_directory_list([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>DirectoryListsApi.deleteDirectoryList([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteDirectoryList",
        "parameters": [
          {
            "name": "directoryListID",
            "in": "path",
            "description": "The ID number of the directory list to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete directory lists."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.DirectoryListsApi;\r\n\r\n\r\npublic class DeleteDirectoryListExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tDirectoryListsApi instance = new DirectoryListsApi();\r\n\t\tInteger directoryListID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteDirectoryList(directoryListID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling DirectoryListsApi.deleteDirectoryList\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.DirectoryListsApi(deepsecurity.ApiClient(configuration))\r\ndirectory_list_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_directory_list(directory_list_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling DirectoryListsApi.delete_directory_list: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.DirectoryListsApi();\r\nlet directoryListID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteDirectoryList(directoryListID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/eventbasedtasks": {
      "get": {
        "tags": [
          "Event Based Tasks"
        ],
        "summary": "List Event Based Tasks",
        "description": "Lists all event based tasks. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>EventBasedTasksApi.listEventBasedTasks([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>EventBasedTasksApi.list_event_based_tasks([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>EventBasedTasksApi.listEventBasedTasks([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listEventBasedTasks",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventBasedTasks"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view scheduled tasks."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.EventBasedTasksApi;\r\nimport com.trendmicro.deepsecurity.model.EventBasedTasks;\r\n\r\n\r\npublic class ListEventBasedTasksExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tEventBasedTasksApi instance = new EventBasedTasksApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tEventBasedTasks result = instance.listEventBasedTasks(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling EventBasedTasksApi.listEventBasedTasks\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.EventBasedTasksApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_event_based_tasks(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling EventBasedTasksApi.list_event_based_tasks: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.EventBasedTasksApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listEventBasedTasks(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Event Based Tasks"
        ],
        "summary": "Create an Event Based Task",
        "description": "Create a new event based task. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>EventBasedTasksApi.createEventBasedTask([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>EventBasedTasksApi.create_event_based_task([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>EventBasedTasksApi.createEventBasedTask([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createEventBasedTask",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventBasedTask"
              }
            }
          },
          "description": "The settings of the new event based task.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventBasedTask"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create event based tasks."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.EventBasedTasksApi;\r\nimport com.trendmicro.deepsecurity.model.EventBasedTask;\r\n\r\n\r\npublic class CreateEventBasedTaskExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tEventBasedTasksApi instance = new EventBasedTasksApi();\r\n\t\tEventBasedTask eventBasedTask = new EventBasedTask();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tEventBasedTask result = instance.createEventBasedTask(eventBasedTask, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling EventBasedTasksApi.createEventBasedTask\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.EventBasedTasksApi(deepsecurity.ApiClient(configuration))\r\nevent_based_task = deepsecurity.EventBasedTask()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_event_based_task(event_based_task, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling EventBasedTasksApi.create_event_based_task: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.EventBasedTasksApi();\r\nlet eventBasedTask = new Deepsecurity.EventBasedTask();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createEventBasedTask(eventBasedTask, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/eventbasedtasks/search": {
      "post": {
        "tags": [
          "Event Based Tasks"
        ],
        "summary": "Search Event Based Tasks",
        "description": "Search for event based tasks using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>EventBasedTasksApi.searchEventBasedTasks([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>EventBasedTasksApi.search_event_based_tasks([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>EventBasedTasksApi.searchEventBasedTasks([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchEventBasedTasks",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventBasedTasks"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view scheduled tasks."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.EventBasedTasksApi;\r\nimport com.trendmicro.deepsecurity.model.EventBasedTasks;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchEventBasedTasksExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tEventBasedTasksApi instance = new EventBasedTasksApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tEventBasedTasks result = instance.searchEventBasedTasks(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling EventBasedTasksApi.searchEventBasedTasks\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.EventBasedTasksApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_event_based_tasks(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling EventBasedTasksApi.search_event_based_tasks: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.EventBasedTasksApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchEventBasedTasks(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/eventbasedtasks/{eventBasedTaskID}": {
      "get": {
        "tags": [
          "Event Based Tasks"
        ],
        "summary": "Describe an Event Based Task",
        "description": "Describe an event based task by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>EventBasedTasksApi.describeEventBasedTask([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>EventBasedTasksApi.describe_event_based_task([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>EventBasedTasksApi.describeEventBasedTask([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeEventBasedTask",
        "parameters": [
          {
            "name": "eventBasedTaskID",
            "in": "path",
            "description": "The ID number of the event based task to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventBasedTask"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view scheduled tasks."
          },
          "404": {
            "description": "The event based task does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.EventBasedTasksApi;\r\nimport com.trendmicro.deepsecurity.model.EventBasedTask;\r\n\r\n\r\npublic class DescribeEventBasedTaskExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tEventBasedTasksApi instance = new EventBasedTasksApi();\r\n\t\tInteger eventBasedTaskID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tEventBasedTask result = instance.describeEventBasedTask(eventBasedTaskID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling EventBasedTasksApi.describeEventBasedTask\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.EventBasedTasksApi(deepsecurity.ApiClient(configuration))\r\nevent_based_task_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_event_based_task(event_based_task_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling EventBasedTasksApi.describe_event_based_task: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.EventBasedTasksApi();\r\nlet eventBasedTaskID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeEventBasedTask(eventBasedTaskID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Event Based Tasks"
        ],
        "summary": "Modify an Event Based Task",
        "description": "Modify an event based task by ID. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>EventBasedTasksApi.modifyEventBasedTask([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>EventBasedTasksApi.modify_event_based_task([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>EventBasedTasksApi.modifyEventBasedTask([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyEventBasedTask",
        "parameters": [
          {
            "name": "eventBasedTaskID",
            "in": "path",
            "description": "The ID number of the event based task to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventBasedTask"
              }
            }
          },
          "description": "The settings of the event based task to modify.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventBasedTask"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify event based tasks or the requested modification is not permitted."
          },
          "404": {
            "description": "The event based task does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.EventBasedTasksApi;\r\nimport com.trendmicro.deepsecurity.model.EventBasedTask;\r\n\r\n\r\npublic class ModifyEventBasedTaskExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tEventBasedTasksApi instance = new EventBasedTasksApi();\r\n\t\tInteger eventBasedTaskID = 1;\r\n\t\tEventBasedTask eventBasedTask = new EventBasedTask();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tEventBasedTask result = instance.modifyEventBasedTask(eventBasedTaskID, eventBasedTask, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling EventBasedTasksApi.modifyEventBasedTask\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.EventBasedTasksApi(deepsecurity.ApiClient(configuration))\r\nevent_based_task_id = 1\r\nevent_based_task = deepsecurity.EventBasedTask()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_event_based_task(event_based_task_id, event_based_task, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling EventBasedTasksApi.modify_event_based_task: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.EventBasedTasksApi();\r\nlet eventBasedTaskID = 1;\r\nlet eventBasedTask = new Deepsecurity.EventBasedTask();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifyEventBasedTask(eventBasedTaskID, eventBasedTask, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Event Based Tasks"
        ],
        "summary": "Delete an Event Based Task",
        "description": "Delete an event based task by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>EventBasedTasksApi.deleteEventBasedTask([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>EventBasedTasksApi.delete_event_based_task([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>EventBasedTasksApi.deleteEventBasedTask([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteEventBasedTask",
        "parameters": [
          {
            "name": "eventBasedTaskID",
            "in": "path",
            "description": "The ID number of the event based task to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete event based tasks."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.EventBasedTasksApi;\r\n\r\n\r\npublic class DeleteEventBasedTaskExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tEventBasedTasksApi instance = new EventBasedTasksApi();\r\n\t\tInteger eventBasedTaskID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteEventBasedTask(eventBasedTaskID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling EventBasedTasksApi.deleteEventBasedTask\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.EventBasedTasksApi(deepsecurity.ApiClient(configuration))\r\nevent_based_task_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_event_based_task(event_based_task_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling EventBasedTasksApi.delete_event_based_task: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.EventBasedTasksApi();\r\nlet eventBasedTaskID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteEventBasedTask(eventBasedTaskID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/fileextensionlists": {
      "get": {
        "tags": [
          "File Extension Lists"
        ],
        "summary": "List File Extension Lists",
        "description": "Lists all file extension lists. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileExtensionListsApi.listFileExtensionLists([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileExtensionListsApi.list_file_extension_lists([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileExtensionListsApi.listFileExtensionLists([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listFileExtensionLists",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileExtensionLists"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view file extension lists."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.FileExtensionListsApi;\r\nimport com.trendmicro.deepsecurity.model.FileExtensionLists;\r\n\r\n\r\npublic class ListFileExtensionListsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tFileExtensionListsApi instance = new FileExtensionListsApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tFileExtensionLists result = instance.listFileExtensionLists(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling FileExtensionListsApi.listFileExtensionLists\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.FileExtensionListsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_file_extension_lists(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling FileExtensionListsApi.list_file_extension_lists: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.FileExtensionListsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listFileExtensionLists(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "File Extension Lists"
        ],
        "summary": "Create a File Extension List",
        "description": "Create a new file extension list. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileExtensionListsApi.createFileExtensionList([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileExtensionListsApi.create_file_extension_list([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileExtensionListsApi.createFileExtensionList([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createFileExtensionList",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fileExtensionList"
              }
            }
          },
          "description": "The settings of the new file extension list.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fileExtensionList"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create file extension lists."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.FileExtensionListsApi;\r\nimport com.trendmicro.deepsecurity.model.FileExtensionList;\r\n\r\n\r\npublic class CreateFileExtensionListExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tFileExtensionListsApi instance = new FileExtensionListsApi();\r\n\t\tFileExtensionList fileExtensionList = new FileExtensionList();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tFileExtensionList result = instance.createFileExtensionList(fileExtensionList, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling FileExtensionListsApi.createFileExtensionList\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.FileExtensionListsApi(deepsecurity.ApiClient(configuration))\r\nfile_extension_list = deepsecurity.FileExtensionList()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_file_extension_list(file_extension_list, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling FileExtensionListsApi.create_file_extension_list: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.FileExtensionListsApi();\r\nlet fileExtensionList = new Deepsecurity.FileExtensionList();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createFileExtensionList(fileExtensionList, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/fileextensionlists/search": {
      "post": {
        "tags": [
          "File Extension Lists"
        ],
        "summary": "Search File Extension Lists",
        "description": "Search for file extension lists using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileExtensionListsApi.searchFileExtensionLists([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileExtensionListsApi.search_file_extension_lists([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileExtensionListsApi.searchFileExtensionLists([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchFileExtensionLists",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileExtensionLists"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view file extension lists."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.FileExtensionListsApi;\r\nimport com.trendmicro.deepsecurity.model.FileExtensionLists;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchFileExtensionListsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tFileExtensionListsApi instance = new FileExtensionListsApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tFileExtensionLists result = instance.searchFileExtensionLists(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling FileExtensionListsApi.searchFileExtensionLists\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.FileExtensionListsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_file_extension_lists(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling FileExtensionListsApi.search_file_extension_lists: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.FileExtensionListsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchFileExtensionLists(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/fileextensionlists/{fileExtensionListID}": {
      "get": {
        "tags": [
          "File Extension Lists"
        ],
        "summary": "Describe a File Extension List",
        "description": "Describe a file extension list by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileExtensionListsApi.describeFileExtensionList([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileExtensionListsApi.describe_file_extension_list([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileExtensionListsApi.describeFileExtensionList([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeFileExtensionList",
        "parameters": [
          {
            "name": "fileExtensionListID",
            "in": "path",
            "description": "The ID number of the file extension list to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fileExtensionList"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view file extension lists."
          },
          "404": {
            "description": "The file extension does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.FileExtensionListsApi;\r\nimport com.trendmicro.deepsecurity.model.FileExtensionList;\r\n\r\n\r\npublic class DescribeFileExtensionListExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tFileExtensionListsApi instance = new FileExtensionListsApi();\r\n\t\tInteger fileExtensionListID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tFileExtensionList result = instance.describeFileExtensionList(fileExtensionListID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling FileExtensionListsApi.describeFileExtensionList\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.FileExtensionListsApi(deepsecurity.ApiClient(configuration))\r\nfile_extension_list_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_file_extension_list(file_extension_list_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling FileExtensionListsApi.describe_file_extension_list: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.FileExtensionListsApi();\r\nlet fileExtensionListID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeFileExtensionList(fileExtensionListID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "File Extension Lists"
        ],
        "summary": "Modify a File Extension List",
        "description": "Modify a file extension list by ID. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileExtensionListsApi.modifyFileExtensionList([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileExtensionListsApi.modify_file_extension_list([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileExtensionListsApi.modifyFileExtensionList([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyFileExtensionList",
        "parameters": [
          {
            "name": "fileExtensionListID",
            "in": "path",
            "description": "The ID number of the file extension list to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fileExtensionList"
              }
            }
          },
          "description": "The settings of the file extension list to modify.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fileExtensionList"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify file extension lists or the requested modification is not permitted."
          },
          "404": {
            "description": "The file extension does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.FileExtensionListsApi;\r\nimport com.trendmicro.deepsecurity.model.FileExtensionList;\r\n\r\n\r\npublic class ModifyFileExtensionListExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tFileExtensionListsApi instance = new FileExtensionListsApi();\r\n\t\tInteger fileExtensionListID = 1;\r\n\t\tFileExtensionList fileExtensionList = new FileExtensionList();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tFileExtensionList result = instance.modifyFileExtensionList(fileExtensionListID, fileExtensionList, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling FileExtensionListsApi.modifyFileExtensionList\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.FileExtensionListsApi(deepsecurity.ApiClient(configuration))\r\nfile_extension_list_id = 1\r\nfile_extension_list = deepsecurity.FileExtensionList()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_file_extension_list(file_extension_list_id, file_extension_list, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling FileExtensionListsApi.modify_file_extension_list: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.FileExtensionListsApi();\r\nlet fileExtensionListID = 1;\r\nlet fileExtensionList = new Deepsecurity.FileExtensionList();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifyFileExtensionList(fileExtensionListID, fileExtensionList, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "File Extension Lists"
        ],
        "summary": "Delete a File Extension List",
        "description": "Delete a file extension list by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileExtensionListsApi.deleteFileExtensionList([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileExtensionListsApi.delete_file_extension_list([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileExtensionListsApi.deleteFileExtensionList([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteFileExtensionList",
        "parameters": [
          {
            "name": "fileExtensionListID",
            "in": "path",
            "description": "The ID number of the file extension list to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete file extension lists."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.FileExtensionListsApi;\r\n\r\n\r\npublic class DeleteFileExtensionListExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tFileExtensionListsApi instance = new FileExtensionListsApi();\r\n\t\tInteger fileExtensionListID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteFileExtensionList(fileExtensionListID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling FileExtensionListsApi.deleteFileExtensionList\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.FileExtensionListsApi(deepsecurity.ApiClient(configuration))\r\nfile_extension_list_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_file_extension_list(file_extension_list_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling FileExtensionListsApi.delete_file_extension_list: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.FileExtensionListsApi();\r\nlet fileExtensionListID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteFileExtensionList(fileExtensionListID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/filelists": {
      "get": {
        "tags": [
          "File Lists"
        ],
        "summary": "List File Lists",
        "description": "Lists all file lists. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileListsApi.listFileLists([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileListsApi.list_file_lists([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileListsApi.listFileLists([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listFileLists",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileLists"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view file lists."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.FileListsApi;\r\nimport com.trendmicro.deepsecurity.model.FileLists;\r\n\r\n\r\npublic class ListFileListsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tFileListsApi instance = new FileListsApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tFileLists result = instance.listFileLists(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling FileListsApi.listFileLists\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.FileListsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_file_lists(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling FileListsApi.list_file_lists: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.FileListsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listFileLists(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "File Lists"
        ],
        "summary": "Create a File List",
        "description": "Create a new file list. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileListsApi.createFileList([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileListsApi.create_file_list([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileListsApi.createFileList([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createFileList",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fileList"
              }
            }
          },
          "description": "The settings of the new file list.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fileList"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create file lists."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.FileListsApi;\r\nimport com.trendmicro.deepsecurity.model.FileList;\r\n\r\n\r\npublic class CreateFileListExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tFileListsApi instance = new FileListsApi();\r\n\t\tFileList fileList = new FileList();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tFileList result = instance.createFileList(fileList, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling FileListsApi.createFileList\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.FileListsApi(deepsecurity.ApiClient(configuration))\r\nfile_list = deepsecurity.FileList()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_file_list(file_list, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling FileListsApi.create_file_list: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.FileListsApi();\r\nlet fileList = new Deepsecurity.FileList();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createFileList(fileList, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/filelists/search": {
      "post": {
        "tags": [
          "File Lists"
        ],
        "summary": "Search File Lists",
        "description": "Search for file lists using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileListsApi.searchFileLists([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileListsApi.search_file_lists([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileListsApi.searchFileLists([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchFileLists",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileLists"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view file lists."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.FileListsApi;\r\nimport com.trendmicro.deepsecurity.model.FileLists;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchFileListsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tFileListsApi instance = new FileListsApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tFileLists result = instance.searchFileLists(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling FileListsApi.searchFileLists\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.FileListsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_file_lists(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling FileListsApi.search_file_lists: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.FileListsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchFileLists(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/filelists/{fileListID}": {
      "get": {
        "tags": [
          "File Lists"
        ],
        "summary": "Describe a File List",
        "description": "Describe a file list by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileListsApi.describeFileList([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileListsApi.describe_file_list([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileListsApi.describeFileList([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeFileList",
        "parameters": [
          {
            "name": "fileListID",
            "in": "path",
            "description": "The ID number of the anti-malware configuration to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fileList"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view file lists."
          },
          "404": {
            "description": "The file list does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.FileListsApi;\r\nimport com.trendmicro.deepsecurity.model.FileList;\r\n\r\n\r\npublic class DescribeFileListExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tFileListsApi instance = new FileListsApi();\r\n\t\tInteger fileListID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tFileList result = instance.describeFileList(fileListID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling FileListsApi.describeFileList\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.FileListsApi(deepsecurity.ApiClient(configuration))\r\nfile_list_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_file_list(file_list_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling FileListsApi.describe_file_list: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.FileListsApi();\r\nlet fileListID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeFileList(fileListID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "File Lists"
        ],
        "summary": "Modify a File List",
        "description": "Modify a file list by ID. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileListsApi.modifyFileList([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileListsApi.modify_file_list([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileListsApi.modifyFileList([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyFileList",
        "parameters": [
          {
            "name": "fileListID",
            "in": "path",
            "description": "The ID number of the file list to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fileList"
              }
            }
          },
          "description": "The settings of the file list to modify.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fileList"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify file lists or the requested modification is not permitted."
          },
          "404": {
            "description": "The file list does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.FileListsApi;\r\nimport com.trendmicro.deepsecurity.model.FileList;\r\n\r\n\r\npublic class ModifyFileListExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tFileListsApi instance = new FileListsApi();\r\n\t\tInteger fileListID = 1;\r\n\t\tFileList fileList = new FileList();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tFileList result = instance.modifyFileList(fileListID, fileList, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling FileListsApi.modifyFileList\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.FileListsApi(deepsecurity.ApiClient(configuration))\r\nfile_list_id = 1\r\nfile_list = deepsecurity.FileList()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_file_list(file_list_id, file_list, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling FileListsApi.modify_file_list: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.FileListsApi();\r\nlet fileListID = 1;\r\nlet fileList = new Deepsecurity.FileList();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifyFileList(fileListID, fileList, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "File Lists"
        ],
        "summary": "Delete a File List",
        "description": "Delete a file list by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileListsApi.deleteFileList([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileListsApi.delete_file_list([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FileListsApi.deleteFileList([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteFileList",
        "parameters": [
          {
            "name": "fileListID",
            "in": "path",
            "description": "The ID number of the file list to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete file lists."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.FileListsApi;\r\n\r\n\r\npublic class DeleteFileListExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tFileListsApi instance = new FileListsApi();\r\n\t\tInteger fileListID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteFileList(fileListID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling FileListsApi.deleteFileList\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.FileListsApi(deepsecurity.ApiClient(configuration))\r\nfile_list_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_file_list(file_list_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling FileListsApi.delete_file_list: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.FileListsApi();\r\nlet fileListID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteFileList(fileListID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/firewallrules": {
      "get": {
        "tags": [
          "Firewall Rules"
        ],
        "summary": "List Firewall Rules",
        "description": "Lists all firewall rules. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FirewallRulesApi.listFirewallRules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FirewallRulesApi.list_firewall_rules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FirewallRulesApi.listFirewallRules([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listFirewallRules",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FirewallRules"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view firewall rules."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.FirewallRulesApi;\r\nimport com.trendmicro.deepsecurity.model.FirewallRules;\r\n\r\n\r\npublic class ListFirewallRulesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tFirewallRulesApi instance = new FirewallRulesApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tFirewallRules result = instance.listFirewallRules(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling FirewallRulesApi.listFirewallRules\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.FirewallRulesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_firewall_rules(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling FirewallRulesApi.list_firewall_rules: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.FirewallRulesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listFirewallRules(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Firewall Rules"
        ],
        "summary": "Create a Firewall Rule",
        "description": "Create a new firewall rule. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FirewallRulesApi.createFirewallRule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FirewallRulesApi.create_firewall_rule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FirewallRulesApi.createFirewallRule([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createFirewallRule",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/firewallRule"
              }
            }
          },
          "description": "The settings of the new firewall rule.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firewallRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create firewall rules."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.FirewallRulesApi;\r\nimport com.trendmicro.deepsecurity.model.FirewallRule;\r\n\r\n\r\npublic class CreateFirewallRuleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tFirewallRulesApi instance = new FirewallRulesApi();\r\n\t\tFirewallRule firewallRule = new FirewallRule();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tFirewallRule result = instance.createFirewallRule(firewallRule, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling FirewallRulesApi.createFirewallRule\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.FirewallRulesApi(deepsecurity.ApiClient(configuration))\r\nfirewall_rule = deepsecurity.FirewallRule()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_firewall_rule(firewall_rule, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling FirewallRulesApi.create_firewall_rule: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.FirewallRulesApi();\r\nlet firewallRule = new Deepsecurity.FirewallRule();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createFirewallRule(firewallRule, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/firewallrules/search": {
      "post": {
        "tags": [
          "Firewall Rules"
        ],
        "summary": "Search Firewall Rules",
        "description": "Search for firewall rules using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FirewallRulesApi.searchFirewallRules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FirewallRulesApi.search_firewall_rules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FirewallRulesApi.searchFirewallRules([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchFirewallRules",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FirewallRules"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view firewall rules."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.FirewallRulesApi;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\nimport com.trendmicro.deepsecurity.model.FirewallRules;\r\n\r\n\r\npublic class SearchFirewallRulesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tFirewallRulesApi instance = new FirewallRulesApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tFirewallRules result = instance.searchFirewallRules(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling FirewallRulesApi.searchFirewallRules\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.FirewallRulesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_firewall_rules(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling FirewallRulesApi.search_firewall_rules: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.FirewallRulesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchFirewallRules(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/firewallrules/{firewallRuleID}": {
      "get": {
        "tags": [
          "Firewall Rules"
        ],
        "summary": "Describe a Firewall Rule",
        "description": "Describe a firewall rule by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FirewallRulesApi.describeFirewallRule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FirewallRulesApi.describe_firewall_rule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FirewallRulesApi.describeFirewallRule([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeFirewallRule",
        "parameters": [
          {
            "name": "firewallRuleID",
            "in": "path",
            "description": "The ID number of the firewall rule to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firewallRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view firewall rules."
          },
          "404": {
            "description": "The firewall rule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.FirewallRulesApi;\r\nimport com.trendmicro.deepsecurity.model.FirewallRule;\r\n\r\n\r\npublic class DescribeFirewallRuleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tFirewallRulesApi instance = new FirewallRulesApi();\r\n\t\tInteger firewallRuleID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tFirewallRule result = instance.describeFirewallRule(firewallRuleID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling FirewallRulesApi.describeFirewallRule\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.FirewallRulesApi(deepsecurity.ApiClient(configuration))\r\nfirewall_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_firewall_rule(firewall_rule_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling FirewallRulesApi.describe_firewall_rule: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.FirewallRulesApi();\r\nlet firewallRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeFirewallRule(firewallRuleID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Firewall Rules"
        ],
        "summary": "Modify a Firewall Rule",
        "description": "Modify a firewall rule by ID. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FirewallRulesApi.modifyFirewallRule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FirewallRulesApi.modify_firewall_rule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FirewallRulesApi.modifyFirewallRule([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyFirewallRule",
        "parameters": [
          {
            "name": "firewallRuleID",
            "in": "path",
            "description": "The ID number of the firewall rule to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/firewallRule"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firewallRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify API keys or the requested modification is not permitted."
          },
          "404": {
            "description": "The firewall rule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.FirewallRulesApi;\r\nimport com.trendmicro.deepsecurity.model.FirewallRule;\r\n\r\n\r\npublic class ModifyFirewallRuleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tFirewallRulesApi instance = new FirewallRulesApi();\r\n\t\tInteger firewallRuleID = 1;\r\n\t\tFirewallRule firewallRules = new FirewallRule();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tFirewallRule result = instance.modifyFirewallRule(firewallRuleID, firewallRules, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling FirewallRulesApi.modifyFirewallRule\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.FirewallRulesApi(deepsecurity.ApiClient(configuration))\r\nfirewall_rule_id = 1\r\nfirewall_rules = deepsecurity.FirewallRule()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_firewall_rule(firewall_rule_id, firewall_rules, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling FirewallRulesApi.modify_firewall_rule: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.FirewallRulesApi();\r\nlet firewallRuleID = 1;\r\nlet firewallRules = new Deepsecurity.FirewallRule();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifyFirewallRule(firewallRuleID, firewallRules, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Firewall Rules"
        ],
        "summary": "Delete a Firewall Rule",
        "description": "Delete a firewall rule by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FirewallRulesApi.deleteFirewallRule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FirewallRulesApi.delete_firewall_rule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>FirewallRulesApi.deleteFirewallRule([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteFirewallRule",
        "parameters": [
          {
            "name": "firewallRuleID",
            "in": "path",
            "description": "The ID number of the firewall rule to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete firewall rules."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.FirewallRulesApi;\r\n\r\n\r\npublic class DeleteFirewallRuleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tFirewallRulesApi instance = new FirewallRulesApi();\r\n\t\tInteger firewallRuleID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteFirewallRule(firewallRuleID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling FirewallRulesApi.deleteFirewallRule\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.FirewallRulesApi(deepsecurity.ApiClient(configuration))\r\nfirewall_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_firewall_rule(firewall_rule_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling FirewallRulesApi.delete_firewall_rule: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.FirewallRulesApi();\r\nlet firewallRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteFirewallRule(firewallRuleID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/gcpconnectors/{gcpConnectorID}/actions": {
      "post": {
        "tags": [
          "GCP Connector Actions"
        ],
        "summary": "Create a connector action",
        "description": "Create a connector action by connector ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GcpConnectorActionsApi.createGCPConnectorAction([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GCPConnectorActionsApi.create_gcp_connector_action([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GCPConnectorActionsApi.createGCPConnectorAction([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createGCPConnectorAction",
        "parameters": [
          {
            "name": "gcpConnectorID",
            "in": "path",
            "description": "The ID number of the GCP Connector.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/action"
              }
            }
          },
          "description": "The property of the new GCP Connector action.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/action"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the action."
          },
          "404": {
            "description": "The action does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.GcpConnectorActionsApi;\r\nimport com.trendmicro.deepsecurity.model.Action;\r\n\r\n\r\npublic class CreateGCPConnectorActionExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tGcpConnectorActionsApi instance = new GcpConnectorActionsApi();\r\n\t\tInteger gcpConnectorID = 1;\r\n\t\tAction gcpConnectorAction = new Action();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAction result = instance.createGCPConnectorAction(gcpConnectorID, gcpConnectorAction, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling GcpConnectorActionsApi.createGCPConnectorAction\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.GCPConnectorActionsApi(deepsecurity.ApiClient(configuration))\r\ngcp_connector_id = 1\r\ngcp_connector_action = deepsecurity.Action()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_gcp_connector_action(gcp_connector_id, gcp_connector_action, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling GCPConnectorActionsApi.create_gcp_connector_action: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.GCPConnectorActionsApi();\r\nlet gcpConnectorID = 1;\r\nlet gcpConnectorAction = new Deepsecurity.Action();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createGCPConnectorAction(gcpConnectorID, gcpConnectorAction, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/gcpconnectors/{gcpConnectorID}/actions/{actionID}": {
      "get": {
        "tags": [
          "GCP Connector Actions"
        ],
        "summary": "Describe a connector action",
        "description": "Describe a connector action by connector ID and action ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GcpConnectorActionsApi.describeGCPConnectorAction([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GCPConnectorActionsApi.describe_gcp_connector_action([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GCPConnectorActionsApi.describeGCPConnectorAction([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeGCPConnectorAction",
        "parameters": [
          {
            "name": "gcpConnectorID",
            "in": "path",
            "description": "The ID number of the GCP Connector.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "actionID",
            "in": "path",
            "description": "The ID number of the GCP Connector action.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/action"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the action."
          },
          "404": {
            "description": "The action does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.GcpConnectorActionsApi;\r\nimport com.trendmicro.deepsecurity.model.Action;\r\n\r\n\r\npublic class DescribeGCPConnectorActionExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tGcpConnectorActionsApi instance = new GcpConnectorActionsApi();\r\n\t\tInteger gcpConnectorID = 1;\r\n\t\tLong actionID = 1L;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tAction result = instance.describeGCPConnectorAction(gcpConnectorID, actionID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling GcpConnectorActionsApi.describeGCPConnectorAction\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.GCPConnectorActionsApi(deepsecurity.ApiClient(configuration))\r\ngcp_connector_id = 1\r\naction_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_gcp_connector_action(gcp_connector_id, action_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling GCPConnectorActionsApi.describe_gcp_connector_action: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.GCPConnectorActionsApi();\r\nlet gcpConnectorID = 1;\r\nlet actionID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeGCPConnectorAction(gcpConnectorID, actionID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/gcpconnectors": {
      "get": {
        "tags": [
          "GCP Connectors"
        ],
        "summary": "List GCP Connectors",
        "description": "List all GCP connectors. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GcpConnectorsApi.listGCPConnectors([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GCPConnectorsApi.list_gcp_connectors([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GCPConnectorsApi.listGCPConnectors([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listGCPConnectors",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GCPConnectors"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view GCP connectors."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.GcpConnectorsApi;\r\nimport com.trendmicro.deepsecurity.model.GCPConnectors;\r\n\r\n\r\npublic class ListGCPConnectorsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tGcpConnectorsApi instance = new GcpConnectorsApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tGCPConnectors result = instance.listGCPConnectors(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling GcpConnectorsApi.listGCPConnectors\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.GCPConnectorsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_gcp_connectors(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling GCPConnectorsApi.list_gcp_connectors: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.GCPConnectorsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listGCPConnectors(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "GCP Connectors"
        ],
        "summary": "Create a GCP Connector",
        "description": "Create a new GCP Connector. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GcpConnectorsApi.createGCPConnector([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GCPConnectorsApi.create_gcp_connector([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GCPConnectorsApi.createGCPConnector([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createGCPConnector",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GCPConnector"
              }
            }
          },
          "description": "The settings of the new GCP connector.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GCPConnector"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create GCP Connector."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.GcpConnectorsApi;\r\nimport com.trendmicro.deepsecurity.model.GCPConnector;\r\n\r\n\r\npublic class CreateGCPConnectorExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tGcpConnectorsApi instance = new GcpConnectorsApi();\r\n\t\tGCPConnector gcpConnector = new GCPConnector();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tGCPConnector result = instance.createGCPConnector(gcpConnector, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling GcpConnectorsApi.createGCPConnector\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.GCPConnectorsApi(deepsecurity.ApiClient(configuration))\r\ngcp_connector = deepsecurity.GCPConnector()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_gcp_connector(gcp_connector, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling GCPConnectorsApi.create_gcp_connector: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.GCPConnectorsApi();\r\nlet gcpConnector = new Deepsecurity.GCPConnector();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createGCPConnector(gcpConnector, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/gcpconnectors/search": {
      "post": {
        "tags": [
          "GCP Connectors"
        ],
        "summary": "Search GCP Connectors",
        "description": "Search for GCP connectors using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GcpConnectorsApi.searchGCPConnectors([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GCPConnectorsApi.search_gcp_connectors([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GCPConnectorsApi.searchGCPConnectors([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchGCPConnectors",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GCPConnectors"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view GCP connectors."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.GcpConnectorsApi;\r\nimport com.trendmicro.deepsecurity.model.GCPConnectors;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchGCPConnectorsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tGcpConnectorsApi instance = new GcpConnectorsApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tGCPConnectors result = instance.searchGCPConnectors(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling GcpConnectorsApi.searchGCPConnectors\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.GCPConnectorsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_gcp_connectors(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling GCPConnectorsApi.search_gcp_connectors: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.GCPConnectorsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchGCPConnectors(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/gcpconnectors/{gcpConnectorID}": {
      "get": {
        "tags": [
          "GCP Connectors"
        ],
        "summary": "Describe a GCP Connector",
        "description": "Describe a GCP connector by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GcpConnectorsApi.describeGCPConnector([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GCPConnectorsApi.describe_gcp_connector([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GCPConnectorsApi.describeGCPConnector([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeGCPConnector",
        "parameters": [
          {
            "name": "gcpConnectorID",
            "in": "path",
            "description": "ID number of the GCP connector to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GCPConnector"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view GCP connectors."
          },
          "404": {
            "description": "The GCP connector does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.GcpConnectorsApi;\r\nimport com.trendmicro.deepsecurity.model.GCPConnector;\r\n\r\n\r\npublic class DescribeGCPConnectorExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tGcpConnectorsApi instance = new GcpConnectorsApi();\r\n\t\tInteger gcpConnectorID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tGCPConnector result = instance.describeGCPConnector(gcpConnectorID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling GcpConnectorsApi.describeGCPConnector\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.GCPConnectorsApi(deepsecurity.ApiClient(configuration))\r\ngcp_connector_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_gcp_connector(gcp_connector_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling GCPConnectorsApi.describe_gcp_connector: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.GCPConnectorsApi();\r\nlet gcpConnectorID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeGCPConnector(gcpConnectorID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "GCP Connectors"
        ],
        "summary": "Modify a GCP Connector",
        "description": "Modify a GCP connector by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GcpConnectorsApi.modifyGCPConnector([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GCPConnectorsApi.modify_gcp_connector([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GCPConnectorsApi.modifyGCPConnector([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyGCPConnector",
        "parameters": [
          {
            "name": "gcpConnectorID",
            "in": "path",
            "description": "ID number of the GCP Connector to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GCPConnector"
              }
            }
          },
          "description": "The settings of the GCP connector to modify."
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GCPConnector"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the GCP Connector or the requested modification is not permitted."
          },
          "404": {
            "description": "The GCP Connector does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.GcpConnectorsApi;\r\nimport com.trendmicro.deepsecurity.model.GCPConnector;\r\n\r\n\r\npublic class ModifyGCPConnectorExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tGcpConnectorsApi instance = new GcpConnectorsApi();\r\n\t\tInteger gcpConnectorID = 1;\r\n\t\tGCPConnector gcpConnector = new GCPConnector();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tGCPConnector result = instance.modifyGCPConnector(gcpConnectorID, gcpConnector, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling GcpConnectorsApi.modifyGCPConnector\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.GCPConnectorsApi(deepsecurity.ApiClient(configuration))\r\ngcp_connector_id = 1\r\napi_version = 'YOUR VERSION'\r\ngcp_connector = deepsecurity.GCPConnector()\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_gcp_connector(gcp_connector_id, api_version, gcp_connector=gcp_connector)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling GCPConnectorsApi.modify_gcp_connector: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.GCPConnectorsApi();\r\nlet gcpConnectorID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  gcpConnector: new Deepsecurity.GCPConnector(),\r\n};\r\n\r\napiInstance.modifyGCPConnector(gcpConnectorID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "GCP Connectors"
        ],
        "summary": "Delete a GCP Connector",
        "description": "Delete a GCP connector by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GcpConnectorsApi.deleteGCPConnector([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GCPConnectorsApi.delete_gcp_connector([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>GCPConnectorsApi.deleteGCPConnector([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteGCPConnector",
        "parameters": [
          {
            "name": "gcpConnectorID",
            "in": "path",
            "description": "ID number of the GCP Connector to be deleted.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete the GCP connector or the requested modification is not permitted."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.GcpConnectorsApi;\r\n\r\n\r\npublic class DeleteGCPConnectorExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tGcpConnectorsApi instance = new GcpConnectorsApi();\r\n\t\tInteger gcpConnectorID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteGCPConnector(gcpConnectorID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling GcpConnectorsApi.deleteGCPConnector\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.GCPConnectorsApi(deepsecurity.ApiClient(configuration))\r\ngcp_connector_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_gcp_connector(gcp_connector_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling GCPConnectorsApi.delete_gcp_connector: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.GCPConnectorsApi();\r\nlet gcpConnectorID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteGCPConnector(gcpConnectorID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/integritymonitoringrules/{integrityMonitoringRuleID}": {
      "get": {
        "tags": [
          "Integrity Monitoring Rules"
        ],
        "summary": "Describe an Integrity Monitoring Rule",
        "description": "Describe an integrity monitoring rule by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntegrityMonitoringRulesApi.describeIntegrityMonitoringRule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntegrityMonitoringRulesApi.describe_integrity_monitoring_rule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntegrityMonitoringRulesApi.describeIntegrityMonitoringRule([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeIntegrityMonitoringRule",
        "parameters": [
          {
            "name": "integrityMonitoringRuleID",
            "in": "path",
            "description": "The ID number of the integrity monitoring rule to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/integrityMonitoringRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view integrity monitorings."
          },
          "404": {
            "description": "The integrity monitoring rule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.IntegrityMonitoringRulesApi;\r\nimport com.trendmicro.deepsecurity.model.IntegrityMonitoringRule;\r\n\r\n\r\npublic class DescribeIntegrityMonitoringRuleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tIntegrityMonitoringRulesApi instance = new IntegrityMonitoringRulesApi();\r\n\t\tInteger integrityMonitoringRuleID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntegrityMonitoringRule result = instance.describeIntegrityMonitoringRule(integrityMonitoringRuleID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling IntegrityMonitoringRulesApi.describeIntegrityMonitoringRule\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.IntegrityMonitoringRulesApi(deepsecurity.ApiClient(configuration))\r\nintegrity_monitoring_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_integrity_monitoring_rule(integrity_monitoring_rule_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling IntegrityMonitoringRulesApi.describe_integrity_monitoring_rule: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.IntegrityMonitoringRulesApi();\r\nlet integrityMonitoringRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeIntegrityMonitoringRule(integrityMonitoringRuleID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Integrity Monitoring Rules"
        ],
        "summary": "Modify an Integrity Monitoring Rule",
        "description": "Modify an integrity monitoring rule by ID. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntegrityMonitoringRulesApi.modifyIntegrityMonitoringRule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntegrityMonitoringRulesApi.modify_integrity_monitoring_rule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntegrityMonitoringRulesApi.modifyIntegrityMonitoringRule([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyIntegrityMonitoringRule",
        "parameters": [
          {
            "name": "integrityMonitoringRuleID",
            "in": "path",
            "description": "The ID number of the integrity monitoring rule to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/integrityMonitoringRule"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/integrityMonitoringRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify integrity monitoring rule or the requested modification is not permitted."
          },
          "404": {
            "description": "The integrity monitoring rule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.IntegrityMonitoringRulesApi;\r\nimport com.trendmicro.deepsecurity.model.IntegrityMonitoringRule;\r\n\r\n\r\npublic class ModifyIntegrityMonitoringRuleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tIntegrityMonitoringRulesApi instance = new IntegrityMonitoringRulesApi();\r\n\t\tInteger integrityMonitoringRuleID = 1;\r\n\t\tIntegrityMonitoringRule integrityMonitoringRule = new IntegrityMonitoringRule();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntegrityMonitoringRule result = instance.modifyIntegrityMonitoringRule(integrityMonitoringRuleID, integrityMonitoringRule, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling IntegrityMonitoringRulesApi.modifyIntegrityMonitoringRule\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.IntegrityMonitoringRulesApi(deepsecurity.ApiClient(configuration))\r\nintegrity_monitoring_rule_id = 1\r\nintegrity_monitoring_rule = deepsecurity.IntegrityMonitoringRule()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_integrity_monitoring_rule(integrity_monitoring_rule_id, integrity_monitoring_rule, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling IntegrityMonitoringRulesApi.modify_integrity_monitoring_rule: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.IntegrityMonitoringRulesApi();\r\nlet integrityMonitoringRuleID = 1;\r\nlet integrityMonitoringRule = new Deepsecurity.IntegrityMonitoringRule();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifyIntegrityMonitoringRule(integrityMonitoringRuleID, integrityMonitoringRule, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Integrity Monitoring Rules"
        ],
        "summary": "Delete an Integrity Monitoring Rule",
        "description": "Delete an integrity monitoring rule by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntegrityMonitoringRulesApi.deleteIntegrityMonitoringRule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntegrityMonitoringRulesApi.delete_integrity_monitoring_rule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntegrityMonitoringRulesApi.deleteIntegrityMonitoringRule([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteIntegrityMonitoringRule",
        "parameters": [
          {
            "name": "integrityMonitoringRuleID",
            "in": "path",
            "description": "The ID number of the integrity monitoring rule to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete integrity monitoring rules."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.IntegrityMonitoringRulesApi;\r\n\r\n\r\npublic class DeleteIntegrityMonitoringRuleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tIntegrityMonitoringRulesApi instance = new IntegrityMonitoringRulesApi();\r\n\t\tInteger integrityMonitoringRuleID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteIntegrityMonitoringRule(integrityMonitoringRuleID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling IntegrityMonitoringRulesApi.deleteIntegrityMonitoringRule\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.IntegrityMonitoringRulesApi(deepsecurity.ApiClient(configuration))\r\nintegrity_monitoring_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_integrity_monitoring_rule(integrity_monitoring_rule_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling IntegrityMonitoringRulesApi.delete_integrity_monitoring_rule: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.IntegrityMonitoringRulesApi();\r\nlet integrityMonitoringRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteIntegrityMonitoringRule(integrityMonitoringRuleID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/integritymonitoringrules/search": {
      "post": {
        "tags": [
          "Integrity Monitoring Rules"
        ],
        "summary": "Search Integrity Monitoring Rules",
        "description": "Search for integrity monitoring rules using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntegrityMonitoringRulesApi.searchIntegrityMonitoringRules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntegrityMonitoringRulesApi.search_integrity_monitoring_rules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntegrityMonitoringRulesApi.searchIntegrityMonitoringRules([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchIntegrityMonitoringRules",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrityMonitoringRules"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view integrity monitorings."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.IntegrityMonitoringRulesApi;\r\nimport com.trendmicro.deepsecurity.model.IntegrityMonitoringRules;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchIntegrityMonitoringRulesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tIntegrityMonitoringRulesApi instance = new IntegrityMonitoringRulesApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntegrityMonitoringRules result = instance.searchIntegrityMonitoringRules(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling IntegrityMonitoringRulesApi.searchIntegrityMonitoringRules\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.IntegrityMonitoringRulesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_integrity_monitoring_rules(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling IntegrityMonitoringRulesApi.search_integrity_monitoring_rules: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.IntegrityMonitoringRulesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchIntegrityMonitoringRules(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/integritymonitoringrules": {
      "get": {
        "tags": [
          "Integrity Monitoring Rules"
        ],
        "summary": "List Integrity Monitoring Rules",
        "description": "Lists all integrity monitoring rules. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntegrityMonitoringRulesApi.listIntegrityMonitoringRules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntegrityMonitoringRulesApi.list_integrity_monitoring_rules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntegrityMonitoringRulesApi.listIntegrityMonitoringRules([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listIntegrityMonitoringRules",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrityMonitoringRules"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view integrity monitorings."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.IntegrityMonitoringRulesApi;\r\nimport com.trendmicro.deepsecurity.model.IntegrityMonitoringRules;\r\n\r\n\r\npublic class ListIntegrityMonitoringRulesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tIntegrityMonitoringRulesApi instance = new IntegrityMonitoringRulesApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntegrityMonitoringRules result = instance.listIntegrityMonitoringRules(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling IntegrityMonitoringRulesApi.listIntegrityMonitoringRules\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.IntegrityMonitoringRulesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_integrity_monitoring_rules(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling IntegrityMonitoringRulesApi.list_integrity_monitoring_rules: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.IntegrityMonitoringRulesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listIntegrityMonitoringRules(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Integrity Monitoring Rules"
        ],
        "summary": "Create an Integrity Monitoring Rule",
        "description": "Create a new integrity monitoring rule. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntegrityMonitoringRulesApi.createIntegrityMonitoringRule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntegrityMonitoringRulesApi.create_integrity_monitoring_rule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntegrityMonitoringRulesApi.createIntegrityMonitoringRule([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createIntegrityMonitoringRule",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/integrityMonitoringRule"
              }
            }
          },
          "description": "The settings of the new integrity monitoring rule."
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/integrityMonitoringRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view integrity monitorings."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.IntegrityMonitoringRulesApi;\r\nimport com.trendmicro.deepsecurity.model.IntegrityMonitoringRule;\r\n\r\n\r\npublic class CreateIntegrityMonitoringRuleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tIntegrityMonitoringRulesApi instance = new IntegrityMonitoringRulesApi();\r\n\t\tIntegrityMonitoringRule integrityMonitoringRule = new IntegrityMonitoringRule();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntegrityMonitoringRule result = instance.createIntegrityMonitoringRule(integrityMonitoringRule, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling IntegrityMonitoringRulesApi.createIntegrityMonitoringRule\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.IntegrityMonitoringRulesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nintegrity_monitoring_rule = deepsecurity.IntegrityMonitoringRule()\r\n\r\ntry:\r\n\tapi_response = api_instance.create_integrity_monitoring_rule(api_version, integrity_monitoring_rule=integrity_monitoring_rule)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling IntegrityMonitoringRulesApi.create_integrity_monitoring_rule: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.IntegrityMonitoringRulesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  integrityMonitoringRule: new Deepsecurity.IntegrityMonitoringRule(),\r\n};\r\n\r\napiInstance.createIntegrityMonitoringRule(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/policies/{policyID}/interfacetypes": {
      "get": {
        "tags": [
          "Interface Types"
        ],
        "summary": "List Interface Types",
        "description": "Lists all interface types. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>InterfaceTypesApi.listInterfaceTypes([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>InterfaceTypesApi.list_interface_types([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>InterfaceTypesApi.listInterfaceTypes([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listInterfaceTypes",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterfaceTypes"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view interface types."
          },
          "404": {
            "description": "The policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.InterfaceTypesApi;\r\nimport com.trendmicro.deepsecurity.model.InterfaceTypes;\r\n\r\n\r\npublic class ListInterfaceTypesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tInterfaceTypesApi instance = new InterfaceTypesApi();\r\n\t\tInteger policyID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tInterfaceTypes result = instance.listInterfaceTypes(policyID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling InterfaceTypesApi.listInterfaceTypes\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.InterfaceTypesApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_interface_types(policy_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling InterfaceTypesApi.list_interface_types: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.InterfaceTypesApi();\r\nlet policyID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listInterfaceTypes(policyID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Interface Types"
        ],
        "summary": "Create an Interface Type",
        "description": "Create a new interface type. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>InterfaceTypesApi.createInterfaceType([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>InterfaceTypesApi.create_interface_type([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>InterfaceTypesApi.createInterfaceType([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createInterfaceType",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/interfaceType"
              }
            }
          },
          "description": "The settings of the new interface type."
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/interfaceType"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create interface types."
          },
          "404": {
            "description": "The policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.InterfaceTypesApi;\r\nimport com.trendmicro.deepsecurity.model.InterfaceType;\r\n\r\n\r\npublic class CreateInterfaceTypeExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tInterfaceTypesApi instance = new InterfaceTypesApi();\r\n\t\tInteger policyID = 1;\r\n\t\tInterfaceType interfaceTypes = new InterfaceType();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tInterfaceType result = instance.createInterfaceType(policyID, interfaceTypes, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling InterfaceTypesApi.createInterfaceType\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.InterfaceTypesApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\napi_version = 'YOUR VERSION'\r\ninterface_types = deepsecurity.InterfaceType()\r\n\r\ntry:\r\n\tapi_response = api_instance.create_interface_type(policy_id, api_version, interface_types=interface_types)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling InterfaceTypesApi.create_interface_type: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.InterfaceTypesApi();\r\nlet policyID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  interfaceTypes: new Deepsecurity.InterfaceType(),\r\n};\r\n\r\napiInstance.createInterfaceType(policyID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/policies/{policyID}/interfacetypes/search": {
      "post": {
        "tags": [
          "Interface Types"
        ],
        "summary": "Search Interface Types",
        "description": "Search for interface types using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>InterfaceTypesApi.searchInterfaceTypes([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>InterfaceTypesApi.search_interface_types([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>InterfaceTypesApi.searchInterfaceTypes([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchInterfaceTypes",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterfaceTypes"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view interface types."
          },
          "404": {
            "description": "The policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.InterfaceTypesApi;\r\nimport com.trendmicro.deepsecurity.model.InterfaceTypes;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchInterfaceTypesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tInterfaceTypesApi instance = new InterfaceTypesApi();\r\n\t\tInteger policyID = 1;\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tInterfaceTypes result = instance.searchInterfaceTypes(policyID, searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling InterfaceTypesApi.searchInterfaceTypes\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.InterfaceTypesApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_interface_types(policy_id, api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling InterfaceTypesApi.search_interface_types: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.InterfaceTypesApi();\r\nlet policyID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchInterfaceTypes(policyID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/policies/{policyID}/interfacetypes/{interfaceTypeID}": {
      "get": {
        "tags": [
          "Interface Types"
        ],
        "summary": "Describe an Interface Type",
        "description": "Describe an interface type by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>InterfaceTypesApi.describeInterfaceType([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>InterfaceTypesApi.describe_interface_type([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>InterfaceTypesApi.describeInterfaceType([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeInterfaceType",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "interfaceTypeID",
            "in": "path",
            "description": "The ID number of the interface type to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/interfaceType"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view interface types."
          },
          "404": {
            "description": "The interface type or policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.InterfaceTypesApi;\r\nimport com.trendmicro.deepsecurity.model.InterfaceType;\r\n\r\n\r\npublic class DescribeInterfaceTypeExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tInterfaceTypesApi instance = new InterfaceTypesApi();\r\n\t\tInteger policyID = 1;\r\n\t\tInteger interfaceTypeID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tInterfaceType result = instance.describeInterfaceType(policyID, interfaceTypeID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling InterfaceTypesApi.describeInterfaceType\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.InterfaceTypesApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\ninterface_type_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_interface_type(policy_id, interface_type_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling InterfaceTypesApi.describe_interface_type: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.InterfaceTypesApi();\r\nlet policyID = 1;\r\nlet interfaceTypeID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeInterfaceType(policyID, interfaceTypeID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Interface Types"
        ],
        "summary": "Modify an Interface Type",
        "description": "Modify an interface type by ID. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>InterfaceTypesApi.modifyInterfaceType([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>InterfaceTypesApi.modify_interface_type([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>InterfaceTypesApi.modifyInterfaceType([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyInterfaceType",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "interfaceTypeID",
            "in": "path",
            "description": "The ID number of the interface type to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/interfaceType"
              }
            }
          },
          "description": "The settings of the interface type to modify.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/interfaceType"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify interface types or the requested modification is not permitted."
          },
          "404": {
            "description": "The interface type or policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.InterfaceTypesApi;\r\nimport com.trendmicro.deepsecurity.model.InterfaceType;\r\n\r\n\r\npublic class ModifyInterfaceTypeExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tInterfaceTypesApi instance = new InterfaceTypesApi();\r\n\t\tInteger policyID = 1;\r\n\t\tInteger interfaceTypeID = 1;\r\n\t\tInterfaceType interfaceType = new InterfaceType();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tInterfaceType result = instance.modifyInterfaceType(policyID, interfaceTypeID, interfaceType, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling InterfaceTypesApi.modifyInterfaceType\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.InterfaceTypesApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\ninterface_type_id = 1\r\ninterface_type = deepsecurity.InterfaceType()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_interface_type(policy_id, interface_type_id, interface_type, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling InterfaceTypesApi.modify_interface_type: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.InterfaceTypesApi();\r\nlet policyID = 1;\r\nlet interfaceTypeID = 1;\r\nlet interfaceType = new Deepsecurity.InterfaceType();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifyInterfaceType(policyID, interfaceTypeID, interfaceType, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Interface Types"
        ],
        "summary": "Delete an Interface Type",
        "description": "Delete an interface type by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>InterfaceTypesApi.deleteInterfaceType([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>InterfaceTypesApi.delete_interface_type([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>InterfaceTypesApi.deleteInterfaceType([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteInterfaceType",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "interfaceTypeID",
            "in": "path",
            "description": "The ID number of the interface type to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete interface types."
          },
          "404": {
            "description": "The interface type or policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.InterfaceTypesApi;\r\n\r\n\r\npublic class DeleteInterfaceTypeExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tInterfaceTypesApi instance = new InterfaceTypesApi();\r\n\t\tInteger policyID = 1;\r\n\t\tInteger interfaceTypeID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteInterfaceType(policyID, interfaceTypeID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling InterfaceTypesApi.deleteInterfaceType\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.InterfaceTypesApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\ninterface_type_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_interface_type(policy_id, interface_type_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling InterfaceTypesApi.delete_interface_type: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.InterfaceTypesApi();\r\nlet policyID = 1;\r\nlet interfaceTypeID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteInterfaceType(policyID, interfaceTypeID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/intrusionpreventionrules": {
      "get": {
        "tags": [
          "Intrusion Prevention Rules"
        ],
        "summary": "List Intrusion Prevention Rules",
        "description": "Lists all intrusion prevention rules. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntrusionPreventionRulesApi.listIntrusionPreventionRules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntrusionPreventionRulesApi.list_intrusion_prevention_rules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntrusionPreventionRulesApi.listIntrusionPreventionRules([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listIntrusionPreventionRules",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntrusionPreventionRules"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view intrusion prevention rules."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.IntrusionPreventionRulesApi;\r\nimport com.trendmicro.deepsecurity.model.IntrusionPreventionRules;\r\n\r\n\r\npublic class ListIntrusionPreventionRulesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tIntrusionPreventionRulesApi instance = new IntrusionPreventionRulesApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntrusionPreventionRules result = instance.listIntrusionPreventionRules(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling IntrusionPreventionRulesApi.listIntrusionPreventionRules\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.IntrusionPreventionRulesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_intrusion_prevention_rules(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling IntrusionPreventionRulesApi.list_intrusion_prevention_rules: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.IntrusionPreventionRulesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listIntrusionPreventionRules(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Intrusion Prevention Rules"
        ],
        "summary": "Create an Intrusion Prevention Rule",
        "description": "Create a new intrusion prevention rule. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntrusionPreventionRulesApi.createIntrusionPreventionRule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntrusionPreventionRulesApi.create_intrusion_prevention_rule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntrusionPreventionRulesApi.createIntrusionPreventionRule([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createIntrusionPreventionRule",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/intrusionPreventionRule"
              }
            }
          },
          "description": "The settings of the new intrusion prevention rule.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/intrusionPreventionRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create intrusion prevention rules."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.IntrusionPreventionRulesApi;\r\nimport com.trendmicro.deepsecurity.model.IntrusionPreventionRule;\r\n\r\n\r\npublic class CreateIntrusionPreventionRuleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tIntrusionPreventionRulesApi instance = new IntrusionPreventionRulesApi();\r\n\t\tIntrusionPreventionRule intrusionPreventionRule = new IntrusionPreventionRule();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntrusionPreventionRule result = instance.createIntrusionPreventionRule(intrusionPreventionRule, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling IntrusionPreventionRulesApi.createIntrusionPreventionRule\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.IntrusionPreventionRulesApi(deepsecurity.ApiClient(configuration))\r\nintrusion_prevention_rule = deepsecurity.IntrusionPreventionRule()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_intrusion_prevention_rule(intrusion_prevention_rule, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling IntrusionPreventionRulesApi.create_intrusion_prevention_rule: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.IntrusionPreventionRulesApi();\r\nlet intrusionPreventionRule = new Deepsecurity.IntrusionPreventionRule();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createIntrusionPreventionRule(intrusionPreventionRule, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/intrusionpreventionrules/search": {
      "post": {
        "tags": [
          "Intrusion Prevention Rules"
        ],
        "summary": "Search Intrusion Prevention Rules",
        "description": "Search for intrusion prevention rules using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntrusionPreventionRulesApi.searchIntrusionPreventionRules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntrusionPreventionRulesApi.search_intrusion_prevention_rules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntrusionPreventionRulesApi.searchIntrusionPreventionRules([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchIntrusionPreventionRules",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntrusionPreventionRules"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view intrusion prevention rules."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.IntrusionPreventionRulesApi;\r\nimport com.trendmicro.deepsecurity.model.IntrusionPreventionRules;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchIntrusionPreventionRulesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tIntrusionPreventionRulesApi instance = new IntrusionPreventionRulesApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntrusionPreventionRules result = instance.searchIntrusionPreventionRules(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling IntrusionPreventionRulesApi.searchIntrusionPreventionRules\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.IntrusionPreventionRulesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_intrusion_prevention_rules(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling IntrusionPreventionRulesApi.search_intrusion_prevention_rules: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.IntrusionPreventionRulesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchIntrusionPreventionRules(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/intrusionpreventionrules/{intrusionPreventionRuleID}": {
      "get": {
        "tags": [
          "Intrusion Prevention Rules"
        ],
        "summary": "Describe an Intrusion Prevention Rule",
        "description": "Describe an intrusion prevention rule by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntrusionPreventionRulesApi.describeIntrusionPreventionRule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntrusionPreventionRulesApi.describe_intrusion_prevention_rule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntrusionPreventionRulesApi.describeIntrusionPreventionRule([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeIntrusionPreventionRule",
        "parameters": [
          {
            "name": "intrusionPreventionRuleID",
            "in": "path",
            "description": "The ID number of the intrusion prevention rule to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/intrusionPreventionRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view intrusion prevention rules."
          },
          "404": {
            "description": "The intrusion prevention rule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.IntrusionPreventionRulesApi;\r\nimport com.trendmicro.deepsecurity.model.IntrusionPreventionRule;\r\n\r\n\r\npublic class DescribeIntrusionPreventionRuleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tIntrusionPreventionRulesApi instance = new IntrusionPreventionRulesApi();\r\n\t\tInteger intrusionPreventionRuleID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntrusionPreventionRule result = instance.describeIntrusionPreventionRule(intrusionPreventionRuleID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling IntrusionPreventionRulesApi.describeIntrusionPreventionRule\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.IntrusionPreventionRulesApi(deepsecurity.ApiClient(configuration))\r\nintrusion_prevention_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_intrusion_prevention_rule(intrusion_prevention_rule_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling IntrusionPreventionRulesApi.describe_intrusion_prevention_rule: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.IntrusionPreventionRulesApi();\r\nlet intrusionPreventionRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeIntrusionPreventionRule(intrusionPreventionRuleID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Intrusion Prevention Rules"
        ],
        "summary": "Modify an Intrusion Prevention Rule",
        "description": "Modify an intrusion prevention rule by ID. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntrusionPreventionRulesApi.modifyIntrusionPreventionRule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntrusionPreventionRulesApi.modify_intrusion_prevention_rule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntrusionPreventionRulesApi.modifyIntrusionPreventionRule([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyIntrusionPreventionRule",
        "parameters": [
          {
            "name": "intrusionPreventionRuleID",
            "in": "path",
            "description": "The ID number of the intrusion prevention rule to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/intrusionPreventionRule"
              }
            }
          },
          "description": "The settings of the intrusion prevention rules to modify.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/intrusionPreventionRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify prevention rule or the requested modification is not permitted."
          },
          "404": {
            "description": "The intrusion prevention rule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.IntrusionPreventionRulesApi;\r\nimport com.trendmicro.deepsecurity.model.IntrusionPreventionRule;\r\n\r\n\r\npublic class ModifyIntrusionPreventionRuleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tIntrusionPreventionRulesApi instance = new IntrusionPreventionRulesApi();\r\n\t\tInteger intrusionPreventionRuleID = 1;\r\n\t\tIntrusionPreventionRule intrusionPreventionRule = new IntrusionPreventionRule();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntrusionPreventionRule result = instance.modifyIntrusionPreventionRule(intrusionPreventionRuleID, intrusionPreventionRule, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling IntrusionPreventionRulesApi.modifyIntrusionPreventionRule\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.IntrusionPreventionRulesApi(deepsecurity.ApiClient(configuration))\r\nintrusion_prevention_rule_id = 1\r\nintrusion_prevention_rule = deepsecurity.IntrusionPreventionRule()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_intrusion_prevention_rule(intrusion_prevention_rule_id, intrusion_prevention_rule, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling IntrusionPreventionRulesApi.modify_intrusion_prevention_rule: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.IntrusionPreventionRulesApi();\r\nlet intrusionPreventionRuleID = 1;\r\nlet intrusionPreventionRule = new Deepsecurity.IntrusionPreventionRule();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifyIntrusionPreventionRule(intrusionPreventionRuleID, intrusionPreventionRule, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Intrusion Prevention Rules"
        ],
        "summary": "Delete an Intrusion Prevention Rule",
        "description": "Delete an intrusion prevention rule by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntrusionPreventionRulesApi.deleteIntrusionPreventionRule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntrusionPreventionRulesApi.delete_intrusion_prevention_rule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IntrusionPreventionRulesApi.deleteIntrusionPreventionRule([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteIntrusionPreventionRule",
        "parameters": [
          {
            "name": "intrusionPreventionRuleID",
            "in": "path",
            "description": "The ID number of the intrusion prevention rule to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete intrusion prevention rules."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.IntrusionPreventionRulesApi;\r\n\r\n\r\npublic class DeleteIntrusionPreventionRuleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tIntrusionPreventionRulesApi instance = new IntrusionPreventionRulesApi();\r\n\t\tInteger intrusionPreventionRuleID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteIntrusionPreventionRule(intrusionPreventionRuleID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling IntrusionPreventionRulesApi.deleteIntrusionPreventionRule\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.IntrusionPreventionRulesApi(deepsecurity.ApiClient(configuration))\r\nintrusion_prevention_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_intrusion_prevention_rule(intrusion_prevention_rule_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling IntrusionPreventionRulesApi.delete_intrusion_prevention_rule: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.IntrusionPreventionRulesApi();\r\nlet intrusionPreventionRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteIntrusionPreventionRule(intrusionPreventionRuleID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/iplists": {
      "get": {
        "tags": [
          "IP Lists"
        ],
        "summary": "List IP Lists",
        "description": "Lists all IP lists. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IpListsApi.listIPLists([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IPListsApi.list_ip_lists([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IPListsApi.listIPLists([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listIPLists",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ipLists"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view IP lists."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.IpListsApi;\r\nimport com.trendmicro.deepsecurity.model.IpLists;\r\n\r\n\r\npublic class ListIPListsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tIpListsApi instance = new IpListsApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIpLists result = instance.listIPLists(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling IpListsApi.listIPLists\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.IPListsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_ip_lists(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling IPListsApi.list_ip_lists: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.IPListsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listIPLists(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "IP Lists"
        ],
        "summary": "Create an IP List",
        "description": "Create a new IP list. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IpListsApi.createIPList([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IPListsApi.create_ip_list([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IPListsApi.createIPList([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createIPList",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ipList"
              }
            }
          },
          "description": "The settings of the new IP list.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ipList"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create IP lists."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.IpListsApi;\r\nimport com.trendmicro.deepsecurity.model.IpList;\r\n\r\n\r\npublic class CreateIPListExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tIpListsApi instance = new IpListsApi();\r\n\t\tIpList ipList = new IpList();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIpList result = instance.createIPList(ipList, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling IpListsApi.createIPList\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.IPListsApi(deepsecurity.ApiClient(configuration))\r\nip_list = deepsecurity.IpList()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_ip_list(ip_list, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling IPListsApi.create_ip_list: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.IPListsApi();\r\nlet ipList = new Deepsecurity.IpList();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createIPList(ipList, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/iplists/search": {
      "post": {
        "tags": [
          "IP Lists"
        ],
        "summary": "Search IP Lists",
        "description": "Search for IP lists using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IpListsApi.searchIPLists([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IPListsApi.search_ip_lists([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IPListsApi.searchIPLists([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchIPLists",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ipLists"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view IP lists."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.IpListsApi;\r\nimport com.trendmicro.deepsecurity.model.IpLists;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchIPListsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tIpListsApi instance = new IpListsApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIpLists result = instance.searchIPLists(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling IpListsApi.searchIPLists\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.IPListsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_ip_lists(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling IPListsApi.search_ip_lists: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.IPListsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchIPLists(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/iplists/{ipListID}": {
      "get": {
        "tags": [
          "IP Lists"
        ],
        "summary": "Describe an IP List",
        "description": "Describe an IP list by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IpListsApi.describeIPList([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IPListsApi.describe_ip_list([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IPListsApi.describeIPList([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeIPList",
        "parameters": [
          {
            "name": "ipListID",
            "in": "path",
            "description": "The ID number of the IP list to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ipList"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view IP lists."
          },
          "404": {
            "description": "The IP list does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.IpListsApi;\r\nimport com.trendmicro.deepsecurity.model.IpList;\r\n\r\n\r\npublic class DescribeIPListExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tIpListsApi instance = new IpListsApi();\r\n\t\tInteger ipListID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIpList result = instance.describeIPList(ipListID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling IpListsApi.describeIPList\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.IPListsApi(deepsecurity.ApiClient(configuration))\r\nip_list_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_ip_list(ip_list_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling IPListsApi.describe_ip_list: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.IPListsApi();\r\nlet ipListID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeIPList(ipListID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "IP Lists"
        ],
        "summary": "Modify an IP List",
        "description": "Modify an IP list by ID. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IpListsApi.modifyIPList([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IPListsApi.modify_ip_list([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IPListsApi.modifyIPList([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyIPList",
        "parameters": [
          {
            "name": "ipListID",
            "in": "path",
            "description": "The ID number of the IP list to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ipList"
              }
            }
          },
          "description": "The settings of the IP list to modify.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ipList"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify IP lists or the requested modification is not permitted."
          },
          "404": {
            "description": "The IP list does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.IpListsApi;\r\nimport com.trendmicro.deepsecurity.model.IpList;\r\n\r\n\r\npublic class ModifyIPListExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tIpListsApi instance = new IpListsApi();\r\n\t\tInteger ipListID = 1;\r\n\t\tIpList ipList = new IpList();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIpList result = instance.modifyIPList(ipListID, ipList, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling IpListsApi.modifyIPList\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.IPListsApi(deepsecurity.ApiClient(configuration))\r\nip_list_id = 1\r\nip_list = deepsecurity.IpList()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_ip_list(ip_list_id, ip_list, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling IPListsApi.modify_ip_list: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.IPListsApi();\r\nlet ipListID = 1;\r\nlet ipList = new Deepsecurity.IpList();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifyIPList(ipListID, ipList, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "IP Lists"
        ],
        "summary": "Delete an IP List",
        "description": "Delete an IP list by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IpListsApi.deleteIPList([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IPListsApi.delete_ip_list([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>IPListsApi.deleteIPList([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteIPList",
        "parameters": [
          {
            "name": "ipListID",
            "in": "path",
            "description": "The ID number of the IP list to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete IP lists."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.IpListsApi;\r\n\r\n\r\npublic class DeleteIPListExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tIpListsApi instance = new IpListsApi();\r\n\t\tInteger ipListID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteIPList(ipListID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling IpListsApi.deleteIPList\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.IPListsApi(deepsecurity.ApiClient(configuration))\r\nip_list_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_ip_list(ip_list_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling IPListsApi.delete_ip_list: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.IPListsApi();\r\nlet ipListID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteIPList(ipListID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/loginspectionrules": {
      "get": {
        "tags": [
          "Log Inspection Rules"
        ],
        "summary": "List Log Inspection Rules",
        "description": "Lists all log inspection rules. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>LogInspectionRulesApi.listLogInspectionRules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>LogInspectionRulesApi.list_log_inspection_rules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>LogInspectionRulesApi.listLogInspectionRules([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listLogInspectionRules",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogInspectionRules"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view log inspection rules."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.LogInspectionRulesApi;\r\nimport com.trendmicro.deepsecurity.model.LogInspectionRules;\r\n\r\n\r\npublic class ListLogInspectionRulesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tLogInspectionRulesApi instance = new LogInspectionRulesApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tLogInspectionRules result = instance.listLogInspectionRules(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling LogInspectionRulesApi.listLogInspectionRules\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.LogInspectionRulesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_log_inspection_rules(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling LogInspectionRulesApi.list_log_inspection_rules: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.LogInspectionRulesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listLogInspectionRules(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Log Inspection Rules"
        ],
        "summary": "Create a Log Inspection Rule",
        "description": "Create a new log inspection rule. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>LogInspectionRulesApi.createLogInspectionRule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>LogInspectionRulesApi.create_log_inspection_rule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>LogInspectionRulesApi.createLogInspectionRule([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createLogInspectionRule",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/logInspectionRule"
              }
            }
          },
          "description": "The settings of the new log inspection rule.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logInspectionRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create log inspection rules."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.LogInspectionRulesApi;\r\nimport com.trendmicro.deepsecurity.model.LogInspectionRule;\r\n\r\n\r\npublic class CreateLogInspectionRuleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tLogInspectionRulesApi instance = new LogInspectionRulesApi();\r\n\t\tLogInspectionRule logInspectionRule = new LogInspectionRule();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tLogInspectionRule result = instance.createLogInspectionRule(logInspectionRule, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling LogInspectionRulesApi.createLogInspectionRule\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.LogInspectionRulesApi(deepsecurity.ApiClient(configuration))\r\nlog_inspection_rule = deepsecurity.LogInspectionRule()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_log_inspection_rule(log_inspection_rule, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling LogInspectionRulesApi.create_log_inspection_rule: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.LogInspectionRulesApi();\r\nlet logInspectionRule = new Deepsecurity.LogInspectionRule();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createLogInspectionRule(logInspectionRule, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/loginspectionrules/{logInspectionRuleID}": {
      "get": {
        "tags": [
          "Log Inspection Rules"
        ],
        "summary": "Describe a Log Inspection Rule",
        "description": "Describe a log inspection rule by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>LogInspectionRulesApi.describeLogInspectionRule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>LogInspectionRulesApi.describe_log_inspection_rule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>LogInspectionRulesApi.describeLogInspectionRule([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeLogInspectionRule",
        "parameters": [
          {
            "name": "logInspectionRuleID",
            "in": "path",
            "description": "The ID number of the log inspection rule to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logInspectionRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view log inspection rules."
          },
          "404": {
            "description": "The log inspection rule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.LogInspectionRulesApi;\r\nimport com.trendmicro.deepsecurity.model.LogInspectionRule;\r\n\r\n\r\npublic class DescribeLogInspectionRuleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tLogInspectionRulesApi instance = new LogInspectionRulesApi();\r\n\t\tInteger logInspectionRuleID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tLogInspectionRule result = instance.describeLogInspectionRule(logInspectionRuleID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling LogInspectionRulesApi.describeLogInspectionRule\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.LogInspectionRulesApi(deepsecurity.ApiClient(configuration))\r\nlog_inspection_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_log_inspection_rule(log_inspection_rule_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling LogInspectionRulesApi.describe_log_inspection_rule: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.LogInspectionRulesApi();\r\nlet logInspectionRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeLogInspectionRule(logInspectionRuleID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Log Inspection Rules"
        ],
        "summary": "Modify a Log Inspection Rule",
        "description": "Modify a log inspection rule by ID. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>LogInspectionRulesApi.modifyLogInspectionRule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>LogInspectionRulesApi.modify_log_inspection_rule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>LogInspectionRulesApi.modifyLogInspectionRule([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyLogInspectionRule",
        "parameters": [
          {
            "name": "logInspectionRuleID",
            "in": "path",
            "description": "The ID number of the log inspection rule to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/logInspectionRule"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logInspectionRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify log inspection rules or the requested modification is not permitted."
          },
          "404": {
            "description": "The log inspection rule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.LogInspectionRulesApi;\r\nimport com.trendmicro.deepsecurity.model.LogInspectionRule;\r\n\r\n\r\npublic class ModifyLogInspectionRuleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tLogInspectionRulesApi instance = new LogInspectionRulesApi();\r\n\t\tInteger logInspectionRuleID = 1;\r\n\t\tLogInspectionRule logInspectionRule = new LogInspectionRule();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tLogInspectionRule result = instance.modifyLogInspectionRule(logInspectionRuleID, logInspectionRule, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling LogInspectionRulesApi.modifyLogInspectionRule\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.LogInspectionRulesApi(deepsecurity.ApiClient(configuration))\r\nlog_inspection_rule_id = 1\r\nlog_inspection_rule = deepsecurity.LogInspectionRule()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_log_inspection_rule(log_inspection_rule_id, log_inspection_rule, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling LogInspectionRulesApi.modify_log_inspection_rule: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.LogInspectionRulesApi();\r\nlet logInspectionRuleID = 1;\r\nlet logInspectionRule = new Deepsecurity.LogInspectionRule();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifyLogInspectionRule(logInspectionRuleID, logInspectionRule, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Log Inspection Rules"
        ],
        "summary": "Delete a Log Inspection Rule",
        "description": "Delete a log inspection rule by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>LogInspectionRulesApi.deleteLogInspectionRule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>LogInspectionRulesApi.delete_log_inspection_rule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>LogInspectionRulesApi.deleteLogInspectionRule([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteLogInspectionRule",
        "parameters": [
          {
            "name": "logInspectionRuleID",
            "in": "path",
            "description": "The ID number of the log inspection rule to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete log inspection rules."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.LogInspectionRulesApi;\r\n\r\n\r\npublic class DeleteLogInspectionRuleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tLogInspectionRulesApi instance = new LogInspectionRulesApi();\r\n\t\tInteger logInspectionRuleID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteLogInspectionRule(logInspectionRuleID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling LogInspectionRulesApi.deleteLogInspectionRule\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.LogInspectionRulesApi(deepsecurity.ApiClient(configuration))\r\nlog_inspection_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_log_inspection_rule(log_inspection_rule_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling LogInspectionRulesApi.delete_log_inspection_rule: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.LogInspectionRulesApi();\r\nlet logInspectionRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteLogInspectionRule(logInspectionRuleID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/loginspectionrules/search": {
      "post": {
        "tags": [
          "Log Inspection Rules"
        ],
        "summary": "Search Log Inspection Rules",
        "description": "Search for log inspection rules using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>LogInspectionRulesApi.searchLogInspectionRules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>LogInspectionRulesApi.search_log_inspection_rules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>LogInspectionRulesApi.searchLogInspectionRules([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchLogInspectionRules",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogInspectionRules"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view log inspection rules."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.LogInspectionRulesApi;\r\nimport com.trendmicro.deepsecurity.model.LogInspectionRules;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchLogInspectionRulesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tLogInspectionRulesApi instance = new LogInspectionRulesApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tLogInspectionRules result = instance.searchLogInspectionRules(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling LogInspectionRulesApi.searchLogInspectionRules\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.LogInspectionRulesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_log_inspection_rules(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling LogInspectionRulesApi.search_log_inspection_rules: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.LogInspectionRulesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchLogInspectionRules(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/maclists": {
      "get": {
        "tags": [
          "MAC Lists"
        ],
        "summary": "List MAC Lists",
        "description": "Lists all MAC lists. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>MacListsApi.listMACLists([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>MACListsApi.list_mac_lists([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>MACListsApi.listMACLists([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listMACLists",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/macLists"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view MAC lists."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.MacListsApi;\r\nimport com.trendmicro.deepsecurity.model.MacLists;\r\n\r\n\r\npublic class ListMACListsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tMacListsApi instance = new MacListsApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tMacLists result = instance.listMACLists(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling MacListsApi.listMACLists\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.MACListsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_mac_lists(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling MACListsApi.list_mac_lists: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.MACListsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listMACLists(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "MAC Lists"
        ],
        "summary": "Create a MAC List",
        "description": "Create a new MAC list. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>MacListsApi.createMACList([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>MACListsApi.create_mac_list([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>MACListsApi.createMACList([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createMACList",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/macList"
              }
            }
          },
          "description": "The settings of the new MAC list.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/macList"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create MAC lists."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.MacListsApi;\r\nimport com.trendmicro.deepsecurity.model.MacList;\r\n\r\n\r\npublic class CreateMACListExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tMacListsApi instance = new MacListsApi();\r\n\t\tMacList macList = new MacList();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tMacList result = instance.createMACList(macList, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling MacListsApi.createMACList\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.MACListsApi(deepsecurity.ApiClient(configuration))\r\nmac_list = deepsecurity.MacList()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_mac_list(mac_list, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling MACListsApi.create_mac_list: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.MACListsApi();\r\nlet macList = new Deepsecurity.MacList();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createMACList(macList, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/maclists/search": {
      "post": {
        "tags": [
          "MAC Lists"
        ],
        "summary": "Search MAC Lists",
        "description": "Search for MAC lists using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>MacListsApi.searchMACLists([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>MACListsApi.search_mac_lists([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>MACListsApi.searchMACLists([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchMACLists",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/macLists"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view MAC lists."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.MacListsApi;\r\nimport com.trendmicro.deepsecurity.model.MacLists;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchMACListsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tMacListsApi instance = new MacListsApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tMacLists result = instance.searchMACLists(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling MacListsApi.searchMACLists\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.MACListsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_mac_lists(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling MACListsApi.search_mac_lists: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.MACListsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchMACLists(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/maclists/{macListID}": {
      "get": {
        "tags": [
          "MAC Lists"
        ],
        "summary": "Describe a MAC List",
        "description": "Describe a MAC list by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>MacListsApi.describeMACList([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>MACListsApi.describe_mac_list([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>MACListsApi.describeMACList([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeMACList",
        "parameters": [
          {
            "name": "macListID",
            "in": "path",
            "description": "The ID number of the MAC list to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/macList"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view MAC lists."
          },
          "404": {
            "description": "The MAC list does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.MacListsApi;\r\nimport com.trendmicro.deepsecurity.model.MacList;\r\n\r\n\r\npublic class DescribeMACListExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tMacListsApi instance = new MacListsApi();\r\n\t\tInteger macListID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tMacList result = instance.describeMACList(macListID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling MacListsApi.describeMACList\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.MACListsApi(deepsecurity.ApiClient(configuration))\r\nmac_list_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_mac_list(mac_list_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling MACListsApi.describe_mac_list: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.MACListsApi();\r\nlet macListID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeMACList(macListID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "MAC Lists"
        ],
        "summary": "Modify a MAC List",
        "description": "Modify a MAC list by ID. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>MacListsApi.modifyMACList([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>MACListsApi.modify_mac_list([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>MACListsApi.modifyMACList([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyMACList",
        "parameters": [
          {
            "name": "macListID",
            "in": "path",
            "description": "The ID number of the MAC list to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/macList"
              }
            }
          },
          "description": "The settings of the MAC list to modify.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/macList"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify MAC lists or the requested modification is not permitted."
          },
          "404": {
            "description": "The MAC list does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.MacListsApi;\r\nimport com.trendmicro.deepsecurity.model.MacList;\r\n\r\n\r\npublic class ModifyMACListExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tMacListsApi instance = new MacListsApi();\r\n\t\tInteger macListID = 1;\r\n\t\tMacList macList = new MacList();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tMacList result = instance.modifyMACList(macListID, macList, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling MacListsApi.modifyMACList\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.MACListsApi(deepsecurity.ApiClient(configuration))\r\nmac_list_id = 1\r\nmac_list = deepsecurity.MacList()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_mac_list(mac_list_id, mac_list, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling MACListsApi.modify_mac_list: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.MACListsApi();\r\nlet macListID = 1;\r\nlet macList = new Deepsecurity.MacList();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifyMACList(macListID, macList, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "MAC Lists"
        ],
        "summary": "Delete a MAC List",
        "description": "Delete a MAC list by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>MacListsApi.deleteMACList([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>MACListsApi.delete_mac_list([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>MACListsApi.deleteMACList([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteMACList",
        "parameters": [
          {
            "name": "macListID",
            "in": "path",
            "description": "The ID number of the MAC list to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete MAC lists."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.MacListsApi;\r\n\r\n\r\npublic class DeleteMACListExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tMacListsApi instance = new MacListsApi();\r\n\t\tInteger macListID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteMACList(macListID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling MacListsApi.deleteMACList\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.MACListsApi(deepsecurity.ApiClient(configuration))\r\nmac_list_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_mac_list(mac_list_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling MACListsApi.delete_mac_list: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.MACListsApi();\r\nlet macListID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteMACList(macListID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/movedcomputers": {
      "get": {
        "tags": [
          "MovedComputers"
        ],
        "summary": "List Moved Computers",
        "description": "List all moved computers. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>MovedComputersApi.listMovedComputers([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>MovedComputersApi.list_moved_computers([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>MovedComputersApi.listMovedComputers([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listMovedComputers",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MovedComputers"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view moved computers."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.MovedComputersApi;\r\nimport com.trendmicro.deepsecurity.model.MovedComputers;\r\n\r\n\r\npublic class ListMovedComputersExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tMovedComputersApi instance = new MovedComputersApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tMovedComputers result = instance.listMovedComputers(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling MovedComputersApi.listMovedComputers\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.MovedComputersApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_moved_computers(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling MovedComputersApi.list_moved_computers: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.MovedComputersApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listMovedComputers(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "MovedComputers"
        ],
        "summary": "Create a Moved Computer Record",
        "description": "Create a new moved computer record. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>MovedComputersApi.createMovedComputers([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>MovedComputersApi.create_moved_computers([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>MovedComputersApi.createMovedComputers([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createMovedComputers",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/movedComputer"
              }
            }
          },
          "description": "The content of a new moved computer to create.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/movedComputer"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to add moved computer records."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.MovedComputersApi;\r\nimport com.trendmicro.deepsecurity.model.MovedComputer;\r\n\r\n\r\npublic class CreateMovedComputersExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tMovedComputersApi instance = new MovedComputersApi();\r\n\t\tMovedComputer movedComputer = new MovedComputer();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tMovedComputer result = instance.createMovedComputers(movedComputer, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling MovedComputersApi.createMovedComputers\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.MovedComputersApi(deepsecurity.ApiClient(configuration))\r\nmoved_computer = deepsecurity.MovedComputer()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_moved_computers(moved_computer, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling MovedComputersApi.create_moved_computers: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.MovedComputersApi();\r\nlet movedComputer = new Deepsecurity.MovedComputer();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createMovedComputers(movedComputer, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/movedcomputers/search": {
      "post": {
        "tags": [
          "MovedComputers"
        ],
        "summary": "Search Moved Computers",
        "description": "Search for moved computers using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>MovedComputersApi.searchMovedComputers([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>MovedComputersApi.search_moved_computers([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>MovedComputersApi.searchMovedComputers([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchMovedComputers",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MovedComputers"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view moved computers."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.MovedComputersApi;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\nimport com.trendmicro.deepsecurity.model.MovedComputers;\r\n\r\n\r\npublic class SearchMovedComputersExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tMovedComputersApi instance = new MovedComputersApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tMovedComputers result = instance.searchMovedComputers(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling MovedComputersApi.searchMovedComputers\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.MovedComputersApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_moved_computers(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling MovedComputersApi.search_moved_computers: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.MovedComputersApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchMovedComputers(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/movedcomputers/{movedComputerID}": {
      "get": {
        "tags": [
          "MovedComputers"
        ],
        "summary": "Describe a Moved Computer",
        "description": "Describe a moved computer by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>MovedComputersApi.describeMovedComputer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>MovedComputersApi.describe_moved_computer([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>MovedComputersApi.describeMovedComputer([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeMovedComputer",
        "parameters": [
          {
            "name": "movedComputerID",
            "in": "path",
            "description": "The ID number of the moved computer to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/movedComputer"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view moved computers."
          },
          "404": {
            "description": "The moved computer does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.MovedComputersApi;\r\nimport com.trendmicro.deepsecurity.model.MovedComputer;\r\n\r\n\r\npublic class DescribeMovedComputerExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tMovedComputersApi instance = new MovedComputersApi();\r\n\t\tInteger movedComputerID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tMovedComputer result = instance.describeMovedComputer(movedComputerID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling MovedComputersApi.describeMovedComputer\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.MovedComputersApi(deepsecurity.ApiClient(configuration))\r\nmoved_computer_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_moved_computer(moved_computer_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling MovedComputersApi.describe_moved_computer: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.MovedComputersApi();\r\nlet movedComputerID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeMovedComputer(movedComputerID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/policies": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "List Policies",
        "description": "Lists all policies. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.listPolicies([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.list_policies([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.listPolicies([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listPolicies",
        "parameters": [
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/policies"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view policies."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PoliciesApi;\r\nimport com.trendmicro.deepsecurity.model.Policies;\r\n\r\n\r\npublic class ListPoliciesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPoliciesApi instance = new PoliciesApi();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tPolicies result = instance.listPolicies(overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PoliciesApi.listPolicies\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PoliciesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.list_policies(api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PoliciesApi.list_policies: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PoliciesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.listPolicies(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "Create a Policy",
        "description": "Create a new policy. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.createPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.create_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.createPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createPolicy",
        "parameters": [
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/policy"
              }
            }
          },
          "description": "The settings of the new policy.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/policy"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create policies."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PoliciesApi;\r\nimport com.trendmicro.deepsecurity.model.Policy;\r\n\r\n\r\npublic class CreatePolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPoliciesApi instance = new PoliciesApi();\r\n\t\tPolicy policy = new Policy();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tPolicy result = instance.createPolicy(policy, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PoliciesApi.createPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PoliciesApi(deepsecurity.ApiClient(configuration))\r\npolicy = deepsecurity.Policy()\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.create_policy(policy, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PoliciesApi.create_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PoliciesApi();\r\nlet policy = new Deepsecurity.Policy();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.createPolicy(policy, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/policies/{policyID}": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "Describe a Policy",
        "description": "Describe a policy by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.describePolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.describe_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.describePolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describePolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/policy"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view policies."
          },
          "404": {
            "description": "The policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PoliciesApi;\r\nimport com.trendmicro.deepsecurity.model.Policy;\r\n\r\n\r\npublic class DescribePolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPoliciesApi instance = new PoliciesApi();\r\n\t\tInteger policyID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tPolicy result = instance.describePolicy(policyID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PoliciesApi.describePolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PoliciesApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_policy(policy_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PoliciesApi.describe_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PoliciesApi();\r\nlet policyID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.describePolicy(policyID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "Modify a Policy",
        "description": "Modify a policy by ID. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.modifyPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.modify_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.modifyPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/policy"
              }
            }
          },
          "description": "The settings of the policy to modify.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/policy"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify policies or the requested modification is not permitted."
          },
          "404": {
            "description": "The policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PoliciesApi;\r\nimport com.trendmicro.deepsecurity.model.Policy;\r\n\r\n\r\npublic class ModifyPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPoliciesApi instance = new PoliciesApi();\r\n\t\tInteger policyID = 1;\r\n\t\tPolicy policy = new Policy();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tPolicy result = instance.modifyPolicy(policyID, policy, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PoliciesApi.modifyPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PoliciesApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\npolicy = deepsecurity.Policy()\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_policy(policy_id, policy, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PoliciesApi.modify_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PoliciesApi();\r\nlet policyID = 1;\r\nlet policy = new Deepsecurity.Policy();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.modifyPolicy(policyID, policy, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Policies"
        ],
        "summary": "Delete a Policy",
        "description": "Delete a policy by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.deletePolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.delete_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.deletePolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deletePolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete policies."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PoliciesApi;\r\n\r\n\r\npublic class DeletePolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPoliciesApi instance = new PoliciesApi();\r\n\t\tInteger policyID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deletePolicy(policyID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PoliciesApi.deletePolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PoliciesApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_policy(policy_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PoliciesApi.delete_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PoliciesApi();\r\nlet policyID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deletePolicy(policyID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/policies/search": {
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "Search Policies",
        "description": "Search for policies using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.searchPolicies([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.search_policies([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.searchPolicies([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchPolicies",
        "parameters": [
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/policies"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view policies."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PoliciesApi;\r\nimport com.trendmicro.deepsecurity.model.Policies;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchPoliciesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPoliciesApi instance = new PoliciesApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tPolicies result = instance.searchPolicies(searchFilter, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PoliciesApi.searchPolicies\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PoliciesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.search_policies(api_version, search_filter=search_filter, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PoliciesApi.search_policies: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PoliciesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n  overrides: false,\r\n};\r\n\r\napiInstance.searchPolicies(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/policies/default/settings/{name}": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "Describe a Default Policy Setting",
        "description": "Return the value for a default policy setting. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.describeDefaultSetting([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.describe_default_setting([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.describeDefaultSetting([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeDefaultSetting",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name of the default policy setting.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingValue"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view settings."
          },
          "404": {
            "description": "The default policy setting does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PoliciesApi;\r\nimport com.trendmicro.deepsecurity.model.SettingValue;\r\n\r\n\r\npublic class DescribeDefaultSettingExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPoliciesApi instance = new PoliciesApi();\r\n\t\tString name = \"name_example\";\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSettingValue result = instance.describeDefaultSetting(name, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PoliciesApi.describeDefaultSetting\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PoliciesApi(deepsecurity.ApiClient(configuration))\r\nname = 'name_example'\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_default_setting(name, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PoliciesApi.describe_default_setting: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PoliciesApi();\r\nlet name = \"name_example\";\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeDefaultSetting(name, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "Modify a Default Policy Setting",
        "description": "Modify the value for a default policy setting. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.modifyDefaultSetting([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.modify_default_setting([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.modifyDefaultSetting([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyDefaultSetting",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name of the setting.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettingValue"
              }
            }
          },
          "description": "The new value for the default policy setting.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingValue"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify policies or the requested modification is not permitted."
          },
          "404": {
            "description": "The default policy setting does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PoliciesApi;\r\nimport com.trendmicro.deepsecurity.model.SettingValue;\r\n\r\n\r\npublic class ModifyDefaultSettingExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPoliciesApi instance = new PoliciesApi();\r\n\t\tString name = \"name_example\";\r\n\t\tSettingValue value = new SettingValue();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSettingValue result = instance.modifyDefaultSetting(name, value, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PoliciesApi.modifyDefaultSetting\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PoliciesApi(deepsecurity.ApiClient(configuration))\r\nname = 'name_example'\r\nvalue = deepsecurity.SettingValue()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_default_setting(name, value, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PoliciesApi.modify_default_setting: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PoliciesApi();\r\nlet name = \"name_example\";\r\nlet value = new Deepsecurity.SettingValue();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifyDefaultSetting(name, value, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Policies"
        ],
        "summary": "Reset a Default Policy Setting",
        "description": "Reset the value for a default policy setting. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.resetDefaultSetting([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.reset_default_setting([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.resetDefaultSetting([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "resetDefaultSetting",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name of the default policy setting.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingValue"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify policies or the requested modification is not permitted."
          },
          "404": {
            "description": "The default policy setting does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PoliciesApi;\r\nimport com.trendmicro.deepsecurity.model.SettingValue;\r\n\r\n\r\npublic class ResetDefaultSettingExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPoliciesApi instance = new PoliciesApi();\r\n\t\tString name = \"name_example\";\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSettingValue result = instance.resetDefaultSetting(name, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PoliciesApi.resetDefaultSetting\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PoliciesApi(deepsecurity.ApiClient(configuration))\r\nname = 'name_example'\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.reset_default_setting(name, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PoliciesApi.reset_default_setting: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PoliciesApi();\r\nlet name = \"name_example\";\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.resetDefaultSetting(name, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/policies/default": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "List Default Settings",
        "description": "Lists all default policy settings. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.listDefaultSettings([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.list_default_settings([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.listDefaultSettings([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listDefaultSettings",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultPolicySettings"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view policies."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PoliciesApi;\r\nimport com.trendmicro.deepsecurity.model.DefaultPolicySettings;\r\n\r\n\r\npublic class ListDefaultSettingsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPoliciesApi instance = new PoliciesApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tDefaultPolicySettings result = instance.listDefaultSettings(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PoliciesApi.listDefaultSettings\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PoliciesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_default_settings(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PoliciesApi.list_default_settings: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PoliciesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listDefaultSettings(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "Modify Default Settings",
        "description": "Modify the default policy settings. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.modifyDefaultSettings([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.modify_default_settings([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.modifyDefaultSettings([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyDefaultSettings",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DefaultPolicySettings"
              }
            }
          },
          "description": "The default policy settings to modify.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultPolicySettings"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view policies."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PoliciesApi;\r\nimport com.trendmicro.deepsecurity.model.DefaultPolicySettings;\r\n\r\n\r\npublic class ModifyDefaultSettingsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPoliciesApi instance = new PoliciesApi();\r\n\t\tDefaultPolicySettings defaultPolicySettings = new DefaultPolicySettings();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tDefaultPolicySettings result = instance.modifyDefaultSettings(defaultPolicySettings, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PoliciesApi.modifyDefaultSettings\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PoliciesApi(deepsecurity.ApiClient(configuration))\r\ndefault_policy_settings = deepsecurity.DefaultPolicySettings()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_default_settings(default_policy_settings, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PoliciesApi.modify_default_settings: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PoliciesApi();\r\nlet defaultPolicySettings = new Deepsecurity.DefaultPolicySettings();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifyDefaultSettings(defaultPolicySettings, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/policies/{policyID}/settings/{name}": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "Describe a Policy Setting",
        "description": "Return the value for a policy setting. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.describePolicySetting([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.describe_policy_setting([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.describePolicySetting([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describePolicySetting",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the policy setting.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show the value only if defined for the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingValue"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view policy settings."
          },
          "404": {
            "description": "The policy or the setting does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PoliciesApi;\r\nimport com.trendmicro.deepsecurity.model.SettingValue;\r\n\r\n\r\npublic class DescribePolicySettingExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPoliciesApi instance = new PoliciesApi();\r\n\t\tInteger policyID = 1;\r\n\t\tString name = \"name_example\";\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSettingValue result = instance.describePolicySetting(policyID, name, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PoliciesApi.describePolicySetting\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PoliciesApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\nname = 'name_example'\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_policy_setting(policy_id, name, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PoliciesApi.describe_policy_setting: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PoliciesApi();\r\nlet policyID = 1;\r\nlet name = \"name_example\";\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.describePolicySetting(policyID, name, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "Modify a Policy Setting",
        "description": "Modify the value for a policy setting. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.modifyPolicySetting([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.modify_policy_setting([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.modifyPolicySetting([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyPolicySetting",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the policy setting.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show the value only if defined for the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettingValue"
              }
            }
          },
          "description": "The new value for the policy setting.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingValue"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify policies or the requested modification is not permitted."
          },
          "404": {
            "description": "The policy or the setting does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PoliciesApi;\r\nimport com.trendmicro.deepsecurity.model.SettingValue;\r\n\r\n\r\npublic class ModifyPolicySettingExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPoliciesApi instance = new PoliciesApi();\r\n\t\tInteger policyID = 1;\r\n\t\tString name = \"name_example\";\r\n\t\tSettingValue value = new SettingValue();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSettingValue result = instance.modifyPolicySetting(policyID, name, value, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PoliciesApi.modifyPolicySetting\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PoliciesApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\nname = 'name_example'\r\nvalue = deepsecurity.SettingValue()\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_policy_setting(policy_id, name, value, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PoliciesApi.modify_policy_setting: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PoliciesApi();\r\nlet policyID = 1;\r\nlet name = \"name_example\";\r\nlet value = new Deepsecurity.SettingValue();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.modifyPolicySetting(policyID, name, value, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Policies"
        ],
        "summary": "Reset a Policy Setting",
        "description": "Reset the value for a policy setting. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.resetPolicySetting([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.reset_policy_setting([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PoliciesApi.resetPolicySetting([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "resetPolicySetting",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "name",
            "in": "path",
            "description": "The name of the policy setting.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show the value only if defined for the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingValue"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify policies or the requested modification is not permitted."
          },
          "404": {
            "description": "The policy or the setting does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PoliciesApi;\r\nimport com.trendmicro.deepsecurity.model.SettingValue;\r\n\r\n\r\npublic class ResetPolicySettingExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPoliciesApi instance = new PoliciesApi();\r\n\t\tInteger policyID = 1;\r\n\t\tString name = \"name_example\";\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSettingValue result = instance.resetPolicySetting(policyID, name, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PoliciesApi.resetPolicySetting\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PoliciesApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\nname = 'name_example'\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.reset_policy_setting(policy_id, name, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PoliciesApi.reset_policy_setting: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PoliciesApi();\r\nlet policyID = 1;\r\nlet name = \"name_example\";\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.resetPolicySetting(policyID, name, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/policies/{policyID}/devicecontrol/usbdeviceexceptionrules": {
      "get": {
        "tags": [
          "Policy Device Control Exception Rules"
        ],
        "summary": "List Device Exception Rules",
        "description": "Lists all device exception rules assigned to a policy. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyDeviceControlExceptionRulesApi.listExceptionRulesOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyDeviceControlExceptionRulesApi.list_exception_rules_on_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyDeviceControlExceptionRulesApi.listExceptionRulesOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listExceptionRulesOnPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only Exception Rules directly related to the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionRules"
                }
              }
            }
          },
          "403": {
            "description": "User or API key is not authorized to view the policy."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyDeviceControlExceptionRulesApi;\r\nimport com.trendmicro.deepsecurity.model.ExceptionRules;\r\n\r\n\r\npublic class ListExceptionRulesOnPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyDeviceControlExceptionRulesApi instance = new PolicyDeviceControlExceptionRulesApi();\r\n\t\tInteger policyID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tExceptionRules result = instance.listExceptionRulesOnPolicy(policyID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyDeviceControlExceptionRulesApi.listExceptionRulesOnPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyDeviceControlExceptionRulesApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.list_exception_rules_on_policy(policy_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyDeviceControlExceptionRulesApi.list_exception_rules_on_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyDeviceControlExceptionRulesApi();\r\nlet policyID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.listExceptionRulesOnPolicy(policyID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Policy Device Control Exception Rules"
        ],
        "summary": "Add Device Exception Rules",
        "description": "Assign device exception rules to a policy. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyDeviceControlExceptionRulesApi.addExceptionRulesOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyDeviceControlExceptionRulesApi.add_exception_rules_on_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyDeviceControlExceptionRulesApi.addExceptionRulesOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "addExceptionRulesOnPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only Exception Rules directly related to the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ExceptionRules"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionRules"
                }
              }
            }
          },
          "403": {
            "description": "User or API key is not authorized to modify the policy or the requested modification is not permitted."
          },
          "404": {
            "description": "The policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyDeviceControlExceptionRulesApi;\r\nimport com.trendmicro.deepsecurity.model.ExceptionRules;\r\n\r\n\r\npublic class AddExceptionRulesOnPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyDeviceControlExceptionRulesApi instance = new PolicyDeviceControlExceptionRulesApi();\r\n\t\tInteger policyID = 1;\r\n\t\tExceptionRules exceptionRules = new ExceptionRules();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tExceptionRules result = instance.addExceptionRulesOnPolicy(policyID, exceptionRules, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyDeviceControlExceptionRulesApi.addExceptionRulesOnPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyDeviceControlExceptionRulesApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\nexception_rules = deepsecurity.ExceptionRules()\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.add_exception_rules_on_policy(policy_id, exception_rules, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyDeviceControlExceptionRulesApi.add_exception_rules_on_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyDeviceControlExceptionRulesApi();\r\nlet policyID = 1;\r\nlet exceptionRules = new Deepsecurity.ExceptionRules();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.addExceptionRulesOnPolicy(policyID, exceptionRules, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "put": {
        "tags": [
          "Policy Device Control Exception Rules"
        ],
        "summary": "Set Device Exception Rules",
        "description": "Set device exception rules assigned to a policy. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyDeviceControlExceptionRulesApi.setExceptionRulesOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyDeviceControlExceptionRulesApi.set_exception_rules_on_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyDeviceControlExceptionRulesApi.setExceptionRulesOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "setExceptionRulesOnPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only Exception Rules directly related to the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ExceptionRules"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionRules"
                }
              }
            }
          },
          "403": {
            "description": "User or API key is not authorized to modify the policy or the requested modification is not permitted."
          },
          "404": {
            "description": "The policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyDeviceControlExceptionRulesApi;\r\nimport com.trendmicro.deepsecurity.model.ExceptionRules;\r\n\r\n\r\npublic class SetExceptionRulesOnPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyDeviceControlExceptionRulesApi instance = new PolicyDeviceControlExceptionRulesApi();\r\n\t\tInteger policyID = 1;\r\n\t\tExceptionRules exceptionRules = new ExceptionRules();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tExceptionRules result = instance.setExceptionRulesOnPolicy(policyID, exceptionRules, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyDeviceControlExceptionRulesApi.setExceptionRulesOnPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyDeviceControlExceptionRulesApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\nexception_rules = deepsecurity.ExceptionRules()\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.set_exception_rules_on_policy(policy_id, exception_rules, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyDeviceControlExceptionRulesApi.set_exception_rules_on_policy: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyDeviceControlExceptionRulesApi();\r\nlet policyID = 1;\r\nlet exceptionRules = new Deepsecurity.ExceptionRules();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.setExceptionRulesOnPolicy(policyID, exceptionRules, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/policies/{policyID}/devicecontrol/usbdeviceexceptionrules/{exceptionRuleID}": {
      "delete": {
        "tags": [
          "Policy Device Control Exception Rules"
        ],
        "summary": "Remove a Device Exception Rule",
        "description": "Unassign a device exception rule from a policy. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyDeviceControlExceptionRulesApi.removeExceptionRuleOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyDeviceControlExceptionRulesApi.remove_exception_rule_on_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyDeviceControlExceptionRulesApi.removeExceptionRuleOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "removeExceptionRuleOnPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "exceptionRuleID",
            "in": "path",
            "description": "The ID number of the Exception Rule to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only Exception Rules directly related to the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExceptionRules"
                }
              }
            }
          },
          "403": {
            "description": "User or API key is not authorized to modify the policy or the requested modification is not permitted."
          },
          "404": {
            "description": "The policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyDeviceControlExceptionRulesApi;\r\nimport com.trendmicro.deepsecurity.model.ExceptionRules;\r\n\r\n\r\npublic class RemoveExceptionRuleOnPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyDeviceControlExceptionRulesApi instance = new PolicyDeviceControlExceptionRulesApi();\r\n\t\tInteger policyID = 1;\r\n\t\tLong exceptionRuleID = 1L;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tExceptionRules result = instance.removeExceptionRuleOnPolicy(policyID, exceptionRuleID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyDeviceControlExceptionRulesApi.removeExceptionRuleOnPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyDeviceControlExceptionRulesApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\nexception_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.remove_exception_rule_on_policy(policy_id, exception_rule_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyDeviceControlExceptionRulesApi.remove_exception_rule_on_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyDeviceControlExceptionRulesApi();\r\nlet policyID = 1;\r\nlet exceptionRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.removeExceptionRuleOnPolicy(policyID, exceptionRuleID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/policies/{policyID}/firewall/assignments": {
      "get": {
        "tags": [
          "Policy Firewall Rule Assignments"
        ],
        "summary": "List Firewall Rule IDs",
        "description": "Lists all firewall rule IDs assigned to a policy. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyFirewallRuleAssignmentsApi.listFirewallRuleIDsOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyFirewallRuleAssignmentsApi.list_firewall_rule_ids_on_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyFirewallRuleAssignmentsApi.listFirewallRuleIDsOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listFirewallRuleIDsOnPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only rule IDs assigned directly to the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firewallAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the policy."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyFirewallRuleAssignmentsApi;\r\nimport com.trendmicro.deepsecurity.model.FirewallAssignments;\r\n\r\n\r\npublic class ListFirewallRuleIDsOnPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyFirewallRuleAssignmentsApi instance = new PolicyFirewallRuleAssignmentsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tFirewallAssignments result = instance.listFirewallRuleIDsOnPolicy(policyID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyFirewallRuleAssignmentsApi.listFirewallRuleIDsOnPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyFirewallRuleAssignmentsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.list_firewall_rule_ids_on_policy(policy_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyFirewallRuleAssignmentsApi.list_firewall_rule_ids_on_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyFirewallRuleAssignmentsApi();\r\nlet policyID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.listFirewallRuleIDsOnPolicy(policyID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Policy Firewall Rule Assignments"
        ],
        "summary": "Add Firewall Rule IDs",
        "description": "Assign firewall rule IDs to a policy. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyFirewallRuleAssignmentsApi.addFirewallRuleIDsToPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyFirewallRuleAssignmentsApi.add_firewall_rule_ids_to_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyFirewallRuleAssignmentsApi.addFirewallRuleIDsToPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "addFirewallRuleIDsToPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only rule IDs assigned directly to the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/RuleIDs5"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firewallAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the policy or the requested modification is not permitted."
          },
          "404": {
            "description": "The policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyFirewallRuleAssignmentsApi;\r\nimport com.trendmicro.deepsecurity.model.RuleIDs;\r\nimport com.trendmicro.deepsecurity.model.FirewallAssignments;\r\n\r\n\r\npublic class AddFirewallRuleIDsToPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyFirewallRuleAssignmentsApi instance = new PolicyFirewallRuleAssignmentsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tRuleIDs firewallRuleIDs = new RuleIDs();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tFirewallAssignments result = instance.addFirewallRuleIDsToPolicy(policyID, firewallRuleIDs, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyFirewallRuleAssignmentsApi.addFirewallRuleIDsToPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyFirewallRuleAssignmentsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\nfirewall_rule_ids = deepsecurity.RuleIDs()\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.add_firewall_rule_ids_to_policy(policy_id, firewall_rule_ids, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyFirewallRuleAssignmentsApi.add_firewall_rule_ids_to_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyFirewallRuleAssignmentsApi();\r\nlet policyID = 1;\r\nlet firewallRuleIDs = new Deepsecurity.RuleIDs();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.addFirewallRuleIDsToPolicy(policyID, firewallRuleIDs, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "put": {
        "tags": [
          "Policy Firewall Rule Assignments"
        ],
        "summary": "Set Firewall Rule IDs",
        "description": "Set firewall rule IDs assigned to a policy. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyFirewallRuleAssignmentsApi.setFirewallRuleIDsOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyFirewallRuleAssignmentsApi.set_firewall_rule_ids_on_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyFirewallRuleAssignmentsApi.setFirewallRuleIDsOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "setFirewallRuleIDsOnPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only rule IDs assigned directly to the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/RuleIDs4"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firewallAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the policy or the requested modification is not permitted."
          },
          "404": {
            "description": "The policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyFirewallRuleAssignmentsApi;\r\nimport com.trendmicro.deepsecurity.model.RuleIDs;\r\nimport com.trendmicro.deepsecurity.model.FirewallAssignments;\r\n\r\n\r\npublic class SetFirewallRuleIDsOnPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyFirewallRuleAssignmentsApi instance = new PolicyFirewallRuleAssignmentsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tRuleIDs firewallRuleIDs = new RuleIDs();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tFirewallAssignments result = instance.setFirewallRuleIDsOnPolicy(policyID, firewallRuleIDs, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyFirewallRuleAssignmentsApi.setFirewallRuleIDsOnPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyFirewallRuleAssignmentsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\napi_version = 'YOUR VERSION'\r\nfirewall_rule_ids = deepsecurity.RuleIDs()\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.set_firewall_rule_ids_on_policy(policy_id, api_version, firewall_rule_ids=firewall_rule_ids, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyFirewallRuleAssignmentsApi.set_firewall_rule_ids_on_policy: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyFirewallRuleAssignmentsApi();\r\nlet policyID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  firewallRuleIDs: new Deepsecurity.RuleIDs(),\r\n  overrides: false,\r\n};\r\n\r\napiInstance.setFirewallRuleIDsOnPolicy(policyID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/policies/{policyID}/firewall/assignments/{firewallRuleID}": {
      "delete": {
        "tags": [
          "Policy Firewall Rule Assignments"
        ],
        "summary": "Remove a Firewall Rule ID",
        "description": "Unassign a firewall rule ID from a policy. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyFirewallRuleAssignmentsApi.removeFirewallRuleIDFromPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyFirewallRuleAssignmentsApi.remove_firewall_rule_id_from_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyFirewallRuleAssignmentsApi.removeFirewallRuleIDFromPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "removeFirewallRuleIDFromPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "firewallRuleID",
            "in": "path",
            "description": "The ID number of the firewall rule to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only rule IDs assigned directly to the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firewallAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the policy or the requested modification is not permitted."
          },
          "404": {
            "description": "The policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyFirewallRuleAssignmentsApi;\r\nimport com.trendmicro.deepsecurity.model.FirewallAssignments;\r\n\r\n\r\npublic class RemoveFirewallRuleIDFromPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyFirewallRuleAssignmentsApi instance = new PolicyFirewallRuleAssignmentsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tInteger firewallRuleID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tFirewallAssignments result = instance.removeFirewallRuleIDFromPolicy(policyID, firewallRuleID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyFirewallRuleAssignmentsApi.removeFirewallRuleIDFromPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyFirewallRuleAssignmentsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\nfirewall_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.remove_firewall_rule_id_from_policy(policy_id, firewall_rule_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyFirewallRuleAssignmentsApi.remove_firewall_rule_id_from_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyFirewallRuleAssignmentsApi();\r\nlet policyID = 1;\r\nlet firewallRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.removeFirewallRuleIDFromPolicy(policyID, firewallRuleID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/policies/{policyID}/firewall/rules": {
      "get": {
        "tags": [
          "Policy Firewall Rule Details"
        ],
        "summary": "List firewall rules",
        "description": "Lists all firewall rules assigned to a policy. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyFirewallRuleDetailsApi.listFirewallRulesOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyFirewallRuleDetailsApi.list_firewall_rules_on_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyFirewallRuleDetailsApi.listFirewallRulesOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listFirewallRulesOnPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only rules assigned to the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FirewallRules"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the policy."
          },
          "404": {
            "description": "The policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyFirewallRuleDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.FirewallRules;\r\n\r\n\r\npublic class ListFirewallRulesOnPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyFirewallRuleDetailsApi instance = new PolicyFirewallRuleDetailsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tFirewallRules result = instance.listFirewallRulesOnPolicy(policyID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyFirewallRuleDetailsApi.listFirewallRulesOnPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyFirewallRuleDetailsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.list_firewall_rules_on_policy(policy_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyFirewallRuleDetailsApi.list_firewall_rules_on_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyFirewallRuleDetailsApi();\r\nlet policyID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.listFirewallRulesOnPolicy(policyID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/policies/{policyID}/firewall/rules/{firewallRuleID}": {
      "get": {
        "tags": [
          "Policy Firewall Rule Details"
        ],
        "summary": "Describe a firewall rule",
        "description": "Describe a firewall rule including policy-level overrides. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyFirewallRuleDetailsApi.describeFirewallRuleOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyFirewallRuleDetailsApi.describe_firewall_rule_on_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyFirewallRuleDetailsApi.describeFirewallRuleOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeFirewallRuleOnPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "firewallRuleID",
            "in": "path",
            "description": "The ID number of the firewall rule.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firewallRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the policy."
          },
          "404": {
            "description": "The policy or firewall rule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyFirewallRuleDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.FirewallRule;\r\n\r\n\r\npublic class DescribeFirewallRuleOnPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyFirewallRuleDetailsApi instance = new PolicyFirewallRuleDetailsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tInteger firewallRuleID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tFirewallRule result = instance.describeFirewallRuleOnPolicy(policyID, firewallRuleID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyFirewallRuleDetailsApi.describeFirewallRuleOnPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyFirewallRuleDetailsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\nfirewall_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_firewall_rule_on_policy(policy_id, firewall_rule_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyFirewallRuleDetailsApi.describe_firewall_rule_on_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyFirewallRuleDetailsApi();\r\nlet policyID = 1;\r\nlet firewallRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.describeFirewallRuleOnPolicy(policyID, firewallRuleID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Policy Firewall Rule Details"
        ],
        "summary": "Modify a firewall rule",
        "description": "Modify a firewall rule assigned to a policy. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyFirewallRuleDetailsApi.modifyFirewallRuleOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyFirewallRuleDetailsApi.modify_firewall_rule_on_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyFirewallRuleDetailsApi.modifyFirewallRuleOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyFirewallRuleOnPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "firewallRuleID",
            "in": "path",
            "description": "The ID number of the firewall rule to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/firewallRule"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firewallRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the policy or the requested modification is not permitted."
          },
          "404": {
            "description": "The policy or firewall rule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyFirewallRuleDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.FirewallRule;\r\n\r\n\r\npublic class ModifyFirewallRuleOnPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyFirewallRuleDetailsApi instance = new PolicyFirewallRuleDetailsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tInteger firewallRuleID = 1;\r\n\t\tFirewallRule firewallRule = new FirewallRule();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tFirewallRule result = instance.modifyFirewallRuleOnPolicy(policyID, firewallRuleID, firewallRule, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyFirewallRuleDetailsApi.modifyFirewallRuleOnPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyFirewallRuleDetailsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\nfirewall_rule_id = 1\r\nfirewall_rule = deepsecurity.FirewallRule()\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_firewall_rule_on_policy(policy_id, firewall_rule_id, firewall_rule, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyFirewallRuleDetailsApi.modify_firewall_rule_on_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyFirewallRuleDetailsApi();\r\nlet policyID = 1;\r\nlet firewallRuleID = 1;\r\nlet firewallRule = new Deepsecurity.FirewallRule();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.modifyFirewallRuleOnPolicy(policyID, firewallRuleID, firewallRule, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Policy Firewall Rule Details"
        ],
        "summary": "Reset firewall rule overrides",
        "description": "Remove all overrides for a firewall rule from a policy. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyFirewallRuleDetailsApi.resetFirewallRuleOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyFirewallRuleDetailsApi.reset_firewall_rule_on_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyFirewallRuleDetailsApi.resetFirewallRuleOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "resetFirewallRuleOnPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "firewallRuleID",
            "in": "path",
            "description": "The ID number of the firewall rule to reset.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/firewallRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the policy."
          },
          "404": {
            "description": "The policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyFirewallRuleDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.FirewallRule;\r\n\r\n\r\npublic class ResetFirewallRuleOnPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyFirewallRuleDetailsApi instance = new PolicyFirewallRuleDetailsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tInteger firewallRuleID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tFirewallRule result = instance.resetFirewallRuleOnPolicy(policyID, firewallRuleID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyFirewallRuleDetailsApi.resetFirewallRuleOnPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyFirewallRuleDetailsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\nfirewall_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.reset_firewall_rule_on_policy(policy_id, firewall_rule_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyFirewallRuleDetailsApi.reset_firewall_rule_on_policy: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyFirewallRuleDetailsApi();\r\nlet policyID = 1;\r\nlet firewallRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.resetFirewallRuleOnPolicy(policyID, firewallRuleID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/policyimporttasks": {
      "get": {
        "tags": [
          "Policy Import Tasks"
        ],
        "summary": "List PolicyImportTasks",
        "description": "List all policy import tasks. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyImportTasksApi.listPolicyImportTasks([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyImportTasksApi.list_policy_import_tasks([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyImportTasksApi.listPolicyImportTasks([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listPolicyImportTasks",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyImportTasks"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to import poilcy."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyImportTasksApi;\r\nimport com.trendmicro.deepsecurity.model.PolicyImportTasks;\r\n\r\n\r\npublic class ListPolicyImportTasksExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyImportTasksApi instance = new PolicyImportTasksApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tPolicyImportTasks result = instance.listPolicyImportTasks(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyImportTasksApi.listPolicyImportTasks\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyImportTasksApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_policy_import_tasks(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyImportTasksApi.list_policy_import_tasks: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyImportTasksApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listPolicyImportTasks(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Policy Import Tasks"
        ],
        "summary": "Create a PolicyImportTask",
        "description": "Create a task to import policy <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyImportTasksApi.createPolicyImportTask([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyImportTasksApi.create_policy_import_task([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyImportTasksApi.createPolicyImportTask([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createPolicyImportTask",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/policyImportTask"
              }
            }
          },
          "description": "Policy import task to create"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/policyImportTask"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to import poilcy."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyImportTasksApi;\r\nimport com.trendmicro.deepsecurity.model.PolicyImportTask;\r\n\r\n\r\npublic class CreatePolicyImportTaskExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyImportTasksApi instance = new PolicyImportTasksApi();\r\n\t\tPolicyImportTask policyImportTask = new PolicyImportTask();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tPolicyImportTask result = instance.createPolicyImportTask(policyImportTask, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyImportTasksApi.createPolicyImportTask\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyImportTasksApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\npolicy_import_task = deepsecurity.PolicyImportTask()\r\n\r\ntry:\r\n\tapi_response = api_instance.create_policy_import_task(api_version, policy_import_task=policy_import_task)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyImportTasksApi.create_policy_import_task: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyImportTasksApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  policyImportTask: new Deepsecurity.PolicyImportTask(),\r\n};\r\n\r\napiInstance.createPolicyImportTask(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/policyimporttasks/{policyImportTaskID}": {
      "get": {
        "tags": [
          "Policy Import Tasks"
        ],
        "summary": "Describe a PolicyImportTask",
        "description": "Describe a policy import task by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyImportTasksApi.describePolicyImportTask([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyImportTasksApi.describe_policy_import_task([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyImportTasksApi.describePolicyImportTask([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describePolicyImportTask",
        "parameters": [
          {
            "name": "policyImportTaskID",
            "in": "path",
            "description": "The ID number of the policy import task to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/policyImportTask"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to import poilcy."
          },
          "404": {
            "description": "The policy import task does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyImportTasksApi;\r\nimport com.trendmicro.deepsecurity.model.PolicyImportTask;\r\n\r\n\r\npublic class DescribePolicyImportTaskExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyImportTasksApi instance = new PolicyImportTasksApi();\r\n\t\tInteger policyImportTaskID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tPolicyImportTask result = instance.describePolicyImportTask(policyImportTaskID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyImportTasksApi.describePolicyImportTask\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyImportTasksApi(deepsecurity.ApiClient(configuration))\r\npolicy_import_task_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_policy_import_task(policy_import_task_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyImportTasksApi.describe_policy_import_task: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyImportTasksApi();\r\nlet policyImportTaskID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describePolicyImportTask(policyImportTaskID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/policyimporttasks/search": {
      "post": {
        "tags": [
          "Policy Import Tasks"
        ],
        "summary": "Search PolicyImportTasks",
        "description": "Search for PolicyImportTasks using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyImportTasksApi.searchPolicyImportTasks([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyImportTasksApi.search_policy_import_tasks([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyImportTasksApi.searchPolicyImportTasks([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchPolicyImportTasks",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyImportTasks"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to import poilcy."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyImportTasksApi;\r\nimport com.trendmicro.deepsecurity.model.PolicyImportTasks;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchPolicyImportTasksExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyImportTasksApi instance = new PolicyImportTasksApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tPolicyImportTasks result = instance.searchPolicyImportTasks(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyImportTasksApi.searchPolicyImportTasks\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyImportTasksApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_policy_import_tasks(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyImportTasksApi.search_policy_import_tasks: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyImportTasksApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchPolicyImportTasks(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/policies/{policyID}/integritymonitoring/assignments": {
      "get": {
        "tags": [
          "Policy Integrity Monitoring Rule Assignments & Recommendations"
        ],
        "summary": "List Integrity Monitoring Rule IDs",
        "description": "Lists all integrity monitoring rule IDs assigned to a policy. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi.listIntegrityMonitoringRuleIDsOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi.list_integrity_monitoring_rule_ids_on_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi.listIntegrityMonitoringRuleIDsOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listIntegrityMonitoringRuleIDsOnPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only rule IDs assigned directly to the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/integrityMonitoringAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the policy."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi;\r\nimport com.trendmicro.deepsecurity.model.IntegrityMonitoringAssignments;\r\n\r\n\r\npublic class ListIntegrityMonitoringRuleIDsOnPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi instance = new PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntegrityMonitoringAssignments result = instance.listIntegrityMonitoringRuleIDsOnPolicy(policyID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi.listIntegrityMonitoringRuleIDsOnPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.list_integrity_monitoring_rule_ids_on_policy(policy_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi.list_integrity_monitoring_rule_ids_on_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi();\r\nlet policyID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.listIntegrityMonitoringRuleIDsOnPolicy(policyID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Policy Integrity Monitoring Rule Assignments & Recommendations"
        ],
        "summary": "Add Integrity Monitoring Rule IDs",
        "description": "Assign integrity monitoring rule IDs to a policy. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi.addIntegrityMonitoringRuleIDsToPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi.add_integrity_monitoring_rule_ids_to_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi.addIntegrityMonitoringRuleIDsToPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "addIntegrityMonitoringRuleIDsToPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only rule IDs assigned directly to the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/RuleIDs6"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/integrityMonitoringAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the policy or the requested modification is not permitted."
          },
          "404": {
            "description": "The policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi;\r\nimport com.trendmicro.deepsecurity.model.RuleIDs;\r\nimport com.trendmicro.deepsecurity.model.IntegrityMonitoringAssignments;\r\n\r\n\r\npublic class AddIntegrityMonitoringRuleIDsToPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi instance = new PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tRuleIDs integrityMonitoringRuleIDs = new RuleIDs();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntegrityMonitoringAssignments result = instance.addIntegrityMonitoringRuleIDsToPolicy(policyID, integrityMonitoringRuleIDs, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi.addIntegrityMonitoringRuleIDsToPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\napi_version = 'YOUR VERSION'\r\nintegrity_monitoring_rule_ids = deepsecurity.RuleIDs()\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.add_integrity_monitoring_rule_ids_to_policy(policy_id, api_version, integrity_monitoring_rule_ids=integrity_monitoring_rule_ids, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi.add_integrity_monitoring_rule_ids_to_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi();\r\nlet policyID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  integrityMonitoringRuleIDs: new Deepsecurity.RuleIDs(),\r\n  overrides: false,\r\n};\r\n\r\napiInstance.addIntegrityMonitoringRuleIDsToPolicy(policyID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "put": {
        "tags": [
          "Policy Integrity Monitoring Rule Assignments & Recommendations"
        ],
        "summary": "Set Integrity Monitoring Rule IDs",
        "description": "Set integrity monitoring rule IDs assigned to a policy. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi.setIntegrityMonitoringRuleIDsOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi.set_integrity_monitoring_rule_ids_on_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi.setIntegrityMonitoringRuleIDsOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "setIntegrityMonitoringRuleIDsOnPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only rule IDs assigned directly to the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/RuleIDs7"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/integrityMonitoringAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the policy or the requested modification is not permitted."
          },
          "404": {
            "description": "The policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi;\r\nimport com.trendmicro.deepsecurity.model.RuleIDs;\r\nimport com.trendmicro.deepsecurity.model.IntegrityMonitoringAssignments;\r\n\r\n\r\npublic class SetIntegrityMonitoringRuleIDsOnPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi instance = new PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tRuleIDs integrityMonitoringRuleIDs = new RuleIDs();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntegrityMonitoringAssignments result = instance.setIntegrityMonitoringRuleIDsOnPolicy(policyID, integrityMonitoringRuleIDs, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi.setIntegrityMonitoringRuleIDsOnPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\napi_version = 'YOUR VERSION'\r\nintegrity_monitoring_rule_ids = deepsecurity.RuleIDs()\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.set_integrity_monitoring_rule_ids_on_policy(policy_id, api_version, integrity_monitoring_rule_ids=integrity_monitoring_rule_ids, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi.set_integrity_monitoring_rule_ids_on_policy: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi();\r\nlet policyID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  integrityMonitoringRuleIDs: new Deepsecurity.RuleIDs(),\r\n  overrides: false,\r\n};\r\n\r\napiInstance.setIntegrityMonitoringRuleIDsOnPolicy(policyID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/policies/{policyID}/integritymonitoring/assignments/{integrityMonitoringRuleID}": {
      "delete": {
        "tags": [
          "Policy Integrity Monitoring Rule Assignments & Recommendations"
        ],
        "summary": "Remove an Integrity Monitoring Rule ID",
        "description": "Unassign an integrity monitoring rule ID from a policy. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi.removeIntegrityMonitoringRuleIDFromPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi.remove_integrity_monitoring_rule_id_from_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi.removeIntegrityMonitoringRuleIDFromPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "removeIntegrityMonitoringRuleIDFromPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "integrityMonitoringRuleID",
            "in": "path",
            "description": "The ID number of the integrity monitoring rule to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only rule IDs assigned directly to the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/integrityMonitoringAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the policy or the requested modification is not permitted."
          },
          "404": {
            "description": "The policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi;\r\nimport com.trendmicro.deepsecurity.model.IntegrityMonitoringAssignments;\r\n\r\n\r\npublic class RemoveIntegrityMonitoringRuleIDFromPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi instance = new PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tInteger integrityMonitoringRuleID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntegrityMonitoringAssignments result = instance.removeIntegrityMonitoringRuleIDFromPolicy(policyID, integrityMonitoringRuleID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi.removeIntegrityMonitoringRuleIDFromPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\nintegrity_monitoring_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.remove_integrity_monitoring_rule_id_from_policy(policy_id, integrity_monitoring_rule_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi.remove_integrity_monitoring_rule_id_from_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyIntegrityMonitoringRuleAssignmentsRecommendationsApi();\r\nlet policyID = 1;\r\nlet integrityMonitoringRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.removeIntegrityMonitoringRuleIDFromPolicy(policyID, integrityMonitoringRuleID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/policies/{policyID}/integritymonitoring/rules": {
      "get": {
        "tags": [
          "Policy Integrity Monitoring Rule Details"
        ],
        "summary": "List integrity monitoring rules",
        "description": "Lists all integrity monitoring rules assigned to a policy. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntegrityMonitoringRuleDetailsApi.listIntegrityMonitoringRulesOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntegrityMonitoringRuleDetailsApi.list_integrity_monitoring_rules_on_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntegrityMonitoringRuleDetailsApi.listIntegrityMonitoringRulesOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listIntegrityMonitoringRulesOnPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only rules assigned to the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrityMonitoringRules"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the policy."
          },
          "404": {
            "description": "The policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyIntegrityMonitoringRuleDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.IntegrityMonitoringRules;\r\n\r\n\r\npublic class ListIntegrityMonitoringRulesOnPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyIntegrityMonitoringRuleDetailsApi instance = new PolicyIntegrityMonitoringRuleDetailsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntegrityMonitoringRules result = instance.listIntegrityMonitoringRulesOnPolicy(policyID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyIntegrityMonitoringRuleDetailsApi.listIntegrityMonitoringRulesOnPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyIntegrityMonitoringRuleDetailsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.list_integrity_monitoring_rules_on_policy(policy_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyIntegrityMonitoringRuleDetailsApi.list_integrity_monitoring_rules_on_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyIntegrityMonitoringRuleDetailsApi();\r\nlet policyID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.listIntegrityMonitoringRulesOnPolicy(policyID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/policies/{policyID}/integritymonitoring/rules/{integrityMonitoringRuleID}": {
      "get": {
        "tags": [
          "Policy Integrity Monitoring Rule Details"
        ],
        "summary": "Describe an integrity monitoring rule",
        "description": "Describe an integrity monitoring rule including policy-level overrides. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntegrityMonitoringRuleDetailsApi.describeIntegrityMonitoringRuleOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntegrityMonitoringRuleDetailsApi.describe_integrity_monitoring_rule_on_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntegrityMonitoringRuleDetailsApi.describeIntegrityMonitoringRuleOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeIntegrityMonitoringRuleOnPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "integrityMonitoringRuleID",
            "in": "path",
            "description": "The ID number of the integrity monitoring rule.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/integrityMonitoringRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the policy."
          },
          "404": {
            "description": "The policy or integrity monitoring rule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyIntegrityMonitoringRuleDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.IntegrityMonitoringRule;\r\n\r\n\r\npublic class DescribeIntegrityMonitoringRuleOnPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyIntegrityMonitoringRuleDetailsApi instance = new PolicyIntegrityMonitoringRuleDetailsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tInteger integrityMonitoringRuleID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntegrityMonitoringRule result = instance.describeIntegrityMonitoringRuleOnPolicy(policyID, integrityMonitoringRuleID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyIntegrityMonitoringRuleDetailsApi.describeIntegrityMonitoringRuleOnPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyIntegrityMonitoringRuleDetailsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\nintegrity_monitoring_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_integrity_monitoring_rule_on_policy(policy_id, integrity_monitoring_rule_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyIntegrityMonitoringRuleDetailsApi.describe_integrity_monitoring_rule_on_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyIntegrityMonitoringRuleDetailsApi();\r\nlet policyID = 1;\r\nlet integrityMonitoringRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.describeIntegrityMonitoringRuleOnPolicy(policyID, integrityMonitoringRuleID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Policy Integrity Monitoring Rule Details"
        ],
        "summary": "Modify an integrity monitoring rule",
        "description": "Modify an integrity monitoring rule assigned to a policy. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntegrityMonitoringRuleDetailsApi.modifyIntegrityMonitoringRuleOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntegrityMonitoringRuleDetailsApi.modify_integrity_monitoring_rule_on_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntegrityMonitoringRuleDetailsApi.modifyIntegrityMonitoringRuleOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyIntegrityMonitoringRuleOnPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "integrityMonitoringRuleID",
            "in": "path",
            "description": "The ID number of the integrity monitoring rule to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/integrityMonitoringRule"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/integrityMonitoringRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the policy or the requested modification is not permitted."
          },
          "404": {
            "description": "The policy or integrity monitoring rule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyIntegrityMonitoringRuleDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.IntegrityMonitoringRule;\r\n\r\n\r\npublic class ModifyIntegrityMonitoringRuleOnPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyIntegrityMonitoringRuleDetailsApi instance = new PolicyIntegrityMonitoringRuleDetailsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tInteger integrityMonitoringRuleID = 1;\r\n\t\tIntegrityMonitoringRule integrityMonitoringRule = new IntegrityMonitoringRule();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntegrityMonitoringRule result = instance.modifyIntegrityMonitoringRuleOnPolicy(policyID, integrityMonitoringRuleID, integrityMonitoringRule, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyIntegrityMonitoringRuleDetailsApi.modifyIntegrityMonitoringRuleOnPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyIntegrityMonitoringRuleDetailsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\nintegrity_monitoring_rule_id = 1\r\nintegrity_monitoring_rule = deepsecurity.IntegrityMonitoringRule()\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_integrity_monitoring_rule_on_policy(policy_id, integrity_monitoring_rule_id, integrity_monitoring_rule, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyIntegrityMonitoringRuleDetailsApi.modify_integrity_monitoring_rule_on_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyIntegrityMonitoringRuleDetailsApi();\r\nlet policyID = 1;\r\nlet integrityMonitoringRuleID = 1;\r\nlet integrityMonitoringRule = new Deepsecurity.IntegrityMonitoringRule();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.modifyIntegrityMonitoringRuleOnPolicy(policyID, integrityMonitoringRuleID, integrityMonitoringRule, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Policy Integrity Monitoring Rule Details"
        ],
        "summary": "Reset integrity monitoring rule overrides",
        "description": "Remove all overrides for an integrity monitoring rule from a policy. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntegrityMonitoringRuleDetailsApi.resetIntegrityMonitoringRuleOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntegrityMonitoringRuleDetailsApi.reset_integrity_monitoring_rule_on_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntegrityMonitoringRuleDetailsApi.resetIntegrityMonitoringRuleOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "resetIntegrityMonitoringRuleOnPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "integrityMonitoringRuleID",
            "in": "path",
            "description": "The ID number of the integrity monitoring rule to reset.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/integrityMonitoringRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the policy."
          },
          "404": {
            "description": "The policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyIntegrityMonitoringRuleDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.IntegrityMonitoringRule;\r\n\r\n\r\npublic class ResetIntegrityMonitoringRuleOnPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyIntegrityMonitoringRuleDetailsApi instance = new PolicyIntegrityMonitoringRuleDetailsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tInteger integrityMonitoringRuleID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntegrityMonitoringRule result = instance.resetIntegrityMonitoringRuleOnPolicy(policyID, integrityMonitoringRuleID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyIntegrityMonitoringRuleDetailsApi.resetIntegrityMonitoringRuleOnPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyIntegrityMonitoringRuleDetailsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\nintegrity_monitoring_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.reset_integrity_monitoring_rule_on_policy(policy_id, integrity_monitoring_rule_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyIntegrityMonitoringRuleDetailsApi.reset_integrity_monitoring_rule_on_policy: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyIntegrityMonitoringRuleDetailsApi();\r\nlet policyID = 1;\r\nlet integrityMonitoringRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.resetIntegrityMonitoringRuleOnPolicy(policyID, integrityMonitoringRuleID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/policies/{policyID}/intrusionprevention/assignments": {
      "get": {
        "tags": [
          "Policy Intrusion Prevention Rule Assignments & Recommendations"
        ],
        "summary": "List Intrusion Prevention Rule IDs",
        "description": "Lists all intrusion prevention rule IDs assigned to a policy. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi.listIntrusionPreventionRuleIDsOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi.list_intrusion_prevention_rule_ids_on_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi.listIntrusionPreventionRuleIDsOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listIntrusionPreventionRuleIDsOnPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only rule IDs assigned directly to the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/intrusionPreventionAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the policy."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi;\r\nimport com.trendmicro.deepsecurity.model.IntrusionPreventionAssignments;\r\n\r\n\r\npublic class ListIntrusionPreventionRuleIDsOnPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyIntrusionPreventionRuleAssignmentsRecommendationsApi instance = new PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntrusionPreventionAssignments result = instance.listIntrusionPreventionRuleIDsOnPolicy(policyID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi.listIntrusionPreventionRuleIDsOnPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.list_intrusion_prevention_rule_ids_on_policy(policy_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi.list_intrusion_prevention_rule_ids_on_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi();\r\nlet policyID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.listIntrusionPreventionRuleIDsOnPolicy(policyID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Policy Intrusion Prevention Rule Assignments & Recommendations"
        ],
        "summary": "Add Intrusion Prevention Rule IDs",
        "description": "Assign intrusion prevention rule IDs to a policy. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi.addIntrusionPreventionRuleIDsToPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi.add_intrusion_prevention_rule_ids_to_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi.addIntrusionPreventionRuleIDsToPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "addIntrusionPreventionRuleIDsToPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only rule IDs assigned directly to the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/RuleIDs8"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/intrusionPreventionAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the policy or the requested modification is not permitted."
          },
          "404": {
            "description": "The policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi;\r\nimport com.trendmicro.deepsecurity.model.RuleIDs;\r\nimport com.trendmicro.deepsecurity.model.IntrusionPreventionAssignments;\r\n\r\n\r\npublic class AddIntrusionPreventionRuleIDsToPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyIntrusionPreventionRuleAssignmentsRecommendationsApi instance = new PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tRuleIDs intrusionPreventionRuleIDs = new RuleIDs();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntrusionPreventionAssignments result = instance.addIntrusionPreventionRuleIDsToPolicy(policyID, intrusionPreventionRuleIDs, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi.addIntrusionPreventionRuleIDsToPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\napi_version = 'YOUR VERSION'\r\nintrusion_prevention_rule_ids = deepsecurity.RuleIDs()\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.add_intrusion_prevention_rule_ids_to_policy(policy_id, api_version, intrusion_prevention_rule_ids=intrusion_prevention_rule_ids, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi.add_intrusion_prevention_rule_ids_to_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi();\r\nlet policyID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  intrusionPreventionRuleIDs: new Deepsecurity.RuleIDs(),\r\n  overrides: false,\r\n};\r\n\r\napiInstance.addIntrusionPreventionRuleIDsToPolicy(policyID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "put": {
        "tags": [
          "Policy Intrusion Prevention Rule Assignments & Recommendations"
        ],
        "summary": "Set Intrusion Prevention Rule IDs",
        "description": "Set intrusion prevention rule IDs assigned to a policy. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi.setIntrusionPreventionRuleIDsOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi.set_intrusion_prevention_rule_ids_on_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi.setIntrusionPreventionRuleIDsOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "setIntrusionPreventionRuleIDsOnPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only rule IDs assigned directly to the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/RuleIDs"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/intrusionPreventionAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the policy or the requested modification is not permitted."
          },
          "404": {
            "description": "The policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi;\r\nimport com.trendmicro.deepsecurity.model.RuleIDs;\r\nimport com.trendmicro.deepsecurity.model.IntrusionPreventionAssignments;\r\n\r\n\r\npublic class SetIntrusionPreventionRuleIDsOnPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyIntrusionPreventionRuleAssignmentsRecommendationsApi instance = new PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tRuleIDs intrusionPreventionRuleIDs = new RuleIDs();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntrusionPreventionAssignments result = instance.setIntrusionPreventionRuleIDsOnPolicy(policyID, intrusionPreventionRuleIDs, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi.setIntrusionPreventionRuleIDsOnPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\napi_version = 'YOUR VERSION'\r\nintrusion_prevention_rule_ids = deepsecurity.RuleIDs()\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.set_intrusion_prevention_rule_ids_on_policy(policy_id, api_version, intrusion_prevention_rule_ids=intrusion_prevention_rule_ids, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi.set_intrusion_prevention_rule_ids_on_policy: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi();\r\nlet policyID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  intrusionPreventionRuleIDs: new Deepsecurity.RuleIDs(),\r\n  overrides: false,\r\n};\r\n\r\napiInstance.setIntrusionPreventionRuleIDsOnPolicy(policyID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/policies/{policyID}/intrusionprevention/assignments/{intrusionPreventionRuleID}": {
      "delete": {
        "tags": [
          "Policy Intrusion Prevention Rule Assignments & Recommendations"
        ],
        "summary": "Remove an Intrusion Prevention Rule ID",
        "description": "Unassign an intrusion prevention rule ID from a policy. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi.removeIntrusionPreventionRuleIDFromPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi.remove_intrusion_prevention_rule_id_from_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi.removeIntrusionPreventionRuleIDFromPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "removeIntrusionPreventionRuleIDFromPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "intrusionPreventionRuleID",
            "in": "path",
            "description": "The ID number of the intrusion prevention rule to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only rule IDs assigned directly to the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/intrusionPreventionAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the policy or the requested modification is not permitted."
          },
          "404": {
            "description": "The policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi;\r\nimport com.trendmicro.deepsecurity.model.IntrusionPreventionAssignments;\r\n\r\n\r\npublic class RemoveIntrusionPreventionRuleIDFromPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyIntrusionPreventionRuleAssignmentsRecommendationsApi instance = new PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tInteger intrusionPreventionRuleID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntrusionPreventionAssignments result = instance.removeIntrusionPreventionRuleIDFromPolicy(policyID, intrusionPreventionRuleID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi.removeIntrusionPreventionRuleIDFromPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\nintrusion_prevention_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.remove_intrusion_prevention_rule_id_from_policy(policy_id, intrusion_prevention_rule_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi.remove_intrusion_prevention_rule_id_from_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyIntrusionPreventionRuleAssignmentsRecommendationsApi();\r\nlet policyID = 1;\r\nlet intrusionPreventionRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.removeIntrusionPreventionRuleIDFromPolicy(policyID, intrusionPreventionRuleID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/policies/{policyID}/intrusionprevention/applicationtypes": {
      "get": {
        "tags": [
          "Policy Intrusion Prevention Application Type Details"
        ],
        "summary": "List intrusion prevention application types",
        "description": "Lists all intrusion prevention application types assigned to a policy. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionApplicationTypeDetailsApi.listIntrusionPreventionApplicationTypesOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionApplicationTypeDetailsApi.list_intrusion_prevention_application_types_on_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionApplicationTypeDetailsApi.listIntrusionPreventionApplicationTypesOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listIntrusionPreventionApplicationTypesOnPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only application types assigned to the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationTypes"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the policy."
          },
          "404": {
            "description": "The policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyIntrusionPreventionApplicationTypeDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.ApplicationTypes;\r\n\r\n\r\npublic class ListIntrusionPreventionApplicationTypesOnPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyIntrusionPreventionApplicationTypeDetailsApi instance = new PolicyIntrusionPreventionApplicationTypeDetailsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApplicationTypes result = instance.listIntrusionPreventionApplicationTypesOnPolicy(policyID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyIntrusionPreventionApplicationTypeDetailsApi.listIntrusionPreventionApplicationTypesOnPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyIntrusionPreventionApplicationTypeDetailsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.list_intrusion_prevention_application_types_on_policy(policy_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyIntrusionPreventionApplicationTypeDetailsApi.list_intrusion_prevention_application_types_on_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyIntrusionPreventionApplicationTypeDetailsApi();\r\nlet policyID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.listIntrusionPreventionApplicationTypesOnPolicy(policyID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/policies/{policyID}/intrusionprevention/applicationtypes/{applicationTypeID}": {
      "get": {
        "tags": [
          "Policy Intrusion Prevention Application Type Details"
        ],
        "summary": "Describe an intrusion prevention application type",
        "description": "Describe an intrusion prevention application type including policy-level overrides. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionApplicationTypeDetailsApi.describeIntrusionPreventionApplicationTypeOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionApplicationTypeDetailsApi.describe_intrusion_prevention_application_type_on_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionApplicationTypeDetailsApi.describeIntrusionPreventionApplicationTypeOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeIntrusionPreventionApplicationTypeOnPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "applicationTypeID",
            "in": "path",
            "description": "The ID number of the application type.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/applicationType"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the policy."
          },
          "404": {
            "description": "The policy or application type does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyIntrusionPreventionApplicationTypeDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.ApplicationType;\r\n\r\n\r\npublic class DescribeIntrusionPreventionApplicationTypeOnPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyIntrusionPreventionApplicationTypeDetailsApi instance = new PolicyIntrusionPreventionApplicationTypeDetailsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tInteger applicationTypeID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApplicationType result = instance.describeIntrusionPreventionApplicationTypeOnPolicy(policyID, applicationTypeID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyIntrusionPreventionApplicationTypeDetailsApi.describeIntrusionPreventionApplicationTypeOnPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyIntrusionPreventionApplicationTypeDetailsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\napplication_type_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_intrusion_prevention_application_type_on_policy(policy_id, application_type_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyIntrusionPreventionApplicationTypeDetailsApi.describe_intrusion_prevention_application_type_on_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyIntrusionPreventionApplicationTypeDetailsApi();\r\nlet policyID = 1;\r\nlet applicationTypeID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.describeIntrusionPreventionApplicationTypeOnPolicy(policyID, applicationTypeID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Policy Intrusion Prevention Application Type Details"
        ],
        "summary": "Modify an intrusion prevention application type",
        "description": "Modify an intrusion prevention application type assigned to a policy. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionApplicationTypeDetailsApi.modifyIntrusionPreventionApplicationTypeOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionApplicationTypeDetailsApi.modify_intrusion_prevention_application_type_on_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionApplicationTypeDetailsApi.modifyIntrusionPreventionApplicationTypeOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyIntrusionPreventionApplicationTypeOnPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "applicationTypeID",
            "in": "path",
            "description": "The ID number of the application type to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/applicationType"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/applicationType"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the policy or the requested modification is not permitted."
          },
          "404": {
            "description": "The policy or application type does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyIntrusionPreventionApplicationTypeDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.ApplicationType;\r\n\r\n\r\npublic class ModifyIntrusionPreventionApplicationTypeOnPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyIntrusionPreventionApplicationTypeDetailsApi instance = new PolicyIntrusionPreventionApplicationTypeDetailsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tInteger applicationTypeID = 1;\r\n\t\tApplicationType applicationType = new ApplicationType();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApplicationType result = instance.modifyIntrusionPreventionApplicationTypeOnPolicy(policyID, applicationTypeID, applicationType, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyIntrusionPreventionApplicationTypeDetailsApi.modifyIntrusionPreventionApplicationTypeOnPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyIntrusionPreventionApplicationTypeDetailsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\napplication_type_id = 1\r\napplication_type = deepsecurity.ApplicationType()\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_intrusion_prevention_application_type_on_policy(policy_id, application_type_id, application_type, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyIntrusionPreventionApplicationTypeDetailsApi.modify_intrusion_prevention_application_type_on_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyIntrusionPreventionApplicationTypeDetailsApi();\r\nlet policyID = 1;\r\nlet applicationTypeID = 1;\r\nlet applicationType = new Deepsecurity.ApplicationType();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.modifyIntrusionPreventionApplicationTypeOnPolicy(policyID, applicationTypeID, applicationType, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Policy Intrusion Prevention Application Type Details"
        ],
        "summary": "Reset intrusion prevention application type overrides",
        "description": "Remove all overrides for an intrusion prevention application type from a policy. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionApplicationTypeDetailsApi.resetIntrusionPreventionApplicationTypeOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionApplicationTypeDetailsApi.reset_intrusion_prevention_application_type_on_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionApplicationTypeDetailsApi.resetIntrusionPreventionApplicationTypeOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "resetIntrusionPreventionApplicationTypeOnPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "applicationTypeID",
            "in": "path",
            "description": "The ID number of the application type to reset.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/applicationType"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the policy."
          },
          "404": {
            "description": "The policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyIntrusionPreventionApplicationTypeDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.ApplicationType;\r\n\r\n\r\npublic class ResetIntrusionPreventionApplicationTypeOnPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyIntrusionPreventionApplicationTypeDetailsApi instance = new PolicyIntrusionPreventionApplicationTypeDetailsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tInteger applicationTypeID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApplicationType result = instance.resetIntrusionPreventionApplicationTypeOnPolicy(policyID, applicationTypeID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyIntrusionPreventionApplicationTypeDetailsApi.resetIntrusionPreventionApplicationTypeOnPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyIntrusionPreventionApplicationTypeDetailsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\napplication_type_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.reset_intrusion_prevention_application_type_on_policy(policy_id, application_type_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyIntrusionPreventionApplicationTypeDetailsApi.reset_intrusion_prevention_application_type_on_policy: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyIntrusionPreventionApplicationTypeDetailsApi();\r\nlet policyID = 1;\r\nlet applicationTypeID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.resetIntrusionPreventionApplicationTypeOnPolicy(policyID, applicationTypeID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/policies/{policyID}/intrusionprevention/rules": {
      "get": {
        "tags": [
          "Policy Intrusion Prevention Rule Details"
        ],
        "summary": "List intrusion prevention rules",
        "description": "Lists all intrusion prevention rules assigned to a policy. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionRuleDetailsApi.listIntrusionPreventionRulesOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionRuleDetailsApi.list_intrusion_prevention_rules_on_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionRuleDetailsApi.listIntrusionPreventionRulesOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listIntrusionPreventionRulesOnPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only rules assigned to the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntrusionPreventionRules"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the policy."
          },
          "404": {
            "description": "The policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyIntrusionPreventionRuleDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.IntrusionPreventionRules;\r\n\r\n\r\npublic class ListIntrusionPreventionRulesOnPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyIntrusionPreventionRuleDetailsApi instance = new PolicyIntrusionPreventionRuleDetailsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntrusionPreventionRules result = instance.listIntrusionPreventionRulesOnPolicy(policyID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyIntrusionPreventionRuleDetailsApi.listIntrusionPreventionRulesOnPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyIntrusionPreventionRuleDetailsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.list_intrusion_prevention_rules_on_policy(policy_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyIntrusionPreventionRuleDetailsApi.list_intrusion_prevention_rules_on_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyIntrusionPreventionRuleDetailsApi();\r\nlet policyID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.listIntrusionPreventionRulesOnPolicy(policyID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/policies/{policyID}/intrusionprevention/rules/{intrusionPreventionRuleID}": {
      "get": {
        "tags": [
          "Policy Intrusion Prevention Rule Details"
        ],
        "summary": "Describe an intrusion prevention rule",
        "description": "Describe an intrusion prevention rule including policy-level overrides. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionRuleDetailsApi.describeIntrusionPreventionRuleOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionRuleDetailsApi.describe_intrusion_prevention_rule_on_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionRuleDetailsApi.describeIntrusionPreventionRuleOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeIntrusionPreventionRuleOnPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "intrusionPreventionRuleID",
            "in": "path",
            "description": "The ID number of the intrusion prevention rule.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/intrusionPreventionRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the policy."
          },
          "404": {
            "description": "The policy or intrusion prevention rule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyIntrusionPreventionRuleDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.IntrusionPreventionRule;\r\n\r\n\r\npublic class DescribeIntrusionPreventionRuleOnPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyIntrusionPreventionRuleDetailsApi instance = new PolicyIntrusionPreventionRuleDetailsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tInteger intrusionPreventionRuleID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntrusionPreventionRule result = instance.describeIntrusionPreventionRuleOnPolicy(policyID, intrusionPreventionRuleID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyIntrusionPreventionRuleDetailsApi.describeIntrusionPreventionRuleOnPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyIntrusionPreventionRuleDetailsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\nintrusion_prevention_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_intrusion_prevention_rule_on_policy(policy_id, intrusion_prevention_rule_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyIntrusionPreventionRuleDetailsApi.describe_intrusion_prevention_rule_on_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyIntrusionPreventionRuleDetailsApi();\r\nlet policyID = 1;\r\nlet intrusionPreventionRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.describeIntrusionPreventionRuleOnPolicy(policyID, intrusionPreventionRuleID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Policy Intrusion Prevention Rule Details"
        ],
        "summary": "Modify an intrusion prevention rule",
        "description": "Modify an intrusion prevention rule assigned to a policy. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionRuleDetailsApi.modifyIntrusionPreventionRuleOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionRuleDetailsApi.modify_intrusion_prevention_rule_on_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionRuleDetailsApi.modifyIntrusionPreventionRuleOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyIntrusionPreventionRuleOnPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "intrusionPreventionRuleID",
            "in": "path",
            "description": "The ID number of the intrusion prevention rule to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/intrusionPreventionRule"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/intrusionPreventionRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the policy or the requested modification is not permitted."
          },
          "404": {
            "description": "The policy or intrusion prevention rule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyIntrusionPreventionRuleDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.IntrusionPreventionRule;\r\n\r\n\r\npublic class ModifyIntrusionPreventionRuleOnPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyIntrusionPreventionRuleDetailsApi instance = new PolicyIntrusionPreventionRuleDetailsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tInteger intrusionPreventionRuleID = 1;\r\n\t\tIntrusionPreventionRule intrusionPreventionRule = new IntrusionPreventionRule();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntrusionPreventionRule result = instance.modifyIntrusionPreventionRuleOnPolicy(policyID, intrusionPreventionRuleID, intrusionPreventionRule, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyIntrusionPreventionRuleDetailsApi.modifyIntrusionPreventionRuleOnPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyIntrusionPreventionRuleDetailsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\nintrusion_prevention_rule_id = 1\r\nintrusion_prevention_rule = deepsecurity.IntrusionPreventionRule()\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_intrusion_prevention_rule_on_policy(policy_id, intrusion_prevention_rule_id, intrusion_prevention_rule, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyIntrusionPreventionRuleDetailsApi.modify_intrusion_prevention_rule_on_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyIntrusionPreventionRuleDetailsApi();\r\nlet policyID = 1;\r\nlet intrusionPreventionRuleID = 1;\r\nlet intrusionPreventionRule = new Deepsecurity.IntrusionPreventionRule();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.modifyIntrusionPreventionRuleOnPolicy(policyID, intrusionPreventionRuleID, intrusionPreventionRule, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Policy Intrusion Prevention Rule Details"
        ],
        "summary": "Reset intrusion prevention rule overrides",
        "description": "Remove all overrides for an intrusion prevention rule from a policy. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionRuleDetailsApi.resetIntrusionPreventionRuleOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionRuleDetailsApi.reset_intrusion_prevention_rule_on_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyIntrusionPreventionRuleDetailsApi.resetIntrusionPreventionRuleOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "resetIntrusionPreventionRuleOnPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "intrusionPreventionRuleID",
            "in": "path",
            "description": "The ID number of the intrusion prevention rule to reset.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/intrusionPreventionRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the policy."
          },
          "404": {
            "description": "The policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyIntrusionPreventionRuleDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.IntrusionPreventionRule;\r\n\r\n\r\npublic class ResetIntrusionPreventionRuleOnPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyIntrusionPreventionRuleDetailsApi instance = new PolicyIntrusionPreventionRuleDetailsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tInteger intrusionPreventionRuleID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tIntrusionPreventionRule result = instance.resetIntrusionPreventionRuleOnPolicy(policyID, intrusionPreventionRuleID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyIntrusionPreventionRuleDetailsApi.resetIntrusionPreventionRuleOnPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyIntrusionPreventionRuleDetailsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\nintrusion_prevention_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.reset_intrusion_prevention_rule_on_policy(policy_id, intrusion_prevention_rule_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyIntrusionPreventionRuleDetailsApi.reset_intrusion_prevention_rule_on_policy: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyIntrusionPreventionRuleDetailsApi();\r\nlet policyID = 1;\r\nlet intrusionPreventionRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.resetIntrusionPreventionRuleOnPolicy(policyID, intrusionPreventionRuleID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/policies/{policyID}/loginspection/assignments": {
      "get": {
        "tags": [
          "Policy Log Inspection Rule Assignments & Recommendations"
        ],
        "summary": "List Log Inspection Rule IDs",
        "description": "Lists all log inspection rule IDs assigned to a policy. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyLogInspectionRuleAssignmentsRecommendationsApi.listLogInspectionRuleIDsOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyLogInspectionRuleAssignmentsRecommendationsApi.list_log_inspection_rule_ids_on_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyLogInspectionRuleAssignmentsRecommendationsApi.listLogInspectionRuleIDsOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listLogInspectionRuleIDsOnPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only rule IDs assigned directly to the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logInspectionAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the policy."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyLogInspectionRuleAssignmentsRecommendationsApi;\r\nimport com.trendmicro.deepsecurity.model.LogInspectionAssignments;\r\n\r\n\r\npublic class ListLogInspectionRuleIDsOnPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyLogInspectionRuleAssignmentsRecommendationsApi instance = new PolicyLogInspectionRuleAssignmentsRecommendationsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tLogInspectionAssignments result = instance.listLogInspectionRuleIDsOnPolicy(policyID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyLogInspectionRuleAssignmentsRecommendationsApi.listLogInspectionRuleIDsOnPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyLogInspectionRuleAssignmentsRecommendationsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.list_log_inspection_rule_ids_on_policy(policy_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyLogInspectionRuleAssignmentsRecommendationsApi.list_log_inspection_rule_ids_on_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyLogInspectionRuleAssignmentsRecommendationsApi();\r\nlet policyID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.listLogInspectionRuleIDsOnPolicy(policyID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Policy Log Inspection Rule Assignments & Recommendations"
        ],
        "summary": "Add Log Inspection Rule IDs",
        "description": "Assign log inspection rule IDs to a policy. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyLogInspectionRuleAssignmentsRecommendationsApi.addLogInspectionRuleIDsToPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyLogInspectionRuleAssignmentsRecommendationsApi.add_log_inspection_rule_ids_to_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyLogInspectionRuleAssignmentsRecommendationsApi.addLogInspectionRuleIDsToPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "addLogInspectionRuleIDsToPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only rule IDs assigned directly to the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/RuleIDs2"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logInspectionAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the policy or the requested modification is not permitted."
          },
          "404": {
            "description": "The policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyLogInspectionRuleAssignmentsRecommendationsApi;\r\nimport com.trendmicro.deepsecurity.model.RuleIDs;\r\nimport com.trendmicro.deepsecurity.model.LogInspectionAssignments;\r\n\r\n\r\npublic class AddLogInspectionRuleIDsToPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyLogInspectionRuleAssignmentsRecommendationsApi instance = new PolicyLogInspectionRuleAssignmentsRecommendationsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tRuleIDs logInspectionRuleIDs = new RuleIDs();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tLogInspectionAssignments result = instance.addLogInspectionRuleIDsToPolicy(policyID, logInspectionRuleIDs, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyLogInspectionRuleAssignmentsRecommendationsApi.addLogInspectionRuleIDsToPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyLogInspectionRuleAssignmentsRecommendationsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\napi_version = 'YOUR VERSION'\r\nlog_inspection_rule_ids = deepsecurity.RuleIDs()\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.add_log_inspection_rule_ids_to_policy(policy_id, api_version, log_inspection_rule_ids=log_inspection_rule_ids, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyLogInspectionRuleAssignmentsRecommendationsApi.add_log_inspection_rule_ids_to_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyLogInspectionRuleAssignmentsRecommendationsApi();\r\nlet policyID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  logInspectionRuleIDs: new Deepsecurity.RuleIDs(),\r\n  overrides: false,\r\n};\r\n\r\napiInstance.addLogInspectionRuleIDsToPolicy(policyID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "put": {
        "tags": [
          "Policy Log Inspection Rule Assignments & Recommendations"
        ],
        "summary": "Set Log Inspection Rule IDs",
        "description": "Set log inspection rule IDs assigned to a policy. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyLogInspectionRuleAssignmentsRecommendationsApi.setLogInspectionRuleIDsOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyLogInspectionRuleAssignmentsRecommendationsApi.set_log_inspection_rule_ids_on_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyLogInspectionRuleAssignmentsRecommendationsApi.setLogInspectionRuleIDsOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "setLogInspectionRuleIDsOnPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only rule IDs assigned directly to the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/RuleIDs3"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logInspectionAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the policy or the requested modification is not permitted."
          },
          "404": {
            "description": "The policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyLogInspectionRuleAssignmentsRecommendationsApi;\r\nimport com.trendmicro.deepsecurity.model.RuleIDs;\r\nimport com.trendmicro.deepsecurity.model.LogInspectionAssignments;\r\n\r\n\r\npublic class SetLogInspectionRuleIDsOnPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyLogInspectionRuleAssignmentsRecommendationsApi instance = new PolicyLogInspectionRuleAssignmentsRecommendationsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tRuleIDs logInspectionRuleIDs = new RuleIDs();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tLogInspectionAssignments result = instance.setLogInspectionRuleIDsOnPolicy(policyID, logInspectionRuleIDs, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyLogInspectionRuleAssignmentsRecommendationsApi.setLogInspectionRuleIDsOnPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyLogInspectionRuleAssignmentsRecommendationsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\napi_version = 'YOUR VERSION'\r\nlog_inspection_rule_ids = deepsecurity.RuleIDs()\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.set_log_inspection_rule_ids_on_policy(policy_id, api_version, log_inspection_rule_ids=log_inspection_rule_ids, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyLogInspectionRuleAssignmentsRecommendationsApi.set_log_inspection_rule_ids_on_policy: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyLogInspectionRuleAssignmentsRecommendationsApi();\r\nlet policyID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  logInspectionRuleIDs: new Deepsecurity.RuleIDs(),\r\n  overrides: false,\r\n};\r\n\r\napiInstance.setLogInspectionRuleIDsOnPolicy(policyID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/policies/{policyID}/loginspection/assignments/{logInspectionRuleID}": {
      "delete": {
        "tags": [
          "Policy Log Inspection Rule Assignments & Recommendations"
        ],
        "summary": "Remove a Log Inspection Rule ID",
        "description": "Unassign a log inspection rule ID from a policy. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyLogInspectionRuleAssignmentsRecommendationsApi.removeLogInspectionRuleIDFromPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyLogInspectionRuleAssignmentsRecommendationsApi.remove_log_inspection_rule_id_from_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyLogInspectionRuleAssignmentsRecommendationsApi.removeLogInspectionRuleIDFromPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "removeLogInspectionRuleIDFromPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "logInspectionRuleID",
            "in": "path",
            "description": "The ID number of the log inspection rule to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Return only rule IDs assigned directly to the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logInspectionAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the policy or the requested modification is not permitted."
          },
          "404": {
            "description": "The policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyLogInspectionRuleAssignmentsRecommendationsApi;\r\nimport com.trendmicro.deepsecurity.model.LogInspectionAssignments;\r\n\r\n\r\npublic class RemoveLogInspectionRuleIDFromPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyLogInspectionRuleAssignmentsRecommendationsApi instance = new PolicyLogInspectionRuleAssignmentsRecommendationsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tInteger logInspectionRuleID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tLogInspectionAssignments result = instance.removeLogInspectionRuleIDFromPolicy(policyID, logInspectionRuleID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyLogInspectionRuleAssignmentsRecommendationsApi.removeLogInspectionRuleIDFromPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyLogInspectionRuleAssignmentsRecommendationsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\nlog_inspection_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.remove_log_inspection_rule_id_from_policy(policy_id, log_inspection_rule_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyLogInspectionRuleAssignmentsRecommendationsApi.remove_log_inspection_rule_id_from_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyLogInspectionRuleAssignmentsRecommendationsApi();\r\nlet policyID = 1;\r\nlet logInspectionRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.removeLogInspectionRuleIDFromPolicy(policyID, logInspectionRuleID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/policies/{policyID}/loginspection/rules": {
      "get": {
        "tags": [
          "Policy Log Inspection Rule Details"
        ],
        "summary": "List log inspection rules",
        "description": "Lists all log inspection rules assigned to a policy. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyLogInspectionRuleDetailsApi.listLogInspectionRulesOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyLogInspectionRuleDetailsApi.list_log_inspection_rules_on_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyLogInspectionRuleDetailsApi.listLogInspectionRulesOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listLogInspectionRulesOnPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only rules assigned to the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogInspectionRules"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the policy."
          },
          "404": {
            "description": "The policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyLogInspectionRuleDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.LogInspectionRules;\r\n\r\n\r\npublic class ListLogInspectionRulesOnPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyLogInspectionRuleDetailsApi instance = new PolicyLogInspectionRuleDetailsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tLogInspectionRules result = instance.listLogInspectionRulesOnPolicy(policyID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyLogInspectionRuleDetailsApi.listLogInspectionRulesOnPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyLogInspectionRuleDetailsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.list_log_inspection_rules_on_policy(policy_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyLogInspectionRuleDetailsApi.list_log_inspection_rules_on_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyLogInspectionRuleDetailsApi();\r\nlet policyID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.listLogInspectionRulesOnPolicy(policyID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/policies/{policyID}/loginspection/rules/{logInspectionRuleID}": {
      "get": {
        "tags": [
          "Policy Log Inspection Rule Details"
        ],
        "summary": "Describe an log inspection rule",
        "description": "Describe an log inspection rule including policy-level overrides. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyLogInspectionRuleDetailsApi.describeLogInspectionRuleOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyLogInspectionRuleDetailsApi.describe_log_inspection_rule_on_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyLogInspectionRuleDetailsApi.describeLogInspectionRuleOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeLogInspectionRuleOnPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "logInspectionRuleID",
            "in": "path",
            "description": "The ID number of the log inspection rule.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logInspectionRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the policy."
          },
          "404": {
            "description": "The policy or log inspection rule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyLogInspectionRuleDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.LogInspectionRule;\r\n\r\n\r\npublic class DescribeLogInspectionRuleOnPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyLogInspectionRuleDetailsApi instance = new PolicyLogInspectionRuleDetailsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tInteger logInspectionRuleID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tLogInspectionRule result = instance.describeLogInspectionRuleOnPolicy(policyID, logInspectionRuleID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyLogInspectionRuleDetailsApi.describeLogInspectionRuleOnPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyLogInspectionRuleDetailsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\nlog_inspection_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_log_inspection_rule_on_policy(policy_id, log_inspection_rule_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyLogInspectionRuleDetailsApi.describe_log_inspection_rule_on_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyLogInspectionRuleDetailsApi();\r\nlet policyID = 1;\r\nlet logInspectionRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.describeLogInspectionRuleOnPolicy(policyID, logInspectionRuleID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Policy Log Inspection Rule Details"
        ],
        "summary": "Modify an log inspection rule",
        "description": "Modify an log inspection rule assigned to a policy. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyLogInspectionRuleDetailsApi.modifyLogInspectionRuleOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyLogInspectionRuleDetailsApi.modify_log_inspection_rule_on_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyLogInspectionRuleDetailsApi.modifyLogInspectionRuleOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyLogInspectionRuleOnPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "logInspectionRuleID",
            "in": "path",
            "description": "The ID number of the log inspection rule to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/logInspectionRule"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logInspectionRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the policy or the requested modification is not permitted."
          },
          "404": {
            "description": "The policy or log inspection rule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyLogInspectionRuleDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.LogInspectionRule;\r\n\r\n\r\npublic class ModifyLogInspectionRuleOnPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyLogInspectionRuleDetailsApi instance = new PolicyLogInspectionRuleDetailsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tInteger logInspectionRuleID = 1;\r\n\t\tLogInspectionRule logInspectionRule = new LogInspectionRule();\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tLogInspectionRule result = instance.modifyLogInspectionRuleOnPolicy(policyID, logInspectionRuleID, logInspectionRule, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyLogInspectionRuleDetailsApi.modifyLogInspectionRuleOnPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyLogInspectionRuleDetailsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\nlog_inspection_rule_id = 1\r\nlog_inspection_rule = deepsecurity.LogInspectionRule()\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_log_inspection_rule_on_policy(policy_id, log_inspection_rule_id, log_inspection_rule, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyLogInspectionRuleDetailsApi.modify_log_inspection_rule_on_policy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyLogInspectionRuleDetailsApi();\r\nlet policyID = 1;\r\nlet logInspectionRuleID = 1;\r\nlet logInspectionRule = new Deepsecurity.LogInspectionRule();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.modifyLogInspectionRuleOnPolicy(policyID, logInspectionRuleID, logInspectionRule, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Policy Log Inspection Rule Details"
        ],
        "summary": "Reset log inspection rule overrides",
        "description": "Remove all overrides for an log inspection rule from a policy. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyLogInspectionRuleDetailsApi.resetLogInspectionRuleOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyLogInspectionRuleDetailsApi.reset_log_inspection_rule_on_policy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PolicyLogInspectionRuleDetailsApi.resetLogInspectionRuleOnPolicy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "resetLogInspectionRuleOnPolicy",
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "description": "The ID number of the policy.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "logInspectionRuleID",
            "in": "path",
            "description": "The ID number of the log inspection rule to reset.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "overrides",
            "in": "query",
            "description": "Show only overrides defined for the current policy.",
            "required": false,
            "example": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/logInspectionRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the policy."
          },
          "404": {
            "description": "The policy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PolicyLogInspectionRuleDetailsApi;\r\nimport com.trendmicro.deepsecurity.model.LogInspectionRule;\r\n\r\n\r\npublic class ResetLogInspectionRuleOnPolicyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPolicyLogInspectionRuleDetailsApi instance = new PolicyLogInspectionRuleDetailsApi();\r\n\t\tInteger policyID = 1;\r\n\t\tInteger logInspectionRuleID = 1;\r\n\t\tBoolean overrides = false;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tLogInspectionRule result = instance.resetLogInspectionRuleOnPolicy(policyID, logInspectionRuleID, overrides, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PolicyLogInspectionRuleDetailsApi.resetLogInspectionRuleOnPolicy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PolicyLogInspectionRuleDetailsApi(deepsecurity.ApiClient(configuration))\r\npolicy_id = 1\r\nlog_inspection_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\noverrides = False\r\n\r\ntry:\r\n\tapi_response = api_instance.reset_log_inspection_rule_on_policy(policy_id, log_inspection_rule_id, api_version, overrides=overrides)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PolicyLogInspectionRuleDetailsApi.reset_log_inspection_rule_on_policy: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PolicyLogInspectionRuleDetailsApi();\r\nlet policyID = 1;\r\nlet logInspectionRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  overrides: false,\r\n};\r\n\r\napiInstance.resetLogInspectionRuleOnPolicy(policyID, logInspectionRuleID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/portlists/{portListID}": {
      "get": {
        "tags": [
          "Port Lists"
        ],
        "summary": "Describe a Port List",
        "description": "Describe a port list by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PortListsApi.describePortList([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PortListsApi.describe_port_list([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PortListsApi.describePortList([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describePortList",
        "parameters": [
          {
            "name": "portListID",
            "in": "path",
            "description": "The ID number of the port list to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/portList"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view port lists."
          },
          "404": {
            "description": "The port list does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PortListsApi;\r\nimport com.trendmicro.deepsecurity.model.PortList;\r\n\r\n\r\npublic class DescribePortListExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPortListsApi instance = new PortListsApi();\r\n\t\tInteger portListID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tPortList result = instance.describePortList(portListID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PortListsApi.describePortList\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PortListsApi(deepsecurity.ApiClient(configuration))\r\nport_list_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_port_list(port_list_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PortListsApi.describe_port_list: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PortListsApi();\r\nlet portListID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describePortList(portListID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Port Lists"
        ],
        "summary": "Modify a Port List",
        "description": "Modify a port list by ID. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PortListsApi.modifyPortList([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PortListsApi.modify_port_list([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PortListsApi.modifyPortList([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyPortList",
        "parameters": [
          {
            "name": "portListID",
            "in": "path",
            "description": "The ID number of the port list to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/portList"
              }
            }
          },
          "description": "The settings of the port list to modify."
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/portList"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify port lists or the requested modification is not permitted."
          },
          "404": {
            "description": "The port list does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PortListsApi;\r\nimport com.trendmicro.deepsecurity.model.PortList;\r\n\r\n\r\npublic class ModifyPortListExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPortListsApi instance = new PortListsApi();\r\n\t\tInteger portListID = 1;\r\n\t\tPortList portList = new PortList();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tPortList result = instance.modifyPortList(portListID, portList, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PortListsApi.modifyPortList\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PortListsApi(deepsecurity.ApiClient(configuration))\r\nport_list_id = 1\r\napi_version = 'YOUR VERSION'\r\nport_list = deepsecurity.PortList()\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_port_list(port_list_id, api_version, port_list=port_list)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PortListsApi.modify_port_list: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PortListsApi();\r\nlet portListID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  portList: new Deepsecurity.PortList(),\r\n};\r\n\r\napiInstance.modifyPortList(portListID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Port Lists"
        ],
        "summary": "Delete a Port List",
        "description": "Delete a port list by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PortListsApi.deletePortList([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PortListsApi.delete_port_list([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PortListsApi.deletePortList([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deletePortList",
        "parameters": [
          {
            "name": "portListID",
            "in": "path",
            "description": "The ID number of the port list to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete port lists."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PortListsApi;\r\n\r\n\r\npublic class DeletePortListExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPortListsApi instance = new PortListsApi();\r\n\t\tInteger portListID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deletePortList(portListID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PortListsApi.deletePortList\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PortListsApi(deepsecurity.ApiClient(configuration))\r\nport_list_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_port_list(port_list_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PortListsApi.delete_port_list: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PortListsApi();\r\nlet portListID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deletePortList(portListID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/portlists": {
      "get": {
        "tags": [
          "Port Lists"
        ],
        "summary": "List Port Lists",
        "description": "Lists all port lists. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PortListsApi.listPortLists([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PortListsApi.list_port_lists([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PortListsApi.listPortLists([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listPortLists",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortLists"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view port lists."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PortListsApi;\r\nimport com.trendmicro.deepsecurity.model.PortLists;\r\n\r\n\r\npublic class ListPortListsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPortListsApi instance = new PortListsApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tPortLists result = instance.listPortLists(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PortListsApi.listPortLists\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PortListsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_port_lists(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PortListsApi.list_port_lists: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PortListsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listPortLists(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Port Lists"
        ],
        "summary": "Create a Port List",
        "description": "Create a new port list. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PortListsApi.createPortList([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PortListsApi.create_port_list([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PortListsApi.createPortList([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createPortList",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/portList"
              }
            }
          },
          "description": "The settings of the new port list.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/portList"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create port lists."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PortListsApi;\r\nimport com.trendmicro.deepsecurity.model.PortList;\r\n\r\n\r\npublic class CreatePortListExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPortListsApi instance = new PortListsApi();\r\n\t\tPortList portList = new PortList();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tPortList result = instance.createPortList(portList, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PortListsApi.createPortList\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PortListsApi(deepsecurity.ApiClient(configuration))\r\nport_list = deepsecurity.PortList()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_port_list(port_list, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PortListsApi.create_port_list: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PortListsApi();\r\nlet portList = new Deepsecurity.PortList();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createPortList(portList, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/portlists/search": {
      "post": {
        "tags": [
          "Port Lists"
        ],
        "summary": "Search Port Lists",
        "description": "Search for port lists using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PortListsApi.searchPortLists([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PortListsApi.search_port_lists([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>PortListsApi.searchPortLists([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchPortLists",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PortLists"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view port lists."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.PortListsApi;\r\nimport com.trendmicro.deepsecurity.model.PortLists;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchPortListsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tPortListsApi instance = new PortListsApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tPortLists result = instance.searchPortLists(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling PortListsApi.searchPortLists\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.PortListsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_port_lists(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling PortListsApi.search_port_lists: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.PortListsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchPortLists(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/proxies/{proxyID}": {
      "get": {
        "tags": [
          "Proxies"
        ],
        "summary": "Describe a Proxy",
        "description": "Describe a proxy by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ProxiesApi.describeProxy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ProxiesApi.describe_proxy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ProxiesApi.describeProxy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeProxy",
        "parameters": [
          {
            "name": "proxyID",
            "in": "path",
            "description": "The ID number of the proxy to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "DefaultAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/proxy"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view proxies."
          },
          "404": {
            "description": "The proxy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ProxiesApi;\r\nimport com.trendmicro.deepsecurity.model.Proxy;\r\n\r\n\r\npublic class DescribeProxyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tProxiesApi instance = new ProxiesApi();\r\n\t\tInteger proxyID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tProxy result = instance.describeProxy(proxyID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ProxiesApi.describeProxy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ProxiesApi(deepsecurity.ApiClient(configuration))\r\nproxy_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_proxy(proxy_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ProxiesApi.describe_proxy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ProxiesApi();\r\nlet proxyID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeProxy(proxyID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Proxies"
        ],
        "summary": "Modify a Proxy",
        "description": "Modify a proxy by ID. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ProxiesApi.modifyProxy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ProxiesApi.modify_proxy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ProxiesApi.modifyProxy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyProxy",
        "parameters": [
          {
            "name": "proxyID",
            "in": "path",
            "description": "The ID number of the proxy to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/proxy"
        },
        "security": [
          {
            "DefaultAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/proxy"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify proxies or the requested modification is not permitted."
          },
          "404": {
            "description": "The proxy does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ProxiesApi;\r\nimport com.trendmicro.deepsecurity.model.Proxy;\r\n\r\n\r\npublic class ModifyProxyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tProxiesApi instance = new ProxiesApi();\r\n\t\tInteger proxyID = 1;\r\n\t\tProxy proxy = new Proxy();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tProxy result = instance.modifyProxy(proxyID, proxy, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ProxiesApi.modifyProxy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ProxiesApi(deepsecurity.ApiClient(configuration))\r\nproxy_id = 1\r\nproxy = deepsecurity.Proxy()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_proxy(proxy_id, proxy, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ProxiesApi.modify_proxy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ProxiesApi();\r\nlet proxyID = 1;\r\nlet proxy = new Deepsecurity.Proxy();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifyProxy(proxyID, proxy, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Proxies"
        ],
        "summary": "Delete a Proxy",
        "description": "Delete a proxy by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ProxiesApi.deleteProxy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ProxiesApi.delete_proxy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ProxiesApi.deleteProxy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteProxy",
        "parameters": [
          {
            "name": "proxyID",
            "in": "path",
            "description": "The ID number of the proxy to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "DefaultAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete proxies."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ProxiesApi;\r\n\r\n\r\npublic class DeleteProxyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tProxiesApi instance = new ProxiesApi();\r\n\t\tInteger proxyID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteProxy(proxyID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ProxiesApi.deleteProxy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ProxiesApi(deepsecurity.ApiClient(configuration))\r\nproxy_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_proxy(proxy_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ProxiesApi.delete_proxy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ProxiesApi();\r\nlet proxyID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteProxy(proxyID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/proxies": {
      "get": {
        "tags": [
          "Proxies"
        ],
        "summary": "List Proxies",
        "description": "Lists all proxies. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ProxiesApi.listProxies([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ProxiesApi.list_proxies([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ProxiesApi.listProxies([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listProxies",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "DefaultAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Proxies"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view proxies."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ProxiesApi;\r\nimport com.trendmicro.deepsecurity.model.Proxies;\r\n\r\n\r\npublic class ListProxiesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tProxiesApi instance = new ProxiesApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tProxies result = instance.listProxies(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ProxiesApi.listProxies\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ProxiesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_proxies(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ProxiesApi.list_proxies: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ProxiesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listProxies(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Proxies"
        ],
        "summary": "Create a Proxy",
        "description": "Create a new proxy. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ProxiesApi.createProxy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ProxiesApi.create_proxy([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ProxiesApi.createProxy([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createProxy",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/proxy"
        },
        "security": [
          {
            "DefaultAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/proxy"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create proxies."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ProxiesApi;\r\nimport com.trendmicro.deepsecurity.model.Proxy;\r\n\r\n\r\npublic class CreateProxyExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tProxiesApi instance = new ProxiesApi();\r\n\t\tProxy proxy = new Proxy();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tProxy result = instance.createProxy(proxy, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ProxiesApi.createProxy\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ProxiesApi(deepsecurity.ApiClient(configuration))\r\nproxy = deepsecurity.Proxy()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_proxy(proxy, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ProxiesApi.create_proxy: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ProxiesApi();\r\nlet proxy = new Deepsecurity.Proxy();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createProxy(proxy, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/proxies/search": {
      "post": {
        "tags": [
          "Proxies"
        ],
        "summary": "Search Proxies",
        "description": "Search for proxies using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ProxiesApi.searchProxies([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ProxiesApi.search_proxies([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ProxiesApi.searchProxies([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchProxies",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "DefaultAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Proxies"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view proxies."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ProxiesApi;\r\nimport com.trendmicro.deepsecurity.model.Proxies;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchProxiesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tProxiesApi instance = new ProxiesApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tProxies result = instance.searchProxies(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ProxiesApi.searchProxies\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ProxiesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_proxies(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ProxiesApi.search_proxies: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ProxiesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchProxies(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/reporttemplates": {
      "get": {
        "tags": [
          "Report Templates"
        ],
        "summary": "List Reports",
        "description": "Lists all report templates. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ReportTemplatesApi.listReportTemplates([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ReportTemplatesApi.list_report_templates([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ReportTemplatesApi.listReportTemplates([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listReportTemplates",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportTemplates"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view report templates."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ReportTemplatesApi;\r\nimport com.trendmicro.deepsecurity.model.ReportTemplates;\r\n\r\n\r\npublic class ListReportTemplatesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tReportTemplatesApi instance = new ReportTemplatesApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tReportTemplates result = instance.listReportTemplates(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ReportTemplatesApi.listReportTemplates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ReportTemplatesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_report_templates(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ReportTemplatesApi.list_report_templates: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ReportTemplatesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listReportTemplates(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/reporttemplates/search": {
      "post": {
        "tags": [
          "Report Templates"
        ],
        "summary": "Search Reports",
        "description": "Search for report templates using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ReportTemplatesApi.searchReportTemplates([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ReportTemplatesApi.search_report_templates([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ReportTemplatesApi.searchReportTemplates([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchReportTemplates",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportTemplates"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view report templates."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ReportTemplatesApi;\r\nimport com.trendmicro.deepsecurity.model.ReportTemplates;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchReportTemplatesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tReportTemplatesApi instance = new ReportTemplatesApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tReportTemplates result = instance.searchReportTemplates(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ReportTemplatesApi.searchReportTemplates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ReportTemplatesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_report_templates(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ReportTemplatesApi.search_report_templates: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ReportTemplatesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchReportTemplates(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/reporttemplates/{reportTemplateID}": {
      "get": {
        "tags": [
          "Report Templates"
        ],
        "summary": "Describe a Report",
        "description": "Describe a report template by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ReportTemplatesApi.describeReportTemplate([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ReportTemplatesApi.describe_report_template([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ReportTemplatesApi.describeReportTemplate([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeReportTemplate",
        "parameters": [
          {
            "name": "reportTemplateID",
            "in": "path",
            "description": "The ID number of the report to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportTemplate"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view report templates."
          },
          "404": {
            "description": "The report template does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ReportTemplatesApi;\r\nimport com.trendmicro.deepsecurity.model.ReportTemplate;\r\n\r\n\r\npublic class DescribeReportTemplateExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tReportTemplatesApi instance = new ReportTemplatesApi();\r\n\t\tInteger reportTemplateID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tReportTemplate result = instance.describeReportTemplate(reportTemplateID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ReportTemplatesApi.describeReportTemplate\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ReportTemplatesApi(deepsecurity.ApiClient(configuration))\r\nreport_template_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_report_template(report_template_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ReportTemplatesApi.describe_report_template: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ReportTemplatesApi();\r\nlet reportTemplateID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeReportTemplate(reportTemplateID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/contexts": {
      "get": {
        "tags": [
          "Contexts"
        ],
        "summary": "List Contexts",
        "description": "Lists all contexts. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContextsApi.listContexts([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContextsApi.list_contexts([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContextsApi.listContexts([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listContexts",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/contexts"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view contexts."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ContextsApi;\r\nimport com.trendmicro.deepsecurity.model.Contexts;\r\n\r\n\r\npublic class ListContextsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tContextsApi instance = new ContextsApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tContexts result = instance.listContexts(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ContextsApi.listContexts\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ContextsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_contexts(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ContextsApi.list_contexts: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ContextsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listContexts(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Contexts"
        ],
        "summary": "Create a Context",
        "description": "Create a new context. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContextsApi.createContext([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContextsApi.create_context([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContextsApi.createContext([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createContext",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/context"
              }
            }
          },
          "description": "The settings of the new context.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/context"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create contexts."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ContextsApi;\r\nimport com.trendmicro.deepsecurity.model.Context;\r\n\r\n\r\npublic class CreateContextExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tContextsApi instance = new ContextsApi();\r\n\t\tContext context = new Context();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tContext result = instance.createContext(context, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ContextsApi.createContext\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ContextsApi(deepsecurity.ApiClient(configuration))\r\ncontext = deepsecurity.Context()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_context(context, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ContextsApi.create_context: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ContextsApi();\r\nlet context = new Deepsecurity.Context();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createContext(context, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/contexts/search": {
      "post": {
        "tags": [
          "Contexts"
        ],
        "summary": "Search Contexts",
        "description": "Search for contexts using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContextsApi.searchContexts([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContextsApi.search_contexts([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContextsApi.searchContexts([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchContexts",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/contexts"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view contexts."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ContextsApi;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\nimport com.trendmicro.deepsecurity.model.Contexts;\r\n\r\n\r\npublic class SearchContextsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tContextsApi instance = new ContextsApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tContexts result = instance.searchContexts(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ContextsApi.searchContexts\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ContextsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_contexts(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ContextsApi.search_contexts: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ContextsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchContexts(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/contexts/{contextID}": {
      "get": {
        "tags": [
          "Contexts"
        ],
        "summary": "Describe a Context",
        "description": "Describe a context by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContextsApi.describeContext([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContextsApi.describe_context([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContextsApi.describeContext([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeContext",
        "parameters": [
          {
            "name": "contextID",
            "in": "path",
            "description": "The ID number of the context to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/context"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view contexts."
          },
          "404": {
            "description": "The context does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ContextsApi;\r\nimport com.trendmicro.deepsecurity.model.Context;\r\n\r\n\r\npublic class DescribeContextExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tContextsApi instance = new ContextsApi();\r\n\t\tInteger contextID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tContext result = instance.describeContext(contextID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ContextsApi.describeContext\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ContextsApi(deepsecurity.ApiClient(configuration))\r\ncontext_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_context(context_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ContextsApi.describe_context: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ContextsApi();\r\nlet contextID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeContext(contextID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Contexts"
        ],
        "summary": "Modify a Context",
        "description": "Modify a context by ID. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContextsApi.modifyContext([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContextsApi.modify_context([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContextsApi.modifyContext([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyContext",
        "parameters": [
          {
            "name": "contextID",
            "in": "path",
            "description": "The ID number of the context to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/context"
              }
            }
          },
          "description": "The settings of the context to modify.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/context"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify contexts or the requested modification is not permitted."
          },
          "404": {
            "description": "The context does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ContextsApi;\r\nimport com.trendmicro.deepsecurity.model.Context;\r\n\r\n\r\npublic class ModifyContextExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tContextsApi instance = new ContextsApi();\r\n\t\tInteger contextID = 1;\r\n\t\tContext context = new Context();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tContext result = instance.modifyContext(contextID, context, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ContextsApi.modifyContext\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ContextsApi(deepsecurity.ApiClient(configuration))\r\ncontext_id = 1\r\ncontext = deepsecurity.Context()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_context(context_id, context, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ContextsApi.modify_context: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ContextsApi();\r\nlet contextID = 1;\r\nlet context = new Deepsecurity.Context();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifyContext(contextID, context, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Contexts"
        ],
        "summary": "Delete a Context",
        "description": "Delete a context by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContextsApi.deleteContext([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContextsApi.delete_context([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ContextsApi.deleteContext([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteContext",
        "parameters": [
          {
            "name": "contextID",
            "in": "path",
            "description": "The ID number of the context to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete contexts."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ContextsApi;\r\n\r\n\r\npublic class DeleteContextExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tContextsApi instance = new ContextsApi();\r\n\t\tInteger contextID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteContext(contextID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ContextsApi.deleteContext\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ContextsApi(deepsecurity.ApiClient(configuration))\r\ncontext_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_context(context_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ContextsApi.delete_context: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ContextsApi();\r\nlet contextID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteContext(contextID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/rulesets": {
      "get": {
        "tags": [
          "Rulesets"
        ],
        "summary": "List Rulesets",
        "description": "Lists all rulesets. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>RulesetsApi.listRulesets([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>RulesetsApi.list_rulesets([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>RulesetsApi.listRulesets([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listRulesets",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rulesets"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view rulesets."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.RulesetsApi;\r\nimport com.trendmicro.deepsecurity.model.Rulesets;\r\n\r\n\r\npublic class ListRulesetsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tRulesetsApi instance = new RulesetsApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tRulesets result = instance.listRulesets(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling RulesetsApi.listRulesets\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.RulesetsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_rulesets(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling RulesetsApi.list_rulesets: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.RulesetsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listRulesets(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Rulesets"
        ],
        "summary": "Create a Shared Ruleset",
        "description": "Create a new shared ruleset. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>RulesetsApi.createRuleset([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>RulesetsApi.create_ruleset([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>RulesetsApi.createRuleset([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createRuleset",
        "parameters": [
          {
            "name": "softwareinventoryid",
            "in": "query",
            "description": "ID of the software inventory to base the ruleset on.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ruleset"
              }
            }
          },
          "description": "The settings of the new ruleset.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ruleset"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create rulesets."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.RulesetsApi;\r\nimport com.trendmicro.deepsecurity.model.Ruleset;\r\n\r\n\r\npublic class CreateRulesetExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tRulesetsApi instance = new RulesetsApi();\r\n\t\tRuleset ruleset = new Ruleset();\r\n\t\tLong softwareinventoryid = 1L;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tRuleset result = instance.createRuleset(ruleset, softwareinventoryid, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling RulesetsApi.createRuleset\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.RulesetsApi(deepsecurity.ApiClient(configuration))\r\nruleset = deepsecurity.Ruleset()\r\nsoftwareinventoryid = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_ruleset(ruleset, softwareinventoryid, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling RulesetsApi.create_ruleset: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.RulesetsApi();\r\nlet ruleset = new Deepsecurity.Ruleset();\r\nlet softwareinventoryid = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createRuleset(ruleset, softwareinventoryid, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/rulesets/{rulesetID}": {
      "get": {
        "tags": [
          "Rulesets"
        ],
        "summary": "Describe a Ruleset",
        "description": "Describe a ruleset by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>RulesetsApi.describeRuleset([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>RulesetsApi.describe_ruleset([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>RulesetsApi.describeRuleset([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeRuleset",
        "parameters": [
          {
            "name": "rulesetID",
            "in": "path",
            "description": "The ID number of the ruleset to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ruleset"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view rulesets."
          },
          "404": {
            "description": "The ruleset does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.RulesetsApi;\r\nimport com.trendmicro.deepsecurity.model.Ruleset;\r\n\r\n\r\npublic class DescribeRulesetExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tRulesetsApi instance = new RulesetsApi();\r\n\t\tLong rulesetID = 1L;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tRuleset result = instance.describeRuleset(rulesetID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling RulesetsApi.describeRuleset\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.RulesetsApi(deepsecurity.ApiClient(configuration))\r\nruleset_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_ruleset(ruleset_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling RulesetsApi.describe_ruleset: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.RulesetsApi();\r\nlet rulesetID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeRuleset(rulesetID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Rulesets"
        ],
        "summary": "Delete a Ruleset",
        "description": "Delete a ruleset by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>RulesetsApi.deleteRuleset([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>RulesetsApi.delete_ruleset([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>RulesetsApi.deleteRuleset([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteRuleset",
        "parameters": [
          {
            "name": "rulesetID",
            "in": "path",
            "description": "The ID number of the ruleset to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "204": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete rulesets."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.RulesetsApi;\r\n\r\n\r\npublic class DeleteRulesetExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tRulesetsApi instance = new RulesetsApi();\r\n\t\tLong rulesetID = 1L;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteRuleset(rulesetID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling RulesetsApi.deleteRuleset\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.RulesetsApi(deepsecurity.ApiClient(configuration))\r\nruleset_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_ruleset(ruleset_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling RulesetsApi.delete_ruleset: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.RulesetsApi();\r\nlet rulesetID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteRuleset(rulesetID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/rulesets/search": {
      "post": {
        "tags": [
          "Rulesets"
        ],
        "summary": "Search Rulesets",
        "description": "Search for rulesets using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>RulesetsApi.searchRulesets([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>RulesetsApi.search_rulesets([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>RulesetsApi.searchRulesets([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchRulesets",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rulesets"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view rulesets."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.RulesetsApi;\r\nimport com.trendmicro.deepsecurity.model.Rulesets;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchRulesetsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tRulesetsApi instance = new RulesetsApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tRulesets result = instance.searchRulesets(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling RulesetsApi.searchRulesets\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.RulesetsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_rulesets(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling RulesetsApi.search_rulesets: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.RulesetsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchRulesets(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/rulesets/{rulesetID}/rules": {
      "get": {
        "tags": [
          "Rulesets"
        ],
        "summary": "List Ruleset Rules",
        "description": "List all rules of a ruleset by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>RulesetsApi.listRulesetRules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>RulesetsApi.list_ruleset_rules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>RulesetsApi.listRulesetRules([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listRulesetRules",
        "parameters": [
          {
            "name": "rulesetID",
            "in": "path",
            "description": "The ID number of the ruleset.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationControlRules"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view rulesets."
          },
          "404": {
            "description": "The ruleset does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.RulesetsApi;\r\nimport com.trendmicro.deepsecurity.model.ApplicationControlRules;\r\n\r\n\r\npublic class ListRulesetRulesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tRulesetsApi instance = new RulesetsApi();\r\n\t\tLong rulesetID = 1L;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApplicationControlRules result = instance.listRulesetRules(rulesetID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling RulesetsApi.listRulesetRules\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.RulesetsApi(deepsecurity.ApiClient(configuration))\r\nruleset_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_ruleset_rules(ruleset_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling RulesetsApi.list_ruleset_rules: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.RulesetsApi();\r\nlet rulesetID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listRulesetRules(rulesetID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/rulesets/{rulesetID}/rules/search": {
      "post": {
        "tags": [
          "Rulesets"
        ],
        "summary": "Search Ruleset Rules",
        "description": "Search for ruleset rules using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>RulesetsApi.searchRulesetRules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>RulesetsApi.search_ruleset_rules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>RulesetsApi.searchRulesetRules([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchRulesetRules",
        "parameters": [
          {
            "name": "rulesetID",
            "in": "path",
            "description": "The ID number of the ruleset.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationControlRules"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view rulesets."
          },
          "404": {
            "description": "The ruleset does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.RulesetsApi;\r\nimport com.trendmicro.deepsecurity.model.ApplicationControlRules;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchRulesetRulesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tRulesetsApi instance = new RulesetsApi();\r\n\t\tLong rulesetID = 1L;\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApplicationControlRules result = instance.searchRulesetRules(rulesetID, searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling RulesetsApi.searchRulesetRules\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.RulesetsApi(deepsecurity.ApiClient(configuration))\r\nruleset_id = 1\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_ruleset_rules(ruleset_id, api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling RulesetsApi.search_ruleset_rules: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.RulesetsApi();\r\nlet rulesetID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchRulesetRules(rulesetID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/rulesets/{rulesetID}/rules/{ruleID}": {
      "get": {
        "tags": [
          "Rulesets"
        ],
        "summary": "Describe a Ruleset Rule",
        "description": "Describe a ruleset rule by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>RulesetsApi.describeRulesetRule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>RulesetsApi.describe_ruleset_rule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>RulesetsApi.describeRulesetRule([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeRulesetRule",
        "parameters": [
          {
            "name": "rulesetID",
            "in": "path",
            "description": "The ID number of the ruleset.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "ruleID",
            "in": "path",
            "description": "The ID number of the rule to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/applicationControlRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view rulesets."
          },
          "404": {
            "description": "The ruleset or the rule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.RulesetsApi;\r\nimport com.trendmicro.deepsecurity.model.ApplicationControlRule;\r\n\r\n\r\npublic class DescribeRulesetRuleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tRulesetsApi instance = new RulesetsApi();\r\n\t\tLong rulesetID = 1L;\r\n\t\tLong ruleID = 1L;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApplicationControlRule result = instance.describeRulesetRule(rulesetID, ruleID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling RulesetsApi.describeRulesetRule\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.RulesetsApi(deepsecurity.ApiClient(configuration))\r\nruleset_id = 1\r\nrule_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_ruleset_rule(ruleset_id, rule_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling RulesetsApi.describe_ruleset_rule: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.RulesetsApi();\r\nlet rulesetID = 1;\r\nlet ruleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeRulesetRule(rulesetID, ruleID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Rulesets"
        ],
        "summary": "Modify a Ruleset Rule",
        "description": "Modify a ruleset rule by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>RulesetsApi.modifyRulesetRule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>RulesetsApi.modify_ruleset_rule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>RulesetsApi.modifyRulesetRule([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyRulesetRule",
        "parameters": [
          {
            "name": "rulesetID",
            "in": "path",
            "description": "The ID number of the ruleset.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "ruleID",
            "in": "path",
            "description": "The ID number of the rule to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/applicationControlRule"
              }
            }
          },
          "description": "The settings of the rule to modify.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/applicationControlRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify rulesets."
          },
          "404": {
            "description": "The ruleset or the rule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.RulesetsApi;\r\nimport com.trendmicro.deepsecurity.model.ApplicationControlRule;\r\n\r\n\r\npublic class ModifyRulesetRuleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tRulesetsApi instance = new RulesetsApi();\r\n\t\tLong rulesetID = 1L;\r\n\t\tLong ruleID = 1L;\r\n\t\tApplicationControlRule rule = new ApplicationControlRule();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApplicationControlRule result = instance.modifyRulesetRule(rulesetID, ruleID, rule, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling RulesetsApi.modifyRulesetRule\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.RulesetsApi(deepsecurity.ApiClient(configuration))\r\nruleset_id = 1\r\nrule_id = 1\r\nrule = deepsecurity.ApplicationControlRule()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_ruleset_rule(ruleset_id, rule_id, rule, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling RulesetsApi.modify_ruleset_rule: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.RulesetsApi();\r\nlet rulesetID = 1;\r\nlet ruleID = 1;\r\nlet rule = new Deepsecurity.ApplicationControlRule();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifyRulesetRule(rulesetID, ruleID, rule, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Rulesets"
        ],
        "summary": "Delete a Ruleset Rule",
        "description": "Delete a ruleset rule by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>RulesetsApi.deleteRulesetRule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>RulesetsApi.delete_ruleset_rule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>RulesetsApi.deleteRulesetRule([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteRulesetRule",
        "parameters": [
          {
            "name": "rulesetID",
            "in": "path",
            "description": "The ID number of the ruleset.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "ruleID",
            "in": "path",
            "description": "The ID number of the rule to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "204": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to modify rulesets."
          },
          "404": {
            "description": "The ruleset or the rule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.RulesetsApi;\r\n\r\n\r\npublic class DeleteRulesetRuleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tRulesetsApi instance = new RulesetsApi();\r\n\t\tLong rulesetID = 1L;\r\n\t\tLong ruleID = 1L;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteRulesetRule(rulesetID, ruleID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling RulesetsApi.deleteRulesetRule\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.RulesetsApi(deepsecurity.ApiClient(configuration))\r\nruleset_id = 1\r\nrule_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_ruleset_rule(ruleset_id, rule_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling RulesetsApi.delete_ruleset_rule: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.RulesetsApi();\r\nlet rulesetID = 1;\r\nlet ruleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteRulesetRule(rulesetID, ruleID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/sap/entitlement": {
      "put": {
        "tags": [
          "Sap Entitlement"
        ],
        "summary": "Create or update SAP entitlement",
        "description": "Create SAP plugin entitlement to the tenant, or update SAP entitlement information if tenant already entitled. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SapEntitlementApi.createOrUpdateSapEntitlement([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SapEntitlementApi.create_or_update_sap_entitlement([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SapEntitlementApi.createOrUpdateSapEntitlement([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createOrUpdateSapEntitlement",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SAP"
              }
            }
          },
          "description": "Tenant SAP entitlement information."
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SAP"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to enable SAP."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SapEntitlementApi;\r\nimport com.trendmicro.deepsecurity.model.SAP;\r\n\r\n\r\npublic class CreateOrUpdateSapEntitlementExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSapEntitlementApi instance = new SapEntitlementApi();\r\n\t\tSAP sapEntitlementInfo = new SAP();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSAP result = instance.createOrUpdateSapEntitlement(sapEntitlementInfo, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SapEntitlementApi.createOrUpdateSapEntitlement\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SapEntitlementApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsap_entitlement_info = deepsecurity.SAP()\r\n\r\ntry:\r\n\tapi_response = api_instance.create_or_update_sap_entitlement(api_version, sap_entitlement_info=sap_entitlement_info)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SapEntitlementApi.create_or_update_sap_entitlement: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SapEntitlementApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  sapEntitlementInfo: new Deepsecurity.SAP(),\r\n};\r\n\r\napiInstance.createOrUpdateSapEntitlement(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/schedules": {
      "get": {
        "tags": [
          "Schedules"
        ],
        "summary": "List Schedules",
        "description": "Lists all schedules. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SchedulesApi.listSchedules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SchedulesApi.list_schedules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SchedulesApi.listSchedules([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listSchedules",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Schedules"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view schedules."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SchedulesApi;\r\nimport com.trendmicro.deepsecurity.model.Schedules;\r\n\r\n\r\npublic class ListSchedulesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSchedulesApi instance = new SchedulesApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSchedules result = instance.listSchedules(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SchedulesApi.listSchedules\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SchedulesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_schedules(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SchedulesApi.list_schedules: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SchedulesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listSchedules(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Schedules"
        ],
        "summary": "Create a Schedule",
        "description": "Create a new schedule. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SchedulesApi.createSchedule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SchedulesApi.create_schedule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SchedulesApi.createSchedule([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createSchedule",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schedule"
              }
            }
          },
          "description": "The settings of the new schedule.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schedule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create schedules."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SchedulesApi;\r\nimport com.trendmicro.deepsecurity.model.Schedule;\r\n\r\n\r\npublic class CreateScheduleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSchedulesApi instance = new SchedulesApi();\r\n\t\tSchedule schedule = new Schedule();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSchedule result = instance.createSchedule(schedule, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SchedulesApi.createSchedule\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SchedulesApi(deepsecurity.ApiClient(configuration))\r\nschedule = deepsecurity.Schedule()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_schedule(schedule, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SchedulesApi.create_schedule: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SchedulesApi();\r\nlet schedule = new Deepsecurity.Schedule();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createSchedule(schedule, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/schedules/{scheduleID}": {
      "get": {
        "tags": [
          "Schedules"
        ],
        "summary": "Describe a Schedule",
        "description": "Describe a schedule by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SchedulesApi.describeSchedule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SchedulesApi.describe_schedule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SchedulesApi.describeSchedule([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeSchedule",
        "parameters": [
          {
            "name": "scheduleID",
            "in": "path",
            "description": "The ID number of the schedule to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schedule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view schedules."
          },
          "404": {
            "description": "The schedule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SchedulesApi;\r\nimport com.trendmicro.deepsecurity.model.Schedule;\r\n\r\n\r\npublic class DescribeScheduleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSchedulesApi instance = new SchedulesApi();\r\n\t\tInteger scheduleID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSchedule result = instance.describeSchedule(scheduleID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SchedulesApi.describeSchedule\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SchedulesApi(deepsecurity.ApiClient(configuration))\r\nschedule_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_schedule(schedule_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SchedulesApi.describe_schedule: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SchedulesApi();\r\nlet scheduleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeSchedule(scheduleID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Schedules"
        ],
        "summary": "Modify a Schedule",
        "description": "Modify a schedule by ID. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SchedulesApi.modifySchedule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SchedulesApi.modify_schedule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SchedulesApi.modifySchedule([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifySchedule",
        "parameters": [
          {
            "name": "scheduleID",
            "in": "path",
            "description": "The ID number of the schedule to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/schedule"
              }
            }
          },
          "description": "The settings of the request schedule to modify.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/schedule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify schedules or the requested modification is not permitted."
          },
          "404": {
            "description": "The schedule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SchedulesApi;\r\nimport com.trendmicro.deepsecurity.model.Schedule;\r\n\r\n\r\npublic class ModifyScheduleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSchedulesApi instance = new SchedulesApi();\r\n\t\tInteger scheduleID = 1;\r\n\t\tSchedule schedule = new Schedule();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSchedule result = instance.modifySchedule(scheduleID, schedule, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SchedulesApi.modifySchedule\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SchedulesApi(deepsecurity.ApiClient(configuration))\r\nschedule_id = 1\r\nschedule = deepsecurity.Schedule()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_schedule(schedule_id, schedule, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SchedulesApi.modify_schedule: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SchedulesApi();\r\nlet scheduleID = 1;\r\nlet schedule = new Deepsecurity.Schedule();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifySchedule(scheduleID, schedule, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Schedules"
        ],
        "summary": "Delete a Schedule",
        "description": "Delete a schedule by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SchedulesApi.deleteSchedule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SchedulesApi.delete_schedule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SchedulesApi.deleteSchedule([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteSchedule",
        "parameters": [
          {
            "name": "scheduleID",
            "in": "path",
            "description": "The ID number of the schedule to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete schedules."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SchedulesApi;\r\n\r\n\r\npublic class DeleteScheduleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSchedulesApi instance = new SchedulesApi();\r\n\t\tInteger scheduleID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteSchedule(scheduleID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SchedulesApi.deleteSchedule\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SchedulesApi(deepsecurity.ApiClient(configuration))\r\nschedule_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_schedule(schedule_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SchedulesApi.delete_schedule: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SchedulesApi();\r\nlet scheduleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteSchedule(scheduleID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/schedules/search": {
      "post": {
        "tags": [
          "Schedules"
        ],
        "summary": "Search Schedules",
        "description": "Search for schedules using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SchedulesApi.searchSchedules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SchedulesApi.search_schedules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SchedulesApi.searchSchedules([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchSchedules",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Schedules"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view schedules."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SchedulesApi;\r\nimport com.trendmicro.deepsecurity.model.Schedules;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchSchedulesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSchedulesApi instance = new SchedulesApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSchedules result = instance.searchSchedules(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SchedulesApi.searchSchedules\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SchedulesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_schedules(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SchedulesApi.search_schedules: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SchedulesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchSchedules(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/scheduledtasks": {
      "get": {
        "tags": [
          "Scheduled Tasks"
        ],
        "summary": "List Scheduled Tasks",
        "description": "Lists all scheduled tasks. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ScheduledTasksApi.listScheduledTasks([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ScheduledTasksApi.list_scheduled_tasks([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ScheduledTasksApi.listScheduledTasks([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listScheduledTasks",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledTasks"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view scheduled tasks."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ScheduledTasksApi;\r\nimport com.trendmicro.deepsecurity.model.ScheduledTasks;\r\n\r\n\r\npublic class ListScheduledTasksExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tScheduledTasksApi instance = new ScheduledTasksApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tScheduledTasks result = instance.listScheduledTasks(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ScheduledTasksApi.listScheduledTasks\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ScheduledTasksApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_scheduled_tasks(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ScheduledTasksApi.list_scheduled_tasks: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ScheduledTasksApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listScheduledTasks(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Scheduled Tasks"
        ],
        "summary": "Create a Scheduled Task",
        "description": "Create a new scheduled task. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ScheduledTasksApi.createScheduledTask([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ScheduledTasksApi.create_scheduled_task([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ScheduledTasksApi.createScheduledTask([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createScheduledTask",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledTask"
              }
            }
          },
          "description": "The settings of the new scheduled task.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledTask"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create scheduled tasks."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ScheduledTasksApi;\r\nimport com.trendmicro.deepsecurity.model.ScheduledTask;\r\n\r\n\r\npublic class CreateScheduledTaskExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tScheduledTasksApi instance = new ScheduledTasksApi();\r\n\t\tScheduledTask scheduledTask = new ScheduledTask();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tScheduledTask result = instance.createScheduledTask(scheduledTask, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ScheduledTasksApi.createScheduledTask\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ScheduledTasksApi(deepsecurity.ApiClient(configuration))\r\nscheduled_task = deepsecurity.ScheduledTask()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_scheduled_task(scheduled_task, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ScheduledTasksApi.create_scheduled_task: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ScheduledTasksApi();\r\nlet scheduledTask = new Deepsecurity.ScheduledTask();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createScheduledTask(scheduledTask, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/scheduledtasks/{scheduledTaskID}": {
      "get": {
        "tags": [
          "Scheduled Tasks"
        ],
        "summary": "Describe a Scheduled Task",
        "description": "Describe a scheduled task by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ScheduledTasksApi.describeScheduledTask([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ScheduledTasksApi.describe_scheduled_task([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ScheduledTasksApi.describeScheduledTask([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeScheduledTask",
        "parameters": [
          {
            "name": "scheduledTaskID",
            "in": "path",
            "description": "The ID number of the scheduled task to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledTask"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view scheduled tasks."
          },
          "404": {
            "description": "The scheduled task does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ScheduledTasksApi;\r\nimport com.trendmicro.deepsecurity.model.ScheduledTask;\r\n\r\n\r\npublic class DescribeScheduledTaskExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tScheduledTasksApi instance = new ScheduledTasksApi();\r\n\t\tInteger scheduledTaskID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tScheduledTask result = instance.describeScheduledTask(scheduledTaskID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ScheduledTasksApi.describeScheduledTask\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ScheduledTasksApi(deepsecurity.ApiClient(configuration))\r\nscheduled_task_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_scheduled_task(scheduled_task_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ScheduledTasksApi.describe_scheduled_task: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ScheduledTasksApi();\r\nlet scheduledTaskID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeScheduledTask(scheduledTaskID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Scheduled Tasks"
        ],
        "summary": "Modify a Scheduled Task",
        "description": "Modify a scheduled task by ID. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ScheduledTasksApi.modifyScheduledTask([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ScheduledTasksApi.modify_scheduled_task([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ScheduledTasksApi.modifyScheduledTask([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyScheduledTask",
        "parameters": [
          {
            "name": "scheduledTaskID",
            "in": "path",
            "description": "The ID number of the scheduled task to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduledTask"
              }
            }
          },
          "description": "The settings of the scheduled task to modify.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledTask"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify scheduled tasks or the requested modification is not permitted."
          },
          "404": {
            "description": "The scheduled task does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ScheduledTasksApi;\r\nimport com.trendmicro.deepsecurity.model.ScheduledTask;\r\n\r\n\r\npublic class ModifyScheduledTaskExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tScheduledTasksApi instance = new ScheduledTasksApi();\r\n\t\tInteger scheduledTaskID = 1;\r\n\t\tScheduledTask scheduledTask = new ScheduledTask();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tScheduledTask result = instance.modifyScheduledTask(scheduledTaskID, scheduledTask, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ScheduledTasksApi.modifyScheduledTask\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ScheduledTasksApi(deepsecurity.ApiClient(configuration))\r\nscheduled_task_id = 1\r\nscheduled_task = deepsecurity.ScheduledTask()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_scheduled_task(scheduled_task_id, scheduled_task, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ScheduledTasksApi.modify_scheduled_task: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ScheduledTasksApi();\r\nlet scheduledTaskID = 1;\r\nlet scheduledTask = new Deepsecurity.ScheduledTask();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifyScheduledTask(scheduledTaskID, scheduledTask, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Scheduled Tasks"
        ],
        "summary": "Delete a Scheduled Task",
        "description": "Delete a scheduled task by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ScheduledTasksApi.deleteScheduledTask([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ScheduledTasksApi.delete_scheduled_task([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ScheduledTasksApi.deleteScheduledTask([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteScheduledTask",
        "parameters": [
          {
            "name": "scheduledTaskID",
            "in": "path",
            "description": "The ID number of the scheduled task to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete scheduled tasks."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ScheduledTasksApi;\r\n\r\n\r\npublic class DeleteScheduledTaskExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tScheduledTasksApi instance = new ScheduledTasksApi();\r\n\t\tInteger scheduledTaskID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteScheduledTask(scheduledTaskID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ScheduledTasksApi.deleteScheduledTask\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ScheduledTasksApi(deepsecurity.ApiClient(configuration))\r\nscheduled_task_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_scheduled_task(scheduled_task_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ScheduledTasksApi.delete_scheduled_task: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ScheduledTasksApi();\r\nlet scheduledTaskID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteScheduledTask(scheduledTaskID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/scheduledtasks/search": {
      "post": {
        "tags": [
          "Scheduled Tasks"
        ],
        "summary": "Search Scheduled Tasks",
        "description": "Search for scheduled tasks using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ScheduledTasksApi.searchScheduledTasks([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ScheduledTasksApi.search_scheduled_tasks([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>ScheduledTasksApi.searchScheduledTasks([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchScheduledTasks",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduledTasks"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view scheduled tasks."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.ScheduledTasksApi;\r\nimport com.trendmicro.deepsecurity.model.ScheduledTasks;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchScheduledTasksExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tScheduledTasksApi instance = new ScheduledTasksApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tScheduledTasks result = instance.searchScheduledTasks(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ScheduledTasksApi.searchScheduledTasks\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.ScheduledTasksApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_scheduled_tasks(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling ScheduledTasksApi.search_scheduled_tasks: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.ScheduledTasksApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchScheduledTasks(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/systemsettings": {
      "get": {
        "tags": [
          "System Settings"
        ],
        "summary": "List System Settings",
        "description": "Lists all system settings. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SystemSettingsApi.listSystemSettings([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SystemSettingsApi.list_system_settings([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SystemSettingsApi.listSystemSettings([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listSystemSettings",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemSettings"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view directory lists."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SystemSettingsApi;\r\nimport com.trendmicro.deepsecurity.model.SystemSettings;\r\n\r\n\r\npublic class ListSystemSettingsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSystemSettingsApi instance = new SystemSettingsApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSystemSettings result = instance.listSystemSettings(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SystemSettingsApi.listSystemSettings\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SystemSettingsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_system_settings(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SystemSettingsApi.list_system_settings: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SystemSettingsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listSystemSettings(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "System Settings"
        ],
        "summary": "Modify System Settings",
        "description": "Modify the system settings. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SystemSettingsApi.modifySystemSettings([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SystemSettingsApi.modify_system_settings([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SystemSettingsApi.modifySystemSettings([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifySystemSettings",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SystemSettings"
              }
            }
          },
          "description": "The system settings to modify.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemSettings"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view directory lists."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SystemSettingsApi;\r\nimport com.trendmicro.deepsecurity.model.SystemSettings;\r\n\r\n\r\npublic class ModifySystemSettingsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSystemSettingsApi instance = new SystemSettingsApi();\r\n\t\tSystemSettings systemSettings = new SystemSettings();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSystemSettings result = instance.modifySystemSettings(systemSettings, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SystemSettingsApi.modifySystemSettings\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SystemSettingsApi(deepsecurity.ApiClient(configuration))\r\nsystem_settings = deepsecurity.SystemSettings()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_system_settings(system_settings, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SystemSettingsApi.modify_system_settings: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SystemSettingsApi();\r\nlet systemSettings = new Deepsecurity.SystemSettings();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifySystemSettings(systemSettings, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/systemsettings/{name}": {
      "get": {
        "tags": [
          "System Settings"
        ],
        "summary": "Describe a System Setting",
        "description": "Return the value for a system setting. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SystemSettingsApi.describeSystemSetting([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SystemSettingsApi.describe_system_setting([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SystemSettingsApi.describeSystemSetting([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeSystemSetting",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name of the system setting.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingValue"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view settings."
          },
          "404": {
            "description": "The setting does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SystemSettingsApi;\r\nimport com.trendmicro.deepsecurity.model.SettingValue;\r\n\r\n\r\npublic class DescribeSystemSettingExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSystemSettingsApi instance = new SystemSettingsApi();\r\n\t\tString name = \"name_example\";\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSettingValue result = instance.describeSystemSetting(name, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SystemSettingsApi.describeSystemSetting\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SystemSettingsApi(deepsecurity.ApiClient(configuration))\r\nname = 'name_example'\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_system_setting(name, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SystemSettingsApi.describe_system_setting: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SystemSettingsApi();\r\nlet name = \"name_example\";\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeSystemSetting(name, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "System Settings"
        ],
        "summary": "Modify a System Setting",
        "description": "Modify the value for a system setting. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SystemSettingsApi.modifySystemSetting([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SystemSettingsApi.modify_system_setting([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SystemSettingsApi.modifySystemSetting([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifySystemSetting",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name of the setting.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettingValue"
              }
            }
          },
          "description": "The new value for the setting setting.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingValue"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify settings or the requested modification is not permitted."
          },
          "404": {
            "description": "The setting does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SystemSettingsApi;\r\nimport com.trendmicro.deepsecurity.model.SettingValue;\r\n\r\n\r\npublic class ModifySystemSettingExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSystemSettingsApi instance = new SystemSettingsApi();\r\n\t\tString name = \"name_example\";\r\n\t\tSettingValue value = new SettingValue();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSettingValue result = instance.modifySystemSetting(name, value, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SystemSettingsApi.modifySystemSetting\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SystemSettingsApi(deepsecurity.ApiClient(configuration))\r\nname = 'name_example'\r\nvalue = deepsecurity.SettingValue()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_system_setting(name, value, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SystemSettingsApi.modify_system_setting: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SystemSettingsApi();\r\nlet name = \"name_example\";\r\nlet value = new Deepsecurity.SettingValue();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifySystemSetting(name, value, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "System Settings"
        ],
        "summary": "Reset a System Setting",
        "description": "Reset the value for a system setting. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SystemSettingsApi.resetSystemSetting([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SystemSettingsApi.reset_system_setting([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SystemSettingsApi.resetSystemSetting([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "resetSystemSetting",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "The name of the system setting.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingValue"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify settings or the requested modification is not permitted."
          },
          "404": {
            "description": "The setting does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SystemSettingsApi;\r\nimport com.trendmicro.deepsecurity.model.SettingValue;\r\n\r\n\r\npublic class ResetSystemSettingExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSystemSettingsApi instance = new SystemSettingsApi();\r\n\t\tString name = \"name_example\";\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSettingValue result = instance.resetSystemSetting(name, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SystemSettingsApi.resetSystemSetting\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SystemSettingsApi(deepsecurity.ApiClient(configuration))\r\nname = 'name_example'\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.reset_system_setting(name, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SystemSettingsApi.reset_system_setting: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SystemSettingsApi();\r\nlet name = \"name_example\";\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.resetSystemSetting(name, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/smartfolders": {
      "get": {
        "tags": [
          "Smart Folders"
        ],
        "summary": "List Smart Folders",
        "description": "Lists all smart folders. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SmartFoldersApi.listSmartFolders([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SmartFoldersApi.list_smart_folders([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SmartFoldersApi.listSmartFolders([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listSmartFolders",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "DefaultAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmartFolders"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view smart folders."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SmartFoldersApi;\r\nimport com.trendmicro.deepsecurity.model.SmartFolders;\r\n\r\n\r\npublic class ListSmartFoldersExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSmartFoldersApi instance = new SmartFoldersApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSmartFolders result = instance.listSmartFolders(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SmartFoldersApi.listSmartFolders\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SmartFoldersApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_smart_folders(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SmartFoldersApi.list_smart_folders: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SmartFoldersApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listSmartFolders(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Smart Folders"
        ],
        "summary": "Create a Smart Folder",
        "description": "Create a smart folder. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SmartFoldersApi.createSmartFolder([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SmartFoldersApi.create_smart_folder([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SmartFoldersApi.createSmartFolder([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createSmartFolder",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/smartFolder"
        },
        "security": [
          {
            "DefaultAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/smartFolder"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create smart folders."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SmartFoldersApi;\r\nimport com.trendmicro.deepsecurity.model.SmartFolder;\r\n\r\n\r\npublic class CreateSmartFolderExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSmartFoldersApi instance = new SmartFoldersApi();\r\n\t\tSmartFolder smartFolder = new SmartFolder();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSmartFolder result = instance.createSmartFolder(smartFolder, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SmartFoldersApi.createSmartFolder\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SmartFoldersApi(deepsecurity.ApiClient(configuration))\r\nsmart_folder = deepsecurity.SmartFolder()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_smart_folder(smart_folder, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SmartFoldersApi.create_smart_folder: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SmartFoldersApi();\r\nlet smartFolder = new Deepsecurity.SmartFolder();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createSmartFolder(smartFolder, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/smartfolders/{smartFolderID}": {
      "get": {
        "tags": [
          "Smart Folders"
        ],
        "summary": "Describe a Smart Folder",
        "description": "Describe a smart folder by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SmartFoldersApi.describeSmartFolder([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SmartFoldersApi.describe_smart_folder([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SmartFoldersApi.describeSmartFolder([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeSmartFolder",
        "parameters": [
          {
            "name": "smartFolderID",
            "in": "path",
            "description": "The ID number of the smart folder to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "DefaultAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/smartFolder"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view smart folders."
          },
          "404": {
            "description": "The smart folder does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SmartFoldersApi;\r\nimport com.trendmicro.deepsecurity.model.SmartFolder;\r\n\r\n\r\npublic class DescribeSmartFolderExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSmartFoldersApi instance = new SmartFoldersApi();\r\n\t\tLong smartFolderID = 1L;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSmartFolder result = instance.describeSmartFolder(smartFolderID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SmartFoldersApi.describeSmartFolder\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SmartFoldersApi(deepsecurity.ApiClient(configuration))\r\nsmart_folder_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_smart_folder(smart_folder_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SmartFoldersApi.describe_smart_folder: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SmartFoldersApi();\r\nlet smartFolderID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeSmartFolder(smartFolderID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Smart Folders"
        ],
        "summary": "Modify a Smart Folder",
        "description": "Modify a smart folder by ID. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SmartFoldersApi.modifySmartFolder([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SmartFoldersApi.modify_smart_folder([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SmartFoldersApi.modifySmartFolder([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifySmartFolder",
        "parameters": [
          {
            "name": "smartFolderID",
            "in": "path",
            "description": "The ID number of the smart folder to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/smartFolder"
        },
        "security": [
          {
            "DefaultAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/smartFolder"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify smart folders."
          },
          "404": {
            "description": "The smart folder does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SmartFoldersApi;\r\nimport com.trendmicro.deepsecurity.model.SmartFolder;\r\n\r\n\r\npublic class ModifySmartFolderExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSmartFoldersApi instance = new SmartFoldersApi();\r\n\t\tLong smartFolderID = 1L;\r\n\t\tSmartFolder smartFolder = new SmartFolder();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSmartFolder result = instance.modifySmartFolder(smartFolderID, smartFolder, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SmartFoldersApi.modifySmartFolder\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SmartFoldersApi(deepsecurity.ApiClient(configuration))\r\nsmart_folder_id = 1\r\nsmart_folder = deepsecurity.SmartFolder()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_smart_folder(smart_folder_id, smart_folder, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SmartFoldersApi.modify_smart_folder: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SmartFoldersApi();\r\nlet smartFolderID = 1;\r\nlet smartFolder = new Deepsecurity.SmartFolder();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifySmartFolder(smartFolderID, smartFolder, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Smart Folders"
        ],
        "summary": "Delete a Smart Folder",
        "description": "Delete a smart folder by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SmartFoldersApi.deleteSmartFolder([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SmartFoldersApi.delete_smart_folder([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SmartFoldersApi.deleteSmartFolder([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteSmartFolder",
        "parameters": [
          {
            "name": "smartFolderID",
            "in": "path",
            "description": "The ID number of the smart folder to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "DefaultAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "204": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete smart folders."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SmartFoldersApi;\r\n\r\n\r\npublic class DeleteSmartFolderExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSmartFoldersApi instance = new SmartFoldersApi();\r\n\t\tLong smartFolderID = 1L;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteSmartFolder(smartFolderID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SmartFoldersApi.deleteSmartFolder\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SmartFoldersApi(deepsecurity.ApiClient(configuration))\r\nsmart_folder_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_smart_folder(smart_folder_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SmartFoldersApi.delete_smart_folder: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SmartFoldersApi();\r\nlet smartFolderID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteSmartFolder(smartFolderID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/smartfolders/search": {
      "post": {
        "tags": [
          "Smart Folders"
        ],
        "summary": "Search Smart Folders",
        "description": "Search for smart folders using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SmartFoldersApi.searchSmartFolders([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SmartFoldersApi.search_smart_folders([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SmartFoldersApi.searchSmartFolders([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchSmartFolders",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "DefaultAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmartFolders"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view smart folders."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SmartFoldersApi;\r\nimport com.trendmicro.deepsecurity.model.SmartFolders;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchSmartFoldersExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSmartFoldersApi instance = new SmartFoldersApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSmartFolders result = instance.searchSmartFolders(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SmartFoldersApi.searchSmartFolders\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SmartFoldersApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_smart_folders(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SmartFoldersApi.search_smart_folders: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SmartFoldersApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchSmartFolders(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/softwarechanges": {
      "get": {
        "tags": [
          "Software Changes"
        ],
        "summary": "List software changes",
        "description": "Lists all software changes. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareChangesApi.listSoftwareChanges([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareChangesApi.list_software_changes([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareChangesApi.listSoftwareChanges([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listSoftwareChanges",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareChanges"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view software changes."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SoftwareChangesApi;\r\nimport com.trendmicro.deepsecurity.model.SoftwareChanges;\r\n\r\n\r\npublic class ListSoftwareChangesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSoftwareChangesApi instance = new SoftwareChangesApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSoftwareChanges result = instance.listSoftwareChanges(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SoftwareChangesApi.listSoftwareChanges\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SoftwareChangesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_software_changes(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SoftwareChangesApi.list_software_changes: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SoftwareChangesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listSoftwareChanges(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/softwarechanges/search": {
      "post": {
        "tags": [
          "Software Changes"
        ],
        "summary": "Search software changes",
        "description": "Search for software changes using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareChangesApi.searchSoftwareChanges([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareChangesApi.search_software_changes([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareChangesApi.searchSoftwareChanges([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchSoftwareChanges",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SoftwareChanges"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view software changes."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SoftwareChangesApi;\r\nimport com.trendmicro.deepsecurity.model.SoftwareChanges;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchSoftwareChangesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSoftwareChangesApi instance = new SoftwareChangesApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSoftwareChanges result = instance.searchSoftwareChanges(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SoftwareChangesApi.searchSoftwareChanges\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SoftwareChangesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_software_changes(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SoftwareChangesApi.search_software_changes: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SoftwareChangesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchSoftwareChanges(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/softwarechanges/{softwareChangeID}": {
      "get": {
        "tags": [
          "Software Changes"
        ],
        "summary": "Describe a software change",
        "description": "Describe a software change by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareChangesApi.describeSoftwareChange([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareChangesApi.describe_software_change([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareChangesApi.describeSoftwareChange([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeSoftwareChange",
        "parameters": [
          {
            "name": "softwareChangeID",
            "in": "path",
            "description": "The ID number of the software change to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/softwareChange"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view software changes."
          },
          "404": {
            "description": "The software change does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SoftwareChangesApi;\r\nimport com.trendmicro.deepsecurity.model.SoftwareChange;\r\n\r\n\r\npublic class DescribeSoftwareChangeExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSoftwareChangesApi instance = new SoftwareChangesApi();\r\n\t\tLong softwareChangeID = 1L;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSoftwareChange result = instance.describeSoftwareChange(softwareChangeID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SoftwareChangesApi.describeSoftwareChange\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SoftwareChangesApi(deepsecurity.ApiClient(configuration))\r\nsoftware_change_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_software_change(software_change_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SoftwareChangesApi.describe_software_change: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SoftwareChangesApi();\r\nlet softwareChangeID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeSoftwareChange(softwareChangeID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/softwarechanges/review": {
      "post": {
        "tags": [
          "Software Changes"
        ],
        "summary": "Review software changes",
        "description": "Review software changes by given ID list. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareChangesApi.reviewSoftwareChanges([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareChangesApi.review_software_changes([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareChangesApi.reviewSoftwareChanges([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "reviewSoftwareChanges",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/softwareChangeReview"
              }
            }
          },
          "description": "The software change review settings.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/softwareChangeReview"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to delete software changes."
          },
          "404": {
            "description": "Software changes do not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SoftwareChangesApi;\r\nimport com.trendmicro.deepsecurity.model.SoftwareChangeReview;\r\n\r\n\r\npublic class ReviewSoftwareChangesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSoftwareChangesApi instance = new SoftwareChangesApi();\r\n\t\tSoftwareChangeReview softwareChangeReview = new SoftwareChangeReview();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSoftwareChangeReview result = instance.reviewSoftwareChanges(softwareChangeReview, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SoftwareChangesApi.reviewSoftwareChanges\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SoftwareChangesApi(deepsecurity.ApiClient(configuration))\r\nsoftware_change_review = deepsecurity.SoftwareChangeReview()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.review_software_changes(software_change_review, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SoftwareChangesApi.review_software_changes: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SoftwareChangesApi();\r\nlet softwareChangeReview = new Deepsecurity.SoftwareChangeReview();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.reviewSoftwareChanges(softwareChangeReview, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/softwareinventories": {
      "get": {
        "tags": [
          "Software Inventories"
        ],
        "summary": "List Software Inventories",
        "description": "Lists all software inventories. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareInventoriesApi.listSoftwareInventories([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareInventoriesApi.list_software_inventories([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareInventoriesApi.listSoftwareInventories([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listSoftwareInventories",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/softwareInventories"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view software inventories."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SoftwareInventoriesApi;\r\nimport com.trendmicro.deepsecurity.model.SoftwareInventories;\r\n\r\n\r\npublic class ListSoftwareInventoriesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSoftwareInventoriesApi instance = new SoftwareInventoriesApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSoftwareInventories result = instance.listSoftwareInventories(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SoftwareInventoriesApi.listSoftwareInventories\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SoftwareInventoriesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_software_inventories(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SoftwareInventoriesApi.list_software_inventories: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SoftwareInventoriesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listSoftwareInventories(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Software Inventories"
        ],
        "summary": "Create a Software Inventory",
        "description": "Request the creation of a new software inventory to use in creating shared rulesets. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareInventoriesApi.createSoftwareInventory([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareInventoriesApi.create_software_inventory([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareInventoriesApi.createSoftwareInventory([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createSoftwareInventory",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/softwareInventory"
              }
            }
          },
          "description": "The settings of the new software inventory.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/softwareInventory"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create software inventories."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SoftwareInventoriesApi;\r\nimport com.trendmicro.deepsecurity.model.SoftwareInventory;\r\n\r\n\r\npublic class CreateSoftwareInventoryExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSoftwareInventoriesApi instance = new SoftwareInventoriesApi();\r\n\t\tSoftwareInventory softwareInventory = new SoftwareInventory();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSoftwareInventory result = instance.createSoftwareInventory(softwareInventory, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SoftwareInventoriesApi.createSoftwareInventory\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SoftwareInventoriesApi(deepsecurity.ApiClient(configuration))\r\nsoftware_inventory = deepsecurity.SoftwareInventory()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_software_inventory(software_inventory, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SoftwareInventoriesApi.create_software_inventory: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SoftwareInventoriesApi();\r\nlet softwareInventory = new Deepsecurity.SoftwareInventory();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createSoftwareInventory(softwareInventory, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/softwareinventories/search": {
      "post": {
        "tags": [
          "Software Inventories"
        ],
        "summary": "Search Software Inventories",
        "description": "Search for a software inventory using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareInventoriesApi.searchSoftwareInventories([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareInventoriesApi.search_software_inventories([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareInventoriesApi.searchSoftwareInventories([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchSoftwareInventories",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/softwareInventories"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view software inventories."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SoftwareInventoriesApi;\r\nimport com.trendmicro.deepsecurity.model.SoftwareInventories;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchSoftwareInventoriesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSoftwareInventoriesApi instance = new SoftwareInventoriesApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSoftwareInventories result = instance.searchSoftwareInventories(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SoftwareInventoriesApi.searchSoftwareInventories\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SoftwareInventoriesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_software_inventories(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SoftwareInventoriesApi.search_software_inventories: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SoftwareInventoriesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchSoftwareInventories(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/softwareinventories/{softwareInventoryID}": {
      "get": {
        "tags": [
          "Software Inventories"
        ],
        "summary": "Describe a Software Inventory",
        "description": "Describe a software inventory by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareInventoriesApi.describeSoftwareInventory([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareInventoriesApi.describe_software_inventory([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareInventoriesApi.describeSoftwareInventory([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeSoftwareInventory",
        "parameters": [
          {
            "name": "softwareInventoryID",
            "in": "path",
            "description": "The ID number of the software inventory to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/softwareInventory"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view software inventories."
          },
          "404": {
            "description": "The software inventory does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SoftwareInventoriesApi;\r\nimport com.trendmicro.deepsecurity.model.SoftwareInventory;\r\n\r\n\r\npublic class DescribeSoftwareInventoryExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSoftwareInventoriesApi instance = new SoftwareInventoriesApi();\r\n\t\tLong softwareInventoryID = 1L;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSoftwareInventory result = instance.describeSoftwareInventory(softwareInventoryID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SoftwareInventoriesApi.describeSoftwareInventory\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SoftwareInventoriesApi(deepsecurity.ApiClient(configuration))\r\nsoftware_inventory_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_software_inventory(software_inventory_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SoftwareInventoriesApi.describe_software_inventory: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SoftwareInventoriesApi();\r\nlet softwareInventoryID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeSoftwareInventory(softwareInventoryID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Software Inventories"
        ],
        "summary": "Delete a Software Inventory",
        "description": "Delete a software inventory by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareInventoriesApi.deleteSoftwareInventory([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareInventoriesApi.delete_software_inventory([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareInventoriesApi.deleteSoftwareInventory([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteSoftwareInventory",
        "parameters": [
          {
            "name": "softwareInventoryID",
            "in": "path",
            "description": "The ID number of the software inventory to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "204": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete software inventories."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SoftwareInventoriesApi;\r\n\r\n\r\npublic class DeleteSoftwareInventoryExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSoftwareInventoriesApi instance = new SoftwareInventoriesApi();\r\n\t\tLong softwareInventoryID = 1L;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteSoftwareInventory(softwareInventoryID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SoftwareInventoriesApi.deleteSoftwareInventory\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SoftwareInventoriesApi(deepsecurity.ApiClient(configuration))\r\nsoftware_inventory_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_software_inventory(software_inventory_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SoftwareInventoriesApi.delete_software_inventory: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SoftwareInventoriesApi();\r\nlet softwareInventoryID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteSoftwareInventory(softwareInventoryID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/softwareinventories/{softwareInventoryID}/items": {
      "get": {
        "tags": [
          "Software Inventories"
        ],
        "summary": "List Software Inventory Items",
        "description": "Lists all items of a software inventory. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareInventoriesApi.listSoftwareInventoryItems([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareInventoriesApi.list_software_inventory_items([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareInventoriesApi.listSoftwareInventoryItems([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listSoftwareInventoryItems",
        "parameters": [
          {
            "name": "softwareInventoryID",
            "in": "path",
            "description": "The ID number of the software inventory.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventoryItems"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the software inventory."
          },
          "404": {
            "description": "The software inventory does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SoftwareInventoriesApi;\r\nimport com.trendmicro.deepsecurity.model.InventoryItems;\r\n\r\n\r\npublic class ListSoftwareInventoryItemsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSoftwareInventoriesApi instance = new SoftwareInventoriesApi();\r\n\t\tLong softwareInventoryID = 1L;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tInventoryItems result = instance.listSoftwareInventoryItems(softwareInventoryID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SoftwareInventoriesApi.listSoftwareInventoryItems\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SoftwareInventoriesApi(deepsecurity.ApiClient(configuration))\r\nsoftware_inventory_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_software_inventory_items(software_inventory_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SoftwareInventoriesApi.list_software_inventory_items: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SoftwareInventoriesApi();\r\nlet softwareInventoryID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listSoftwareInventoryItems(softwareInventoryID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/softwareinventories/{softwareInventoryID}/items/search": {
      "post": {
        "tags": [
          "Software Inventories"
        ],
        "summary": "Search Software Inventory Items",
        "description": "Search for items of a software inventory using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareInventoriesApi.searchSoftwareInventoryItems([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareInventoriesApi.search_software_inventory_items([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareInventoriesApi.searchSoftwareInventoryItems([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchSoftwareInventoryItems",
        "parameters": [
          {
            "name": "softwareInventoryID",
            "in": "path",
            "description": "The ID number of the software inventory.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventoryItems"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the software inventory."
          },
          "404": {
            "description": "The software inventory does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SoftwareInventoriesApi;\r\nimport com.trendmicro.deepsecurity.model.InventoryItems;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchSoftwareInventoryItemsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSoftwareInventoriesApi instance = new SoftwareInventoriesApi();\r\n\t\tLong softwareInventoryID = 1L;\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tInventoryItems result = instance.searchSoftwareInventoryItems(softwareInventoryID, searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SoftwareInventoriesApi.searchSoftwareInventoryItems\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SoftwareInventoriesApi(deepsecurity.ApiClient(configuration))\r\nsoftware_inventory_id = 1\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_software_inventory_items(software_inventory_id, api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SoftwareInventoriesApi.search_software_inventory_items: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SoftwareInventoriesApi();\r\nlet softwareInventoryID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchSoftwareInventoryItems(softwareInventoryID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/softwareinventories/{softwareInventoryID}/items/{inventoryItemID}": {
      "get": {
        "tags": [
          "Software Inventories"
        ],
        "summary": "Describe a Software Inventory Item",
        "description": "Describe a software inventory item by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareInventoriesApi.describeSoftwareInventoryItem([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareInventoriesApi.describe_software_inventory_item([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SoftwareInventoriesApi.describeSoftwareInventoryItem([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeSoftwareInventoryItem",
        "parameters": [
          {
            "name": "softwareInventoryID",
            "in": "path",
            "description": "The ID number of the software inventory.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "inventoryItemID",
            "in": "path",
            "description": "The ID number of the inventory item to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inventoryItem"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the software inventory."
          },
          "404": {
            "description": "The inventory item does not exist or the software inventory does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SoftwareInventoriesApi;\r\nimport com.trendmicro.deepsecurity.model.InventoryItem;\r\n\r\n\r\npublic class DescribeSoftwareInventoryItemExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSoftwareInventoriesApi instance = new SoftwareInventoriesApi();\r\n\t\tLong softwareInventoryID = 1L;\r\n\t\tLong inventoryItemID = 1L;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tInventoryItem result = instance.describeSoftwareInventoryItem(softwareInventoryID, inventoryItemID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SoftwareInventoriesApi.describeSoftwareInventoryItem\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SoftwareInventoriesApi(deepsecurity.ApiClient(configuration))\r\nsoftware_inventory_id = 1\r\ninventory_item_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_software_inventory_item(software_inventory_id, inventory_item_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SoftwareInventoriesApi.describe_software_inventory_item: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SoftwareInventoriesApi();\r\nlet softwareInventoryID = 1;\r\nlet inventoryItemID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeSoftwareInventoryItem(softwareInventoryID, inventoryItemID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/statefulconfigurations/{statefulConfigurationID}": {
      "get": {
        "tags": [
          "Stateful Configurations"
        ],
        "summary": "Describe a Stateful Configuration",
        "description": "Describe a stateful configuration by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>StatefulConfigurationsApi.describeStatefulConfiguration([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>StatefulConfigurationsApi.describe_stateful_configuration([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>StatefulConfigurationsApi.describeStatefulConfiguration([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeStatefulConfiguration",
        "parameters": [
          {
            "name": "statefulConfigurationID",
            "in": "path",
            "description": "The ID number of the stateful configuration to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statefulConfiguration"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view stateful configurations."
          },
          "404": {
            "description": "The stateful configuration does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.StatefulConfigurationsApi;\r\nimport com.trendmicro.deepsecurity.model.StatefulConfiguration;\r\n\r\n\r\npublic class DescribeStatefulConfigurationExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tStatefulConfigurationsApi instance = new StatefulConfigurationsApi();\r\n\t\tInteger statefulConfigurationID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tStatefulConfiguration result = instance.describeStatefulConfiguration(statefulConfigurationID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling StatefulConfigurationsApi.describeStatefulConfiguration\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.StatefulConfigurationsApi(deepsecurity.ApiClient(configuration))\r\nstateful_configuration_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_stateful_configuration(stateful_configuration_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling StatefulConfigurationsApi.describe_stateful_configuration: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.StatefulConfigurationsApi();\r\nlet statefulConfigurationID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeStatefulConfiguration(statefulConfigurationID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Stateful Configurations"
        ],
        "summary": "Modify a Stateful Configuration",
        "description": "Modify a stateful configuration by ID. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>StatefulConfigurationsApi.modifyStatefulConfiguration([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>StatefulConfigurationsApi.modify_stateful_configuration([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>StatefulConfigurationsApi.modifyStatefulConfiguration([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyStatefulConfiguration",
        "parameters": [
          {
            "name": "statefulConfigurationID",
            "in": "path",
            "description": "The ID number of the stateful configuration to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/statefulConfiguration"
              }
            }
          },
          "description": "The settings of the stateful configuration to modify.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statefulConfiguration"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify stateful configurations or the requested modification is not permitted."
          },
          "404": {
            "description": "The stateful configuration does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.StatefulConfigurationsApi;\r\nimport com.trendmicro.deepsecurity.model.StatefulConfiguration;\r\n\r\n\r\npublic class ModifyStatefulConfigurationExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tStatefulConfigurationsApi instance = new StatefulConfigurationsApi();\r\n\t\tInteger statefulConfigurationID = 1;\r\n\t\tStatefulConfiguration statefulConfiguration = new StatefulConfiguration();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tStatefulConfiguration result = instance.modifyStatefulConfiguration(statefulConfigurationID, statefulConfiguration, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling StatefulConfigurationsApi.modifyStatefulConfiguration\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.StatefulConfigurationsApi(deepsecurity.ApiClient(configuration))\r\nstateful_configuration_id = 1\r\nstateful_configuration = deepsecurity.StatefulConfiguration()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_stateful_configuration(stateful_configuration_id, stateful_configuration, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling StatefulConfigurationsApi.modify_stateful_configuration: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.StatefulConfigurationsApi();\r\nlet statefulConfigurationID = 1;\r\nlet statefulConfiguration = new Deepsecurity.StatefulConfiguration();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifyStatefulConfiguration(statefulConfigurationID, statefulConfiguration, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Stateful Configurations"
        ],
        "summary": "Delete a Stateful Configuration",
        "description": "Delete a stateful configuration by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>StatefulConfigurationsApi.deleteStatefulConfiguration([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>StatefulConfigurationsApi.delete_stateful_configuration([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>StatefulConfigurationsApi.deleteStatefulConfiguration([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteStatefulConfiguration",
        "parameters": [
          {
            "name": "statefulConfigurationID",
            "in": "path",
            "description": "The ID number of the stateful configuration to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete stateful configurations."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.StatefulConfigurationsApi;\r\n\r\n\r\npublic class DeleteStatefulConfigurationExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tStatefulConfigurationsApi instance = new StatefulConfigurationsApi();\r\n\t\tInteger statefulConfigurationID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteStatefulConfiguration(statefulConfigurationID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling StatefulConfigurationsApi.deleteStatefulConfiguration\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.StatefulConfigurationsApi(deepsecurity.ApiClient(configuration))\r\nstateful_configuration_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_stateful_configuration(stateful_configuration_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling StatefulConfigurationsApi.delete_stateful_configuration: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.StatefulConfigurationsApi();\r\nlet statefulConfigurationID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteStatefulConfiguration(statefulConfigurationID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/statefulconfigurations": {
      "get": {
        "tags": [
          "Stateful Configurations"
        ],
        "summary": "List Stateful Configurations",
        "description": "Lists all stateful configurations. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>StatefulConfigurationsApi.listStatefulConfigurations([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>StatefulConfigurationsApi.list_stateful_configurations([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>StatefulConfigurationsApi.listStatefulConfigurations([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listStatefulConfigurations",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatefulConfigurations"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view stateful configurations."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.StatefulConfigurationsApi;\r\nimport com.trendmicro.deepsecurity.model.StatefulConfigurations;\r\n\r\n\r\npublic class ListStatefulConfigurationsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tStatefulConfigurationsApi instance = new StatefulConfigurationsApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tStatefulConfigurations result = instance.listStatefulConfigurations(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling StatefulConfigurationsApi.listStatefulConfigurations\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.StatefulConfigurationsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_stateful_configurations(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling StatefulConfigurationsApi.list_stateful_configurations: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.StatefulConfigurationsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listStatefulConfigurations(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Stateful Configurations"
        ],
        "summary": "Create a Stateful Configuration",
        "description": "Create a new stateful configuration. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>StatefulConfigurationsApi.createStatefulConfiguration([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>StatefulConfigurationsApi.create_stateful_configuration([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>StatefulConfigurationsApi.createStatefulConfiguration([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createStatefulConfiguration",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/statefulConfiguration"
              }
            }
          },
          "description": "The settings of the new stateful configuration.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/statefulConfiguration"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create stateful configurations."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.StatefulConfigurationsApi;\r\nimport com.trendmicro.deepsecurity.model.StatefulConfiguration;\r\n\r\n\r\npublic class CreateStatefulConfigurationExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tStatefulConfigurationsApi instance = new StatefulConfigurationsApi();\r\n\t\tStatefulConfiguration statefulConfigurations = new StatefulConfiguration();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tStatefulConfiguration result = instance.createStatefulConfiguration(statefulConfigurations, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling StatefulConfigurationsApi.createStatefulConfiguration\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.StatefulConfigurationsApi(deepsecurity.ApiClient(configuration))\r\nstateful_configurations = deepsecurity.StatefulConfiguration()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_stateful_configuration(stateful_configurations, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling StatefulConfigurationsApi.create_stateful_configuration: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.StatefulConfigurationsApi();\r\nlet statefulConfigurations = new Deepsecurity.StatefulConfiguration();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createStatefulConfiguration(statefulConfigurations, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/statefulconfigurations/search": {
      "post": {
        "tags": [
          "Stateful Configurations"
        ],
        "summary": "Search Stateful Configurations",
        "description": "Search for stateful configurations using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>StatefulConfigurationsApi.searchStatefulConfigurations([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>StatefulConfigurationsApi.search_stateful_configurations([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>StatefulConfigurationsApi.searchStatefulConfigurations([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchStatefulConfigurations",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatefulConfigurations"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view stateful configurations."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.StatefulConfigurationsApi;\r\nimport com.trendmicro.deepsecurity.model.StatefulConfigurations;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\n\r\n\r\npublic class SearchStatefulConfigurationsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tStatefulConfigurationsApi instance = new StatefulConfigurationsApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tStatefulConfigurations result = instance.searchStatefulConfigurations(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling StatefulConfigurationsApi.searchStatefulConfigurations\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.StatefulConfigurationsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_stateful_configurations(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling StatefulConfigurationsApi.search_stateful_configurations: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.StatefulConfigurationsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchStatefulConfigurations(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/syslogconfigurations": {
      "get": {
        "tags": [
          "Syslog Configurations"
        ],
        "summary": "List Syslog Configurations",
        "description": "Lists all syslog configurations. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SyslogConfigurationsApi.listSyslogConfigurations([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SyslogConfigurationsApi.list_syslog_configurations([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SyslogConfigurationsApi.listSyslogConfigurations([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listSyslogConfigurations",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "DefaultAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyslogConfigurations"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view syslog configurations."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SyslogConfigurationsApi;\r\nimport com.trendmicro.deepsecurity.model.SyslogConfigurations;\r\n\r\n\r\npublic class ListSyslogConfigurationsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSyslogConfigurationsApi instance = new SyslogConfigurationsApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSyslogConfigurations result = instance.listSyslogConfigurations(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SyslogConfigurationsApi.listSyslogConfigurations\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SyslogConfigurationsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_syslog_configurations(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SyslogConfigurationsApi.list_syslog_configurations: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SyslogConfigurationsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listSyslogConfigurations(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Syslog Configurations"
        ],
        "summary": "Create a Syslog Configuration",
        "description": "Create a new syslog configuration. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SyslogConfigurationsApi.createSyslogConfiguration([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SyslogConfigurationsApi.create_syslog_configuration([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SyslogConfigurationsApi.createSyslogConfiguration([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createSyslogConfiguration",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/syslogConfiguration"
        },
        "security": [
          {
            "DefaultAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/syslogConfiguration"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create syslog configurations."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SyslogConfigurationsApi;\r\nimport com.trendmicro.deepsecurity.model.SyslogConfiguration;\r\n\r\n\r\npublic class CreateSyslogConfigurationExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSyslogConfigurationsApi instance = new SyslogConfigurationsApi();\r\n\t\tSyslogConfiguration syslogConfiguration = new SyslogConfiguration();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSyslogConfiguration result = instance.createSyslogConfiguration(syslogConfiguration, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SyslogConfigurationsApi.createSyslogConfiguration\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SyslogConfigurationsApi(deepsecurity.ApiClient(configuration))\r\nsyslog_configuration = deepsecurity.SyslogConfiguration()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_syslog_configuration(syslog_configuration, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SyslogConfigurationsApi.create_syslog_configuration: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SyslogConfigurationsApi();\r\nlet syslogConfiguration = new Deepsecurity.SyslogConfiguration();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createSyslogConfiguration(syslogConfiguration, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/syslogconfigurations/{syslogConfigurationID}": {
      "get": {
        "tags": [
          "Syslog Configurations"
        ],
        "summary": "Describe a Syslog Configuration",
        "description": "Describe a syslog configuration by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SyslogConfigurationsApi.describeSyslogConfiguration([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SyslogConfigurationsApi.describe_syslog_configuration([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SyslogConfigurationsApi.describeSyslogConfiguration([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeSyslogConfiguration",
        "parameters": [
          {
            "name": "syslogConfigurationID",
            "in": "path",
            "description": "The ID number of the syslog configuration to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "DefaultAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/syslogConfiguration"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view syslog configurations."
          },
          "404": {
            "description": "The syslog configuration does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SyslogConfigurationsApi;\r\nimport com.trendmicro.deepsecurity.model.SyslogConfiguration;\r\n\r\n\r\npublic class DescribeSyslogConfigurationExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSyslogConfigurationsApi instance = new SyslogConfigurationsApi();\r\n\t\tInteger syslogConfigurationID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSyslogConfiguration result = instance.describeSyslogConfiguration(syslogConfigurationID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SyslogConfigurationsApi.describeSyslogConfiguration\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SyslogConfigurationsApi(deepsecurity.ApiClient(configuration))\r\nsyslog_configuration_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_syslog_configuration(syslog_configuration_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SyslogConfigurationsApi.describe_syslog_configuration: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SyslogConfigurationsApi();\r\nlet syslogConfigurationID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeSyslogConfiguration(syslogConfigurationID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Syslog Configurations"
        ],
        "summary": "Modify a Syslog Configuration",
        "description": "Modify a syslog configuration by ID. Any unset elements will be left unchanged. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SyslogConfigurationsApi.modifySyslogConfiguration([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SyslogConfigurationsApi.modify_syslog_configuration([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SyslogConfigurationsApi.modifySyslogConfiguration([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifySyslogConfiguration",
        "parameters": [
          {
            "name": "syslogConfigurationID",
            "in": "path",
            "description": "The ID number of the syslog configuration to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/syslogConfiguration"
        },
        "security": [
          {
            "DefaultAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/syslogConfiguration"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify syslog configurations or the requested modification is not permitted."
          },
          "404": {
            "description": "The syslog configuration does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SyslogConfigurationsApi;\r\nimport com.trendmicro.deepsecurity.model.SyslogConfiguration;\r\n\r\n\r\npublic class ModifySyslogConfigurationExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSyslogConfigurationsApi instance = new SyslogConfigurationsApi();\r\n\t\tInteger syslogConfigurationID = 1;\r\n\t\tSyslogConfiguration syslogConfiguration = new SyslogConfiguration();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSyslogConfiguration result = instance.modifySyslogConfiguration(syslogConfigurationID, syslogConfiguration, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SyslogConfigurationsApi.modifySyslogConfiguration\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SyslogConfigurationsApi(deepsecurity.ApiClient(configuration))\r\nsyslog_configuration_id = 1\r\nsyslog_configuration = deepsecurity.SyslogConfiguration()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_syslog_configuration(syslog_configuration_id, syslog_configuration, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SyslogConfigurationsApi.modify_syslog_configuration: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SyslogConfigurationsApi();\r\nlet syslogConfigurationID = 1;\r\nlet syslogConfiguration = new Deepsecurity.SyslogConfiguration();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifySyslogConfiguration(syslogConfigurationID, syslogConfiguration, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Syslog Configurations"
        ],
        "summary": "Delete a Syslog Configuration",
        "description": "Delete a syslog configuration by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SyslogConfigurationsApi.deleteSyslogConfiguration([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SyslogConfigurationsApi.delete_syslog_configuration([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SyslogConfigurationsApi.deleteSyslogConfiguration([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteSyslogConfiguration",
        "parameters": [
          {
            "name": "syslogConfigurationID",
            "in": "path",
            "description": "The ID number of the syslog configuration to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "DefaultAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete syslog configurations."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SyslogConfigurationsApi;\r\n\r\n\r\npublic class DeleteSyslogConfigurationExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSyslogConfigurationsApi instance = new SyslogConfigurationsApi();\r\n\t\tInteger syslogConfigurationID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteSyslogConfiguration(syslogConfigurationID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SyslogConfigurationsApi.deleteSyslogConfiguration\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SyslogConfigurationsApi(deepsecurity.ApiClient(configuration))\r\nsyslog_configuration_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_syslog_configuration(syslog_configuration_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SyslogConfigurationsApi.delete_syslog_configuration: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SyslogConfigurationsApi();\r\nlet syslogConfigurationID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteSyslogConfiguration(syslogConfigurationID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/syslogconfigurations/search": {
      "post": {
        "tags": [
          "Syslog Configurations"
        ],
        "summary": "Search Syslog Configurations",
        "description": "Search for syslog configurations using optional filters. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SyslogConfigurationsApi.searchSyslogConfigurations([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SyslogConfigurationsApi.search_syslog_configurations([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>SyslogConfigurationsApi.searchSyslogConfigurations([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "searchSyslogConfigurations",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/searchFilter"
        },
        "security": [
          {
            "DefaultAuthentication": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SyslogConfigurations"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view syslog configurations."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.SyslogConfigurationsApi;\r\nimport com.trendmicro.deepsecurity.model.SearchFilter;\r\nimport com.trendmicro.deepsecurity.model.SyslogConfigurations;\r\n\r\n\r\npublic class SearchSyslogConfigurationsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tSyslogConfigurationsApi instance = new SyslogConfigurationsApi();\r\n\t\tSearchFilter searchFilter = new SearchFilter();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tSyslogConfigurations result = instance.searchSyslogConfigurations(searchFilter, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling SyslogConfigurationsApi.searchSyslogConfigurations\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.SyslogConfigurationsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\nsearch_filter = deepsecurity.SearchFilter()\r\n\r\ntry:\r\n\tapi_response = api_instance.search_syslog_configurations(api_version, search_filter=search_filter)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling SyslogConfigurationsApi.search_syslog_configurations: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.SyslogConfigurationsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  searchFilter: new Deepsecurity.SearchFilter(),\r\n};\r\n\r\napiInstance.searchSyslogConfigurations(apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/applicationcontroltrustrules": {
      "get": {
        "tags": [
          "Trust Rules"
        ],
        "summary": "List all Trust Rules",
        "description": "List all trust rules. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesApi.listTrustRules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesApi.list_trust_rules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesApi.listTrustRules([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listTrustRules",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrustRules"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to list trust rules."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.TrustRulesApi;\r\nimport com.trendmicro.deepsecurity.model.TrustRules;\r\n\r\n\r\npublic class ListTrustRulesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tTrustRulesApi instance = new TrustRulesApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tTrustRules result = instance.listTrustRules(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling TrustRulesApi.listTrustRules\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.TrustRulesApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_trust_rules(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling TrustRulesApi.list_trust_rules: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.TrustRulesApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listTrustRules(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Trust Rules"
        ],
        "summary": "Create a Trust Rule",
        "description": "Create a new trust rule. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesApi.createTrustRule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesApi.create_trust_rule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesApi.createTrustRule([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createTrustRule",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/applicationControlTrustRule"
              }
            }
          },
          "description": "Settings of the new trust rule.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/applicationControlTrustRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create trust rules."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.TrustRulesApi;\r\nimport com.trendmicro.deepsecurity.model.ApplicationControlTrustRule;\r\n\r\n\r\npublic class CreateTrustRuleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tTrustRulesApi instance = new TrustRulesApi();\r\n\t\tApplicationControlTrustRule trustrule = new ApplicationControlTrustRule();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApplicationControlTrustRule result = instance.createTrustRule(trustrule, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling TrustRulesApi.createTrustRule\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.TrustRulesApi(deepsecurity.ApiClient(configuration))\r\ntrustrule = deepsecurity.ApplicationControlTrustRule()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_trust_rule(trustrule, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling TrustRulesApi.create_trust_rule: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.TrustRulesApi();\r\nlet trustrule = new Deepsecurity.ApplicationControlTrustRule();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createTrustRule(trustrule, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/applicationcontroltrustrules/{acTrustRuleID}": {
      "get": {
        "tags": [
          "Trust Rules"
        ],
        "summary": "Describe a Trust Rule",
        "description": "Describe a trust rule by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesApi.describeTrustRule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesApi.describe_trust_rule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesApi.describeTrustRule([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeTrustRule",
        "parameters": [
          {
            "name": "acTrustRuleID",
            "in": "path",
            "description": "The ID number of the trust rule to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/applicationControlTrustRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view trust rules."
          },
          "404": {
            "description": "The trust rule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.TrustRulesApi;\r\nimport com.trendmicro.deepsecurity.model.ApplicationControlTrustRule;\r\n\r\n\r\npublic class DescribeTrustRuleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tTrustRulesApi instance = new TrustRulesApi();\r\n\t\tLong acTrustRuleID = 1L;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApplicationControlTrustRule result = instance.describeTrustRule(acTrustRuleID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling TrustRulesApi.describeTrustRule\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.TrustRulesApi(deepsecurity.ApiClient(configuration))\r\nac_trust_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_trust_rule(ac_trust_rule_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling TrustRulesApi.describe_trust_rule: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.TrustRulesApi();\r\nlet acTrustRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeTrustRule(acTrustRuleID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Trust Rules"
        ],
        "summary": "Modify a Trust Rule",
        "description": "Modify a trust rule by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesApi.modifyTrustRule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesApi.modify_trust_rule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesApi.modifyTrustRule([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyTrustRule",
        "parameters": [
          {
            "name": "acTrustRuleID",
            "in": "path",
            "description": "The ID of the trust rule to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrustRuleUpdateRequest"
              }
            }
          },
          "description": "The attributes of the trust rule to modify.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/applicationControlTrustRule"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify trust ruleset."
          },
          "404": {
            "description": "The trust rule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.TrustRulesApi;\r\nimport com.trendmicro.deepsecurity.model.TrustRuleUpdateRequest;\r\nimport com.trendmicro.deepsecurity.model.ApplicationControlTrustRule;\r\n\r\n\r\npublic class ModifyTrustRuleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tTrustRulesApi instance = new TrustRulesApi();\r\n\t\tLong acTrustRuleID = 1L;\r\n\t\tTrustRuleUpdateRequest requestTrustRulesetUpdate = new TrustRuleUpdateRequest();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tApplicationControlTrustRule result = instance.modifyTrustRule(acTrustRuleID, requestTrustRulesetUpdate, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling TrustRulesApi.modifyTrustRule\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.TrustRulesApi(deepsecurity.ApiClient(configuration))\r\nac_trust_rule_id = 1\r\nrequest_trust_ruleset_update = deepsecurity.TrustRuleUpdateRequest()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_trust_rule(ac_trust_rule_id, request_trust_ruleset_update, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling TrustRulesApi.modify_trust_rule: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.TrustRulesApi();\r\nlet acTrustRuleID = 1;\r\nlet requestTrustRulesetUpdate = new Deepsecurity.TrustRuleUpdateRequest();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifyTrustRule(acTrustRuleID, requestTrustRulesetUpdate, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      },
      "delete": {
        "tags": [
          "Trust Rules"
        ],
        "summary": "Delete a Trust Rule.",
        "description": "Delete a trust rule by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesApi.deleteTrustRule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesApi.delete_trust_rule([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesApi.deleteTrustRule([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteTrustRule",
        "parameters": [
          {
            "name": "acTrustRuleID",
            "in": "path",
            "description": "The ID number of the trust rule to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete a trust rule."
          },
          "404": {
            "description": "The trust rule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.TrustRulesApi;\r\n\r\n\r\npublic class DeleteTrustRuleExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tTrustRulesApi instance = new TrustRulesApi();\r\n\t\tLong acTrustRuleID = 1L;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteTrustRule(acTrustRuleID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling TrustRulesApi.deleteTrustRule\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.TrustRulesApi(deepsecurity.ApiClient(configuration))\r\nac_trust_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_trust_rule(ac_trust_rule_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling TrustRulesApi.delete_trust_rule: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.TrustRulesApi();\r\nlet acTrustRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteTrustRule(acTrustRuleID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/applicationcontroltrustrulesets": {
      "get": {
        "tags": [
          "Trust Rulesets"
        ],
        "summary": "List Trust Rulesets",
        "description": "List all trust rulesets. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesetsApi.listTrustRulesets([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesetsApi.list_trust_rulesets([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesetsApi.listTrustRulesets([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listTrustRulesets",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrustRulesets"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to list trust rulesets."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.TrustRulesetsApi;\r\nimport com.trendmicro.deepsecurity.model.TrustRulesets;\r\n\r\n\r\npublic class ListTrustRulesetsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tTrustRulesetsApi instance = new TrustRulesetsApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tTrustRulesets result = instance.listTrustRulesets(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling TrustRulesetsApi.listTrustRulesets\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.TrustRulesetsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_trust_rulesets(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling TrustRulesetsApi.list_trust_rulesets: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.TrustRulesetsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listTrustRulesets(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Trust Rulesets"
        ],
        "summary": "Create a Trust Ruleset",
        "description": "Create a new trust ruleset. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesetsApi.createTrustRuleset([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesetsApi.create_trust_ruleset([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesetsApi.createTrustRuleset([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createTrustRuleset",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrustRuleset"
              }
            }
          },
          "description": "The settings of the new trust ruleset.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrustRuleset"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create trust rulesets."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.TrustRulesetsApi;\r\nimport com.trendmicro.deepsecurity.model.TrustRuleset;\r\n\r\n\r\npublic class CreateTrustRulesetExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tTrustRulesetsApi instance = new TrustRulesetsApi();\r\n\t\tTrustRuleset trustruleset = new TrustRuleset();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tTrustRuleset result = instance.createTrustRuleset(trustruleset, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling TrustRulesetsApi.createTrustRuleset\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.TrustRulesetsApi(deepsecurity.ApiClient(configuration))\r\ntrustruleset = deepsecurity.TrustRuleset()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_trust_ruleset(trustruleset, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling TrustRulesetsApi.create_trust_ruleset: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.TrustRulesetsApi();\r\nlet trustruleset = new Deepsecurity.TrustRuleset();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createTrustRuleset(trustruleset, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/applicationcontroltrustrulesets/{acTrustRulesetID}": {
      "get": {
        "tags": [
          "Trust Rulesets"
        ],
        "summary": "Describe a Trust Ruleset",
        "description": "Describe a trust ruleset by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesetsApi.describeTrustRuleset([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesetsApi.describe_trust_ruleset([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesetsApi.describeTrustRuleset([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeTrustRuleset",
        "parameters": [
          {
            "name": "acTrustRulesetID",
            "in": "path",
            "description": "The ID number of the trust ruleset to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrustRuleset"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view trust rulesets."
          },
          "404": {
            "description": "The trust ruleset does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.TrustRulesetsApi;\r\nimport com.trendmicro.deepsecurity.model.TrustRuleset;\r\n\r\n\r\npublic class DescribeTrustRulesetExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tTrustRulesetsApi instance = new TrustRulesetsApi();\r\n\t\tLong acTrustRulesetID = 1L;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tTrustRuleset result = instance.describeTrustRuleset(acTrustRulesetID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling TrustRulesetsApi.describeTrustRuleset\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.TrustRulesetsApi(deepsecurity.ApiClient(configuration))\r\nac_trust_ruleset_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_trust_ruleset(ac_trust_ruleset_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling TrustRulesetsApi.describe_trust_ruleset: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.TrustRulesetsApi();\r\nlet acTrustRulesetID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeTrustRuleset(acTrustRulesetID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Trust Rulesets"
        ],
        "summary": "Modify a Trust Ruleset",
        "description": "Modify a trust ruleset's attributes by trust ruleset ID, including trust rule assignment. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesetsApi.modifyTrustRuleset([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesetsApi.modify_trust_ruleset([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesetsApi.modifyTrustRuleset([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyTrustRuleset",
        "parameters": [
          {
            "name": "acTrustRulesetID",
            "in": "path",
            "description": "The ID number of the trust ruleset to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrustRulesetUpdateRequest"
              }
            }
          },
          "description": "The attributes of the trust ruleset to modify.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrustRuleset"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify trust rulesets."
          },
          "404": {
            "description": "The trust ruleset does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.TrustRulesetsApi;\r\nimport com.trendmicro.deepsecurity.model.TrustRulesetUpdateRequest;\r\nimport com.trendmicro.deepsecurity.model.TrustRuleset;\r\n\r\n\r\npublic class ModifyTrustRulesetExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tTrustRulesetsApi instance = new TrustRulesetsApi();\r\n\t\tLong acTrustRulesetID = 1L;\r\n\t\tTrustRulesetUpdateRequest body = new TrustRulesetUpdateRequest();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tTrustRuleset result = instance.modifyTrustRuleset(acTrustRulesetID, body, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling TrustRulesetsApi.modifyTrustRuleset\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.TrustRulesetsApi(deepsecurity.ApiClient(configuration))\r\nac_trust_ruleset_id = 1\r\nbody = deepsecurity.TrustRulesetUpdateRequest()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_trust_ruleset(ac_trust_ruleset_id, body, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling TrustRulesetsApi.modify_trust_ruleset: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.TrustRulesetsApi();\r\nlet acTrustRulesetID = 1;\r\nlet body = new Deepsecurity.TrustRulesetUpdateRequest();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.modifyTrustRuleset(acTrustRulesetID, body, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "delete": {
        "tags": [
          "Trust Rulesets"
        ],
        "summary": "Delete a Trust Ruleset",
        "description": "Delete a trust ruleset by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesetsApi.deleteTrustRuleset([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesetsApi.delete_trust_ruleset([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesetsApi.deleteTrustRuleset([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteTrustRuleset",
        "parameters": [
          {
            "name": "acTrustRulesetID",
            "in": "path",
            "description": "The ID number of the trust ruleset to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete trust rulesets."
          },
          "404": {
            "description": "The trust ruleset does not exist."
          },
          "405": {
            "description": "Cannot delete a trust ruleset that is in use."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.TrustRulesetsApi;\r\n\r\n\r\npublic class DeleteTrustRulesetExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tTrustRulesetsApi instance = new TrustRulesetsApi();\r\n\t\tLong acTrustRulesetID = 1L;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteTrustRuleset(acTrustRulesetID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling TrustRulesetsApi.deleteTrustRuleset\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.TrustRulesetsApi(deepsecurity.ApiClient(configuration))\r\nac_trust_ruleset_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_trust_ruleset(ac_trust_ruleset_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling TrustRulesetsApi.delete_trust_ruleset: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.TrustRulesetsApi();\r\nlet acTrustRulesetID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteTrustRuleset(acTrustRulesetID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/applicationcontroltrustrulesets/{acTrustRulesetID}/rules/{acTrustRuleID}": {
      "delete": {
        "tags": [
          "Trust Rulesets"
        ],
        "summary": "Delete a Trust Rule from a Trust Ruleset",
        "description": "Delete a single trust rule from a trust ruleset by the trust ruleset ID and the trust rule ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesetsApi.deleteTrustRuleFromTrustRuleset([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesetsApi.delete_trust_rule_from_trust_ruleset([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesetsApi.deleteTrustRuleFromTrustRuleset([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteTrustRuleFromTrustRuleset",
        "parameters": [
          {
            "name": "acTrustRulesetID",
            "in": "path",
            "description": "The ID number of the trust ruleset.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "acTrustRuleID",
            "in": "path",
            "description": "The ID number of the trust rule to delete.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Request is successful."
          },
          "403": {
            "description": "Not authorized to delete trust rules."
          },
          "404": {
            "description": "The trust ruleset or the trust rule does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.TrustRulesetsApi;\r\n\r\n\r\npublic class DeleteTrustRuleFromTrustRulesetExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tTrustRulesetsApi instance = new TrustRulesetsApi();\r\n\t\tLong acTrustRulesetID = 1L;\r\n\t\tLong acTrustRuleID = 1L;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteTrustRuleFromTrustRuleset(acTrustRulesetID, acTrustRuleID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling TrustRulesetsApi.deleteTrustRuleFromTrustRuleset\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.TrustRulesetsApi(deepsecurity.ApiClient(configuration))\r\nac_trust_ruleset_id = 1\r\nac_trust_rule_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_trust_rule_from_trust_ruleset(ac_trust_ruleset_id, ac_trust_rule_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling TrustRulesetsApi.delete_trust_rule_from_trust_ruleset: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.TrustRulesetsApi();\r\nlet acTrustRulesetID = 1;\r\nlet acTrustRuleID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteTrustRuleFromTrustRuleset(acTrustRulesetID, acTrustRuleID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/applicationcontroltrustrulesets/{acTrustRulesetID}/rules": {
      "get": {
        "tags": [
          "Trust Rulesets"
        ],
        "summary": "List Trust Rules in a Trust Ruleset",
        "description": "List all trust rules in a trust ruleset by trust ruleset ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesetsApi.listTrustRulesetRules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesetsApi.list_trust_ruleset_rules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesetsApi.listTrustRulesetRules([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listTrustRulesetRules",
        "parameters": [
          {
            "name": "acTrustRulesetID",
            "in": "path",
            "description": "The ID of the trust ruleset.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrustRules"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to list the trust rules in a trust ruleset."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.TrustRulesetsApi;\r\nimport com.trendmicro.deepsecurity.model.TrustRules;\r\n\r\n\r\npublic class ListTrustRulesetRulesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tTrustRulesetsApi instance = new TrustRulesetsApi();\r\n\t\tLong acTrustRulesetID = 1L;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tTrustRules result = instance.listTrustRulesetRules(acTrustRulesetID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling TrustRulesetsApi.listTrustRulesetRules\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.TrustRulesetsApi(deepsecurity.ApiClient(configuration))\r\nac_trust_ruleset_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_trust_ruleset_rules(ac_trust_ruleset_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling TrustRulesetsApi.list_trust_ruleset_rules: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.TrustRulesetsApi();\r\nlet acTrustRulesetID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listTrustRulesetRules(acTrustRulesetID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "Trust Rulesets"
        ],
        "summary": "Add Trust Rule IDs",
        "description": "Assign additional trust rule IDs to a trust ruleset. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesetsApi.addTrustRules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesetsApi.add_trust_rules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesetsApi.addTrustRules([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "addTrustRules",
        "parameters": [
          {
            "name": "acTrustRulesetID",
            "in": "path",
            "description": "The ID number of the trust ruleset.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RuleLongIDs"
              }
            }
          },
          "description": "The ID numbers of the trust rules to add.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrustRuleIDs"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify trust rulesets."
          },
          "404": {
            "description": "The trust ruleset or rules do not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.TrustRulesetsApi;\r\nimport com.trendmicro.deepsecurity.model.RuleLongIDs;\r\nimport com.trendmicro.deepsecurity.model.TrustRuleIDs;\r\n\r\n\r\npublic class AddTrustRulesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tTrustRulesetsApi instance = new TrustRulesetsApi();\r\n\t\tLong acTrustRulesetID = 1L;\r\n\t\tRuleLongIDs body = new RuleLongIDs();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tTrustRuleIDs result = instance.addTrustRules(acTrustRulesetID, body, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling TrustRulesetsApi.addTrustRules\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.TrustRulesetsApi(deepsecurity.ApiClient(configuration))\r\nac_trust_ruleset_id = 1\r\nbody = deepsecurity.RuleLongIDs()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.add_trust_rules(ac_trust_ruleset_id, body, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling TrustRulesetsApi.add_trust_rules: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.TrustRulesetsApi();\r\nlet acTrustRulesetID = 1;\r\nlet body = new Deepsecurity.RuleLongIDs();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.addTrustRules(acTrustRulesetID, body, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "put": {
        "tags": [
          "Trust Rulesets"
        ],
        "summary": "Set Trust Rule IDs in a Ruleset",
        "description": "Set only the specified trust rule IDs to be assigned to the trust ruleset. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesetsApi.setTrustRules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesetsApi.set_trust_rules([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesetsApi.setTrustRules([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "setTrustRules",
        "parameters": [
          {
            "name": "acTrustRulesetID",
            "in": "path",
            "description": "The ID number of the trust ruleset to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RuleLongIDs"
              }
            }
          },
          "description": "The ID numbers of the trust rules to set.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrustRuleIDs"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify trust rulesets."
          },
          "404": {
            "description": "The trust ruleset does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.TrustRulesetsApi;\r\nimport com.trendmicro.deepsecurity.model.RuleLongIDs;\r\nimport com.trendmicro.deepsecurity.model.TrustRuleIDs;\r\n\r\n\r\npublic class SetTrustRulesExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tTrustRulesetsApi instance = new TrustRulesetsApi();\r\n\t\tLong acTrustRulesetID = 1L;\r\n\t\tRuleLongIDs body = new RuleLongIDs();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tTrustRuleIDs result = instance.setTrustRules(acTrustRulesetID, body, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling TrustRulesetsApi.setTrustRules\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.TrustRulesetsApi(deepsecurity.ApiClient(configuration))\r\nac_trust_ruleset_id = 1\r\nbody = deepsecurity.RuleLongIDs()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.set_trust_rules(ac_trust_ruleset_id, body, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling TrustRulesetsApi.set_trust_rules: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.TrustRulesetsApi();\r\nlet acTrustRulesetID = 1;\r\nlet body = new Deepsecurity.RuleLongIDs();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.setTrustRules(acTrustRulesetID, body, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/applicationcontroltrustrulesets/{acTrustRulesetID}/assignments": {
      "get": {
        "tags": [
          "Trust Rulesets"
        ],
        "summary": "List a Trust Ruleset Assignment",
        "description": "List a trust ruleset's computer and policy assignment by the trust ruleset ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesetsApi.listTrustRulesetAssignments([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesetsApi.list_trust_ruleset_assignments([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>TrustRulesetsApi.listTrustRulesetAssignments([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listTrustRulesetAssignments",
        "parameters": [
          {
            "name": "acTrustRulesetID",
            "in": "path",
            "description": "The ID of the trust ruleset",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The version of the api being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrustRulesetAssignments"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to access trust ruleset."
          },
          "404": {
            "description": "The trust ruleset does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.TrustRulesetsApi;\r\nimport com.trendmicro.deepsecurity.model.TrustRulesetAssignments;\r\n\r\n\r\npublic class ListTrustRulesetAssignmentsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tTrustRulesetsApi instance = new TrustRulesetsApi();\r\n\t\tLong acTrustRulesetID = 1L;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tTrustRulesetAssignments result = instance.listTrustRulesetAssignments(acTrustRulesetID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling TrustRulesetsApi.listTrustRulesetAssignments\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.TrustRulesetsApi(deepsecurity.ApiClient(configuration))\r\nac_trust_ruleset_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_trust_ruleset_assignments(ac_trust_ruleset_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling TrustRulesetsApi.list_trust_ruleset_assignments: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.TrustRulesetsApi();\r\nlet acTrustRulesetID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listTrustRulesetAssignments(acTrustRulesetID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/vcenterconnectors/{virtualID}/actions/{actionID}": {
      "get": {
        "tags": [
          "vCenter Connector Actions"
        ],
        "summary": "Describe a connector action",
        "description": "Describe a connector action by connector ID and action ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>VCenterConnectorActionsApi.describeVCenterConnectorAction([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>VCenterConnectorActionsApi.describe_v_center_connector_action([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>VCenterConnectorActionsApi.describeVCenterConnectorAction([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeVCenterConnectorAction",
        "parameters": [
          {
            "name": "virtualID",
            "in": "path",
            "description": "ID number of the vCenter connector.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "actionID",
            "in": "path",
            "description": "ID number of the vCenter connector action.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int64",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "Version of the API being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vCenterConnectorAction"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the action."
          },
          "404": {
            "description": "The action does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.VCenterConnectorActionsApi;\r\nimport com.trendmicro.deepsecurity.model.VCenterConnectorAction;\r\n\r\n\r\npublic class DescribeVCenterConnectorActionExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tVCenterConnectorActionsApi instance = new VCenterConnectorActionsApi();\r\n\t\tInteger virtualID = 1;\r\n\t\tLong actionID = 1L;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tVCenterConnectorAction result = instance.describeVCenterConnectorAction(virtualID, actionID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling VCenterConnectorActionsApi.describeVCenterConnectorAction\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.VCenterConnectorActionsApi(deepsecurity.ApiClient(configuration))\r\nvirtual_id = 1\r\naction_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_v_center_connector_action(virtual_id, action_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling VCenterConnectorActionsApi.describe_v_center_connector_action: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.VCenterConnectorActionsApi();\r\nlet virtualID = 1;\r\nlet actionID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeVCenterConnectorAction(virtualID, actionID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      }
    },
    "/vcenterconnectors/{virtualID}/actions": {
      "post": {
        "tags": [
          "vCenter Connector Actions"
        ],
        "summary": "Create a connector action",
        "description": "Create a connector action by connector ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>VCenterConnectorActionsApi.createVCenterConnectorAction([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>VCenterConnectorActionsApi.create_v_center_connector_action([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>VCenterConnectorActionsApi.createVCenterConnectorAction([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createVCenterConnectorAction",
        "parameters": [
          {
            "name": "virtualID",
            "in": "path",
            "description": "ID number of the vCenter connector.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "Version of the API being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vCenterConnectorAction"
              }
            }
          },
          "description": "Property of the new vCenter connector action.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vCenterConnectorAction"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view the action."
          },
          "404": {
            "description": "The action does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.VCenterConnectorActionsApi;\r\nimport com.trendmicro.deepsecurity.model.VCenterConnectorAction;\r\n\r\n\r\npublic class CreateVCenterConnectorActionExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tVCenterConnectorActionsApi instance = new VCenterConnectorActionsApi();\r\n\t\tInteger virtualID = 1;\r\n\t\tVCenterConnectorAction vCenterConnectorAction = new VCenterConnectorAction();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tVCenterConnectorAction result = instance.createVCenterConnectorAction(virtualID, vCenterConnectorAction, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling VCenterConnectorActionsApi.createVCenterConnectorAction\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.VCenterConnectorActionsApi(deepsecurity.ApiClient(configuration))\r\nvirtual_id = 1\r\nv_center_connector_action = deepsecurity.VCenterConnectorAction()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_v_center_connector_action(virtual_id, v_center_connector_action, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling VCenterConnectorActionsApi.create_v_center_connector_action: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.VCenterConnectorActionsApi();\r\nlet virtualID = 1;\r\nlet vCenterConnectorAction = new Deepsecurity.VCenterConnectorAction();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createVCenterConnectorAction(virtualID, vCenterConnectorAction, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/vcenterconnectors/{virtualID}": {
      "get": {
        "tags": [
          "vCenter Connectors"
        ],
        "summary": "Describe a vCenter Connector",
        "description": "Describe a vCenter connector by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>VCenterConnectorsApi.describeVCenterConnector([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>VCenterConnectorsApi.describe_v_center_connector([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>VCenterConnectorsApi.describeVCenterConnector([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "describeVCenterConnector",
        "parameters": [
          {
            "name": "virtualID",
            "in": "path",
            "description": "ID number of the vCenter connector to describe.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "Version of the API being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VCenterConnector"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view vCenter connectors."
          },
          "404": {
            "description": "The vCenter connector does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.VCenterConnectorsApi;\r\nimport com.trendmicro.deepsecurity.model.VCenterConnector;\r\n\r\n\r\npublic class DescribeVCenterConnectorExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tVCenterConnectorsApi instance = new VCenterConnectorsApi();\r\n\t\tInteger virtualID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tVCenterConnector result = instance.describeVCenterConnector(virtualID, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling VCenterConnectorsApi.describeVCenterConnector\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.VCenterConnectorsApi(deepsecurity.ApiClient(configuration))\r\nvirtual_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.describe_v_center_connector(virtual_id, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling VCenterConnectorsApi.describe_v_center_connector: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.VCenterConnectorsApi();\r\nlet virtualID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.describeVCenterConnector(virtualID, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "vCenter Connectors"
        ],
        "summary": "Modify a vCenter Connector",
        "description": "Modify a vCenter connector by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>VCenterConnectorsApi.modifyVCenterConnector([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>VCenterConnectorsApi.modify_v_center_connector([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>VCenterConnectorsApi.modifyVCenterConnector([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "modifyVCenterConnector",
        "parameters": [
          {
            "name": "virtualID",
            "in": "path",
            "description": "ID number of the vCenter Connector to modify.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "Version of the API being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VCenterConnector"
              }
            }
          },
          "description": "The settings of the vCenter connector to modify."
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VCenterConnector"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify the vCenter connector, or the requested modification is not permitted."
          },
          "404": {
            "description": "The vCenter Connector does not exist."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.VCenterConnectorsApi;\r\nimport com.trendmicro.deepsecurity.model.VCenterConnector;\r\n\r\n\r\npublic class ModifyVCenterConnectorExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tVCenterConnectorsApi instance = new VCenterConnectorsApi();\r\n\t\tInteger virtualID = 1;\r\n\t\tVCenterConnector vcenterConnector = new VCenterConnector();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tVCenterConnector result = instance.modifyVCenterConnector(virtualID, vcenterConnector, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling VCenterConnectorsApi.modifyVCenterConnector\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.VCenterConnectorsApi(deepsecurity.ApiClient(configuration))\r\nvirtual_id = 1\r\napi_version = 'YOUR VERSION'\r\nvcenter_connector = deepsecurity.VCenterConnector()\r\n\r\ntry:\r\n\tapi_response = api_instance.modify_v_center_connector(virtual_id, api_version, vcenter_connector=vcenter_connector)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling VCenterConnectorsApi.modify_v_center_connector: %s\\n\" % e)\r\n\r\n"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.VCenterConnectorsApi();\r\nlet virtualID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\nlet opts = { \r\n  vcenterConnector: new Deepsecurity.VCenterConnector(),\r\n};\r\n\r\napiInstance.modifyVCenterConnector(virtualID, apiVersion, opts).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r\n"
          }
        ]
      },
      "delete": {
        "tags": [
          "vCenter Connectors"
        ],
        "summary": "Delete a vCenter connector",
        "description": "Delete a vCenter connector by ID. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>VCenterConnectorsApi.deleteVCenterConnector([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>VCenterConnectorsApi.delete_v_center_connector([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>VCenterConnectorsApi.deleteVCenterConnector([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "deleteVCenterConnector",
        "parameters": [
          {
            "name": "virtualID",
            "in": "path",
            "description": "ID number of the vCenter Connector to be deleted.",
            "required": true,
            "example": 1,
            "schema": {
              "type": "integer",
              "format": "int32",
              "pattern": "\\d+"
            }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "Version of the API being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation."
          },
          "204": {
            "description": "Successful operation."
          },
          "403": {
            "description": "Not authorized to delete the vCenter connector or the requested modification is not permitted."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.VCenterConnectorsApi;\r\n\r\n\r\npublic class DeleteVCenterConnectorExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tVCenterConnectorsApi instance = new VCenterConnectorsApi();\r\n\t\tInteger virtualID = 1;\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tinstance.deleteVCenterConnector(virtualID, apiVersion);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling VCenterConnectorsApi.deleteVCenterConnector\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.VCenterConnectorsApi(deepsecurity.ApiClient(configuration))\r\nvirtual_id = 1\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_instance.delete_v_center_connector(virtual_id, api_version)\r\n\t\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling VCenterConnectorsApi.delete_v_center_connector: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.VCenterConnectorsApi();\r\nlet virtualID = 1;\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.deleteVCenterConnector(virtualID, apiVersion).then( {\r\n  console.log('API called successfully.');\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    },
    "/vcenterconnectors": {
      "get": {
        "tags": [
          "vCenter Connectors"
        ],
        "summary": "List vCenter connectors",
        "description": "List all vCenter connectors. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>VCenterConnectorsApi.listVCenterConnectors([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>VCenterConnectorsApi.list_v_center_connectors([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>VCenterConnectorsApi.listVCenterConnectors([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "listVCenterConnectors",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "Version of the API being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the Deep Security Manager that responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VCenterConnectors"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view vCenter connectors."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.VCenterConnectorsApi;\r\nimport com.trendmicro.deepsecurity.model.VCenterConnectors;\r\n\r\n\r\npublic class ListVCenterConnectorsExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tVCenterConnectorsApi instance = new VCenterConnectorsApi();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tVCenterConnectors result = instance.listVCenterConnectors(apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling VCenterConnectorsApi.listVCenterConnectors\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.VCenterConnectorsApi(deepsecurity.ApiClient(configuration))\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.list_v_center_connectors(api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling VCenterConnectorsApi.list_v_center_connectors: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.VCenterConnectorsApi();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.listVCenterConnectors(apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      },
      "post": {
        "tags": [
          "vCenter Connectors"
        ],
        "summary": "Create a vCenter connector",
        "description": "Create a new vCenter connector. <header class=\"param-type\">Related SDK Methods:</header><div _ngcontent-c12=\"\" class=\"params-wrap\"><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Java</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>VCenterConnectorsApi.createVCenterConnector([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">Python</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>VCenterConnectorsApi.create_v_center_connector([param1, param2, ...])</p></span>    </div>  </div></div><div _ngcontent-c12=\"\" class=\"param\">  <div _ngcontent-c12=\"\" class=\"param-name\">    <span _ngcontent-c12=\"\" class=\"param-name-wrap\">JavaScript</span>  </div>  <div _ngcontent-c12=\"\" class=\"param-info\">    <div></div>    <div _ngcontent-c12=\"\" class=\"param-description\">      <span class=\"redoc-markdown-block\"><p>VCenterConnectorsApi.createVCenterConnector([param1, param2, ...])</p></span>    </div>  </div></div></div>",
        "operationId": "createVCenterConnector",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "Version of the API being called.",
            "required": true,
            "example": "YOUR VERSION",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VCenterConnector"
              }
            }
          },
          "description": "Settings for the new vCenter connector.",
          "required": true
        },
        "security": [
          {
            "Trend_Micro_Cloud_One_API_Key": []
          },
          {
            "Legacy_API_Key": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-DSM-Version": {
                "description": "Version of the DSM which responded to the API call.",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VCenterConnector"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create vCenter Connector."
          }
        },
        "x-codeSamples": [
          {
            "lang": "Java",
            "source": "import com.trendmicro.deepsecurity.ApiClient;\r\nimport com.trendmicro.deepsecurity.Configuration;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.auth.ApiKeyAuth;\r\nimport com.trendmicro.deepsecurity.ApiException;\r\nimport com.trendmicro.deepsecurity.api.VCenterConnectorsApi;\r\nimport com.trendmicro.deepsecurity.model.VCenterConnector;\r\n\r\n\r\npublic class CreateVCenterConnectorExample {\r\n\t\r\n\tpublic static void main(String[] args) {\r\n\t\t// Setup\r\n\t\tApiClient defaultClient = Configuration.getDefaultApiClient();\r\n\t\tdefaultClient.setBasePath(\"YOUR HOST\");\r\n\r\n\t\t// Authentication\r\n\t\tApiKeyAuth Legacy API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Legacy API Key\");\r\n\t\tLegacy API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\tApiKeyAuth Trend Micro Cloud One API Key = (ApiKeyAuth) defaultClient.getAuthentication(\"Trend Micro Cloud One API Key\");\r\n\t\tTrend Micro Cloud One API Key.setApiKey(\"YOUR API KEY\");\r\n\t\ttry {\r\n\t\t\tdefaultClient.trustAllCertificates(false);\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling ApiClient.trustAllCertificates\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t\r\n\t\t// Initialization\r\n\t\t// Set Any Required Values\r\n\t\tVCenterConnectorsApi instance = new VCenterConnectorsApi();\r\n\t\tVCenterConnector vcenterConnector = new VCenterConnector();\r\n\t\tString apiVersion = \"YOUR VERSION\";\r\n\t\ttry {\r\n\t\t\t// Please replace the parameter values with yours\r\n\t\t\tVCenterConnector result = instance.createVCenterConnector(vcenterConnector, apiVersion);\r\n\t\t\tSystem.out.println(result);\r\n\t\t} catch (ApiException e) {\r\n\t\t\tSystem.err.println(\"An exception occurred when calling VCenterConnectorsApi.createVCenterConnector\");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n}\r\n\r"
          },
          {
            "lang": "Python",
            "source": "from __future__ import print_function\r\nimport sys, warnings\r\nimport deepsecurity\r\nfrom deepsecurity.rest import ApiException\r\nfrom pprint import pprint\r\n\r\n# Setup\r\nif not sys.warnoptions:\r\n\twarnings.simplefilter(\"ignore\")\r\nconfiguration = deepsecurity.Configuration()\r\nconfiguration.host = 'YOUR_HOST'\r\n\r\n# Authentication\r\nconfiguration.api_key['api-secret-key'] = 'YOUR_API_KEY'\r\nconfiguration.api_key['Authorization'] = 'YOUR_API_KEY'\r\n\r\n# Initialization\r\n# Set Any Required Values\r\napi_instance = deepsecurity.VCenterConnectorsApi(deepsecurity.ApiClient(configuration))\r\nvcenter_connector = deepsecurity.VCenterConnector()\r\napi_version = 'YOUR VERSION'\r\n\r\ntry:\r\n\tapi_response = api_instance.create_v_center_connector(vcenter_connector, api_version)\r\n\tpprint(api_response)\r\nexcept ApiException as e:\r\n\tprint(\"An exception occurred when calling VCenterConnectorsApi.create_v_center_connector: %s\\n\" % e)\r\n\r"
          },
          {
            "lang": "JavaScript",
            "source": "// Setup\r\nlet Deepsecurity = require('@trendmicro/deepsecurity');\r\nlet defaultClient = Deepsecurity.ApiClient.instance;\r\ndefaultClient.basePath = 'YOUR HOST';\r\n\r\n// Authentication\r\nlet Legacy API Key = defaultClient.authentications['Legacy API Key'];\r\nLegacy API Key.apiKey = 'YOUR API KEY';\r\n// Authentication\r\nlet Trend Micro Cloud One API Key = defaultClient.authentications['Trend Micro Cloud One API Key'];\r\nTrend Micro Cloud One API Key.apiKey = 'YOUR API KEY';\r\n\r\n// Initialization\r\n// Set Any Required Values\r\nlet apiInstance = new Deepsecurity.VCenterConnectorsApi();\r\nlet vcenterConnector = new Deepsecurity.VCenterConnector();\r\nlet apiVersion = 'YOUR VERSION';\r\n\r\napiInstance.createVCenterConnector(vcenterConnector, apiVersion).then(data => {\r\n  console.log(`API called successfully. Returned data: ${JSON.stringify(data, null, 4)}`);\r\n}, error => {\r\n  console.error(error);\r\n});\r"
          }
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://workload.{region}.cloudone.trendmicro.com/api/",
      "description": "\nReplace `{region}` with your Trend Micro Cloud One account's region, for example: `us-1`.\n\nFor information on Trend Micro Cloud One accounts and regions, see the [Accounts help](https://cloudone.trendmicro.com/docs/account-and-user-management/c1-accounts-about/).\n",
      "variables": {
        "region": {
          "default": "us-1",
          "enum": [
            "us-1",
            "in-1"
          ]
        }
      }
    },
    {
      "url": "https://cloudone.trendmicro.com/api/",
      "description": "\n**DEPRECATED**\n\nLegacy Trend Micro Cloud One API URL.\n\nRequires a [Legacy API key](https://cloudone.trendmicro.com/docs/workload-security/api-keys/).\n"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Administration",
      "tags": [
        "Administrators",
        "Administrator Roles",
        "Agent Version Controls",
        "Agent Version Control Profiles",
        "API Keys",
        "API Usage",
        "Certificates",
        "Contacts",
        "Data Center Gateways",
        "Event Based Tasks",
        "Proxies",
        "Report Templates",
        "Scheduled Tasks",
        "System Settings",
        "Syslog Configurations"
      ]
    },
    {
      "name": "Computer",
      "tags": [
        "Agent Deployment Scripts",
        "Agent Scan Controls",
        "AWS Connectors",
        "AWS Connector Settings",
        "Azure Connectors",
        "Computers",
        "Computer Device Control Exception Rules",
        "Computer Firewall Rule Assignments",
        "Computer Firewall Rule Details",
        "Computer Groups",
        "Computer Integrity Monitoring Rule Assignments & Recommendations",
        "Computer Integrity Monitoring Rule Details",
        "Computer Intrusion Prevention Rule Assignments & Recommendations",
        "Computer Intrusion Prevention Application Type Details",
        "Computer Intrusion Prevention Rule Details",
        "Computer Log Inspection Rule Assignments & Recommendations",
        "Computer Log Inspection Rule Details",
        "GCP Connector Actions",
        "GCP Connectors",
        "Smart Folders"
      ]
    },
    {
      "name": "Policies",
      "tags": [
        "Policies",
        "Policy Device Control Exception Rules",
        "Policy Firewall Rule Assignments",
        "Policy Firewall Rule Details",
        "Policy Integrity Monitoring Rule Assignments & Recommendations",
        "Policy Integrity Monitoring Rule Details",
        "Policy Intrusion Prevention Rule Assignments & Recommendations",
        "Policy Intrusion Prevention Application Type Details",
        "Policy Intrusion Prevention Rule Details",
        "Policy Log Inspection Rule Assignments & Recommendations",
        "Policy Log Inspection Rule Details"
      ]
    },
    {
      "name": "Anti-Malware",
      "tags": [
        "Anti-Malware Configurations",
        "Directory Lists",
        "File Extension Lists",
        "File Lists",
        "Schedules"
      ]
    },
    {
      "name": "Firewall",
      "tags": [
        "Firewall Rules",
        "Interface Types",
        "IP Lists",
        "MAC Lists",
        "Port Lists",
        "Contexts",
        "Schedules",
        "Stateful Configurations"
      ]
    },
    {
      "name": "Integrity Monitoring",
      "tags": [
        "Integrity Monitoring Rules"
      ]
    },
    {
      "name": "Intrusion Prevention",
      "tags": [
        "Application Types",
        "Intrusion Prevention Rules",
        "Contexts",
        "Schedules"
      ]
    },
    {
      "name": "Log Inspection",
      "tags": [
        "Log Inspection Rules"
      ]
    },
    {
      "name": "Application Control",
      "tags": [
        "Global Rules",
        "Rulesets",
        "Software Changes",
        "Software Inventories",
        "Trust Rules",
        "Trust Rulesets"
      ]
    },
    {
      "name": "Migration",
      "tags": [
        "Common Object Import Tasks",
        "Policy Import Tasks"
      ]
    },
    {
      "name": "Device Control",
      "tags": [
        "USB Storage Devices"
      ]
    }
  ],
  "components": {
    "requestBodies": {
      "RuleIDs": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/RuleIDs"
            }
          }
        },
        "description": "The ID numbers of the intrusion prevention rules to set."
      },
      "proxy": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/proxy"
            }
          }
        },
        "description": "The settings of the proxy to modify.",
        "required": true
      },
      "RuleIDs2": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/RuleIDs"
            }
          }
        },
        "description": "The ID numbers of the log inspection rules to add."
      },
      "RuleIDs3": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/RuleIDs"
            }
          }
        },
        "description": "The ID numbers of the log inspection rules to set."
      },
      "contact": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/contact"
            }
          }
        },
        "description": "The settings of the contact to modify.",
        "required": true
      },
      "syslogConfiguration": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/syslogConfiguration"
            }
          }
        },
        "description": "The settings of the syslog configuration to modify.",
        "required": true
      },
      "applicationType": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/applicationType"
            }
          }
        },
        "description": "The settings of the application type to modify.",
        "required": true
      },
      "RuleIDs4": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/RuleIDs"
            }
          }
        },
        "description": "The ID numbers of the firewall rules to set."
      },
      "intrusionPreventionRule": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/intrusionPreventionRule"
            }
          }
        },
        "description": "The settings of the intrusion prevention rule to modify.",
        "required": true
      },
      "searchFilter": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/searchFilter"
            }
          }
        },
        "description": "A collection of options used to filter the search results."
      },
      "ExceptionRules": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ExceptionRules"
            }
          }
        },
        "description": "Exception Rules for the device.",
        "required": true
      },
      "RuleIDs5": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/RuleIDs"
            }
          }
        },
        "description": "The ID numbers of the firewall rules to add.",
        "required": true
      },
      "firewallRule": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/firewallRule"
            }
          }
        },
        "description": "The settings of the firewall rule to modify.",
        "required": true
      },
      "RuleIDs6": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/RuleIDs"
            }
          }
        },
        "description": "The ID numbers of the integrity monitoring rules to add."
      },
      "RuleIDs7": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/RuleIDs"
            }
          }
        },
        "description": "The ID numbers of the integrity monitoring rules to set."
      },
      "integrityMonitoringRule": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/integrityMonitoringRule"
            }
          }
        },
        "description": "The settings of the integrity monitoring rule to modify.",
        "required": true
      },
      "RuleIDs8": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/RuleIDs"
            }
          }
        },
        "description": "The ID numbers of the intrusion prevention rules to add."
      },
      "logInspectionRule": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/logInspectionRule"
            }
          }
        },
        "description": "The settings of the log inspection rule to modify.",
        "required": true
      },
      "smartFolder": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/smartFolder"
            }
          }
        },
        "description": "The settings of the smart folder to modify.",
        "required": true
      }
    },
    "securitySchemes": {
      "Trend_Micro_Cloud_One_API_Key": {
        "description": "Authenticate with a Trend Micro Cloud One API key.\n\nFor information on creating and using a Trend Micro Cloud One API key, see the [API key help](https://cloudone.trendmicro.com/docs/account-and-user-management/c1-api-key/).\n\n```http\nAuthorization: ApiKey {apiKey}\n```\n",
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      },
      "Legacy_API_Key": {
        "description": "**DEPRECATED**\n\nAuthenticate with an API key from a Legacy Trend Micro Cloud One account.\n\nFor information on legacy accounts, see the [Accounts help](https://cloudone.trendmicro.com/docs/account-and-user-management/c1-accounts-about/).\n\nFor information on creating and using a legacy API key, see the Workload Security [API key help](https://cloudone.trendmicro.com/docs/workload-security/api-keys/).\n\n```http\napi-secret-key: {apiSecretKey}\n```\n",
        "type": "apiKey",
        "name": "api-secret-key",
        "in": "header"
      }
    },
    "schemas": {
      "accountDetails": {
        "type": "object",
        "properties": {
          "licenseMode": {
            "type": "string",
            "description": "License mode of the current Cloud One Account.",
            "readOnly": true
          },
          "cloudOneAccountID": {
            "type": "string",
            "description": "Account ID of the current Cloud One Account.",
            "readOnly": true
          },
          "cloudOneAccountName": {
            "type": "string",
            "description": "Account Name of the current Cloud One Account.",
            "readOnly": true
          }
        },
        "description": "Account details."
      },
      "activationCode": {
        "type": "object",
        "properties": {
          "activationCode": {
            "type": "string",
            "description": "The activation code"
          }
        },
        "description": "Activation code."
      },
      "AccountLicenseSync": {
        "type": "object",
        "properties": {
          "cloudOneBillingState": {
            "type": "string",
            "description": "CloudOneBilling license state. Valid values are 'licensed' and 'unlicensed'"
          },
          "expires": {
            "type": "string",
            "description": "The license expiration date."
          },
          "customerAccountID": {
            "type": "string",
            "description": "customer Account ID of the tenant."
          }
        },
        "description": "C1 License Sync information"
      },
      "administrator": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Username of the Administrator. Searchable as String. Not modifiable by Trend Micro Cloud One users."
          },
          "password": {
            "type": "string",
            "description": "Password of the Administrator. Not modifiable by Trend Micro Cloud One users."
          },
          "fullName": {
            "type": "string",
            "description": "Full name of the Administrator. Searchable as String. Not modifiable by Trend Micro Cloud One users."
          },
          "description": {
            "type": "string",
            "description": "Description of the Administrator. Searchable as String. Not modifiable by Trend Micro Cloud One users."
          },
          "roleID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the role assigned to the Administrator. Searchable as Numeric. Not modifiable by Trend Micro Cloud One users."
          },
          "locale": {
            "type": "string",
            "description": "Locale of the Administrator. Not modifiable by Trend Micro Cloud One users.",
            "enum": [
              "en-US",
              "ja-JP"
            ]
          },
          "timeZone": {
            "type": "string",
            "description": "Time zone of the Administrator. Searchable as String. Not modifiable by Trend Micro Cloud One users."
          },
          "timeFormat": {
            "type": "string",
            "description": "Time format preference of the Administrator. Can be either the 12-hour format or the 24-hour format. Searchable as Choice. Not modifiable by Trend Micro Cloud One users.",
            "enum": [
              "12",
              "24"
            ]
          },
          "passwordNeverExpires": {
            "type": "boolean",
            "description": "Enabled if the Administrator's password never expires. Defaults to `false`. Searchable as Boolean. Not modifiable by Trend Micro Cloud One users."
          },
          "active": {
            "type": "boolean",
            "description": "If set to `true`, the Administrator can authenticate. If set to `false`, the Administrator is locked out. Searchable as Boolean. Not modifiable by Trend Micro Cloud One users."
          },
          "mfaType": {
            "type": "string",
            "description": "Specifies the type of multi-factor authentication used to authenticate the Administrator. Defaults to `none`. Searchable as Choice. Not modifiable by Trend Micro Cloud One users.",
            "enum": [
              "none",
              "local-totp"
            ]
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number of the Administrator. Searchable as String."
          },
          "mobileNumber": {
            "type": "string",
            "description": "Mobile number of the Administrator. Searchable as String."
          },
          "pagerNumber": {
            "type": "string",
            "description": "Pager number of the Administrator. Searchable as String."
          },
          "emailAddress": {
            "type": "string",
            "description": "Email address of the Administrator. Searchable as String."
          },
          "primaryContact": {
            "type": "boolean",
            "description": "If set to `true`, the administrator is a primary contact. Primary contacts receive Deep Security as a Service account-related emails for that tenant. A valid `emailAddress` is required. Searchable as Boolean."
          },
          "receiveNotifications": {
            "type": "boolean",
            "description": "If set to `true`, alert emails will be sent to the Administrator. A valid `emailAddress` is required. Searchable as Boolean."
          },
          "reportPDFPasswordEnabled": {
            "type": "boolean",
            "description": "Controls whether the reports that the Administrator generates are password-protected. Set to `true` to password-protect, and `false` otherwise. Defaults to `false`. Searchable as Boolean."
          },
          "reportPDFPassword": {
            "type": "string",
            "description": "Password that protects the reports that the Administrator generates. Ignored when `reportPDFPasswordEnabled` is `false`."
          },
          "created": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp when the Administrator was created, in milliseconds since epoch. Searchable as Date.",
            "readOnly": true
          },
          "lastPasswordChange": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp when the Administrator's password was last changed, in milliseconds since epoch. Searchable as Date.",
            "readOnly": true
          },
          "lastSignIn": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp when the Administrator last signed in, in milliseconds since epoch. Searchable as Date.",
            "readOnly": true
          },
          "unlockTime": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp at which the Administrator will be unlocked, in milliseconds since epoch. Ignored if the Administrator is not locked out using a time-based lock out scheme. Searchable as Date.",
            "readOnly": true
          },
          "unsuccessfulSignInAttempts": {
            "type": "integer",
            "format": "int32",
            "description": "Number of unsuccessful sign-in attempts for the Administrator. This number is reset to `0` when a successful authentication occurs. Searchable as Numeric.",
            "readOnly": true
          },
          "directoryName": {
            "type": "string",
            "description": "Security Account Manager (SAM) account name for the Administrator. Ignored if the Administrator is not managed by an identity provider. Searchable as String.",
            "readOnly": true
          },
          "directoryInfo": {
            "type": "string",
            "description": "Unique ID used for single sign-on using a Security Account Manager (SAM) identity provider. Ignored if the Administrator is not managed by an identity provider.",
            "readOnly": true
          },
          "external": {
            "type": "boolean",
            "description": "If set to `true` the Administrator is externally authenticated using SAML. Defaults to `false`. Ignored if the Administrator is not externally authenticated. Searchable as Boolean.",
            "readOnly": true
          },
          "externalUserID": {
            "type": "string",
            "description": "SAML User ID of the Administrator. Used to support external authentication of the Administrator. Ignored if the Administrator is not externally authenticated. Searchable as String.",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "Administrator account type. Can either be `normal` or `temporary`. Defaults to `normal`. Searchable as Choice.",
            "readOnly": true,
            "enum": [
              "normal",
              "temporary"
            ]
          },
          "readOnly": {
            "type": "boolean",
            "description": "Set to `true` if the Administrator is read-only. Defaults to `false`. Searchable as Boolean.",
            "readOnly": true
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the Administrator. Searchable as ID.",
            "readOnly": true
          },
          "UTCOffset": {
            "type": "string",
            "description": "UTC offset of the Administrator."
          }
        },
        "description": "Administrator details. An Administrator object represents a Deep Security user."
      },
      "Administrators": {
        "type": "object",
        "properties": {
          "administrators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/administrator"
            }
          }
        }
      },
      "searchCriteria": {
        "type": "object",
        "properties": {
          "fieldName": {
            "type": "string",
            "description": "Name of the field to be tested. Required for all tests except idTest."
          },
          "booleanTest": {
            "type": "boolean",
            "description": "Boolean test, suitable for boolean fields. Default \"true\"."
          },
          "numericTest": {
            "type": "string",
            "description": "Numeric test, suitable for numeric fields, used in conjuction with the numericValue. Default \"equal\".",
            "enum": [
              "less-than",
              "less-than-or-equal",
              "equal",
              "greater-than-or-equal",
              "greater-than",
              "not-equal",
              "in",
              "not-in"
            ]
          },
          "numericValue": {
            "type": "number",
            "format": "double",
            "description": "Value used by the numericTest. Required when performing a numericTest."
          },
          "numericValueList": {
            "type": "array",
            "description": "Value list used by the numericTest. Required when performing a numericTest with IN/NOT-IN operator.",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "stringTest": {
            "type": "string",
            "description": "String test, suitable for string fields, used in conjuction with the stringValue and stringWildcards. Default \"equal\".",
            "enum": [
              "equal",
              "not-equal"
            ]
          },
          "stringValue": {
            "type": "string",
            "description": "Value used by the stringTest. Required when performing a stringTest."
          },
          "stringWildcards": {
            "type": "boolean",
            "description": "Controls whether or not wildcard characters (`%` and `_`) are treated as wildcards (true) or regular characters (false). Default \"true\"."
          },
          "choiceTest": {
            "type": "string",
            "description": "Choice test, suitable for enum fields, used in conjuction with the choiceValue. Default \"equal\".",
            "enum": [
              "equal",
              "not-equal"
            ]
          },
          "choiceValue": {
            "type": "string",
            "description": "Value used by the choiceTest. Required when performing a choiceTest."
          },
          "firstDateValue": {
            "type": "integer",
            "format": "int64",
            "description": "First (low) date used to find objects within a date range.  Null (the default) implies no lower limit on the date range."
          },
          "firstDateInclusive": {
            "type": "boolean",
            "description": "Indicates whether the results should include (true) or exclude (false) an exact match for the firstDateValue. Default \"true\"."
          },
          "lastDateValue": {
            "type": "integer",
            "format": "int64",
            "description": "Last (high) date used to find objects within a date range.  Null (the default) implies no upper limit on the date range."
          },
          "lastDateInclusive": {
            "type": "boolean",
            "description": "Indicates whether the results should include (true) or exclude (false) an exact match for the lastDateValue. Default \"true\"."
          },
          "nullTest": {
            "type": "boolean",
            "description": "Null test, suitable for finding fields containing a null value."
          },
          "versionTest": {
            "type": "string",
            "description": "Version test, suitable for version fields, used in conjuction with the versionValue. Default \"equal\".",
            "enum": [
              "less-than",
              "less-than-or-equal",
              "equal",
              "greater-than-or-equal",
              "greater-than",
              "not-equal"
            ]
          },
          "versionValue": {
            "type": "string",
            "description": "Value used by the versionTest. Required when performing a versionTest."
          },
          "idValue": {
            "type": "integer",
            "format": "int64"
          },
          "idTest": {
            "type": "string",
            "enum": [
              "less-than",
              "less-than-or-equal",
              "equal",
              "greater-than-or-equal",
              "greater-than",
              "not-equal",
              "in",
              "not-in"
            ]
          },
          "idValueList": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "description": "Defines search criteria for use within a SearchFilter. Identifies the field of an object to test, the value to test against, and the type of test to perform, such as \\\"equal\"\\ or \\\"greater-than\"\\."
      },
      "searchFilter": {
        "type": "object",
        "properties": {
          "maxItems": {
            "type": "integer",
            "format": "int32",
            "description": "Limits the number of objects returned. Default 5000."
          },
          "searchCriteria": {
            "type": "array",
            "description": "Array of search critiera used to filter objects. Searching with multiple criteria returns results that satisfy all of the criteria. Searching with no criteria returns all objects.",
            "items": {
              "$ref": "#/components/schemas/searchCriteria"
            }
          },
          "sortByObjectID": {
            "type": "boolean",
            "description": "If true, forces the response objects to be sorted by ID, overriding the default sort order. Default \"false\"."
          }
        },
        "description": "Allows clients to obtain a filtered list of objects based on various search criteria."
      },
      "AdministratorRoles": {
        "type": "object",
        "properties": {
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/role"
            }
          }
        }
      },
      "accountRights": {
        "type": "object",
        "properties": {
          "canDeleteAccounts": {
            "type": "boolean",
            "description": "Right to delete accounts."
          },
          "canUpdateAccounts": {
            "type": "boolean",
            "description": "Right to update accounts."
          },
          "canViewAccountBilling": {
            "type": "boolean",
            "description": "Right to view account billing."
          }
        },
        "description": "Account right details."
      },
      "administratorRights": {
        "type": "object",
        "properties": {
          "canCreateNewAdministrators": {
            "type": "boolean",
            "description": "Right to create new administrators."
          },
          "canDeleteAdministrators": {
            "type": "boolean",
            "description": "Right to delete administrators."
          },
          "canEditAdministratorProperties": {
            "type": "boolean",
            "description": "Right to edit administrators."
          },
          "canViewAdministrators": {
            "type": "boolean",
            "description": "Right to view administrators."
          }
        },
        "description": "Administrator right details."
      },
      "administratorRoleRights": {
        "type": "object",
        "properties": {
          "canCreateNewAdministratorRoles": {
            "type": "boolean",
            "description": "Right to create new administrator roles."
          },
          "canDeleteAdministratorRoles": {
            "type": "boolean",
            "description": "Right to delete administrator roles."
          },
          "canEditAdministratorRoleProperties": {
            "type": "boolean",
            "description": "Right to edit administrator roles."
          },
          "canViewAdministratorRoles": {
            "type": "boolean",
            "description": "Right to view administrator roles."
          }
        },
        "description": "Administrator role right details."
      },
      "agentVersionControlRights": {
        "type": "object",
        "properties": {
          "canEditAgentVersionControls": {
            "type": "boolean",
            "description": "Right to edit agent version control."
          }
        },
        "description": "Agent version control right details."
      },
      "alertConfigurationRights": {
        "type": "object",
        "properties": {
          "canEditAlertConfigurations": {
            "type": "boolean",
            "description": "Right to edit alert configurations."
          }
        },
        "description": "Alert Configuration right details."
      },
      "alertRights": {
        "type": "object",
        "properties": {
          "canDismissGlobalAlerts": {
            "type": "boolean",
            "description": "Right to dismiss global alerts."
          }
        },
        "description": "Alert right details."
      },
      "antiMalwareConfigurationRights": {
        "type": "object",
        "properties": {
          "canCreateNewAntiMalwareConfigurations": {
            "type": "boolean",
            "description": "Right to create new antimalware configurations."
          },
          "canDeleteAntiMalwareConfigurations": {
            "type": "boolean",
            "description": "Right to delete antimalware configurations."
          },
          "canEditAntiMalwareConfigurations": {
            "type": "boolean",
            "description": "Right to edit antimalware configurations."
          }
        },
        "description": "Anti malware configuration right details."
      },
      "antiMalwareRights": {
        "type": "object",
        "properties": {
          "antiMalwareConfigurationRights": {
            "$ref": "#/components/schemas/antiMalwareConfigurationRights"
          },
          "directoryListRights": {
            "$ref": "#/components/schemas/directoryListRights"
          },
          "fileListRights": {
            "$ref": "#/components/schemas/fileListRights"
          },
          "fileExtensionListRights": {
            "$ref": "#/components/schemas/fileExtensionListRights"
          },
          "identifiedFileRights": {
            "$ref": "#/components/schemas/identifiedFileRights"
          }
        },
        "description": "Anti malware rights details."
      },
      "apiKeyRights": {
        "type": "object",
        "properties": {
          "canCreateNewApiKeys": {
            "type": "boolean",
            "description": "Right to create new api keys."
          },
          "canDeleteApiKeys": {
            "type": "boolean",
            "description": "Right to delete api keys."
          },
          "canEditApiKeyProperties": {
            "type": "boolean",
            "description": "Right to edit api keys."
          },
          "canViewApiKeys": {
            "type": "boolean",
            "description": "Right to view api keys."
          }
        },
        "description": "API Key right details."
      },
      "applicationControlRights": {
        "type": "object",
        "properties": {
          "driftRights": {
            "$ref": "#/components/schemas/driftRights"
          },
          "rulesetRights": {
            "$ref": "#/components/schemas/rulesetRights"
          },
          "ruleRights": {
            "$ref": "#/components/schemas/ruleRights"
          },
          "softwareInventoryRights": {
            "$ref": "#/components/schemas/softwareInventoryRights"
          },
          "trustEntityManagementRights": {
            "$ref": "#/components/schemas/trustEntityManagementRights"
          }
        },
        "description": "Application control rights details."
      },
      "applicationTypeRights": {
        "type": "object",
        "properties": {
          "canCreateNewApplicationTypes": {
            "type": "boolean",
            "description": "Right to create new application types."
          },
          "canDeleteApplicationTypes": {
            "type": "boolean",
            "description": "Right to delete application types."
          },
          "canEditApplicationTypeProperties": {
            "type": "boolean",
            "description": "Right to edit application type properties."
          }
        },
        "description": "Application type right details."
      },
      "assetValueRights": {
        "type": "object",
        "properties": {
          "canCreateNewAssetValues": {
            "type": "boolean",
            "description": "Right to create new asset values."
          },
          "canDeleteAssetValues": {
            "type": "boolean",
            "description": "Right to delete asset values."
          },
          "canEditAssetValueProperties": {
            "type": "boolean",
            "description": "Right to edit asset value properties."
          }
        },
        "description": "Asset value right details."
      },
      "certificateRights": {
        "type": "object",
        "properties": {
          "canCreateNewCertificates": {
            "type": "boolean",
            "description": "Right to create new certificates."
          },
          "canDeleteCertificates": {
            "type": "boolean",
            "description": "Right to delete certificates."
          }
        },
        "description": "Certificate right details."
      },
      "computerRights": {
        "type": "object",
        "properties": {
          "canAddAndRemoveComputerGroups": {
            "type": "boolean",
            "description": "Right to add and remove computer groups."
          },
          "canCreateNewComputers": {
            "type": "boolean",
            "description": "Right to create new computers."
          },
          "canDeleteComputers": {
            "type": "boolean",
            "description": "Right to delete computers."
          },
          "canDismissAlerts": {
            "type": "boolean",
            "description": "Right to dismiss computer alerts."
          },
          "canEditComputerProperties": {
            "type": "boolean",
            "description": "Right to edit computer properties."
          },
          "canImportComputers": {
            "type": "boolean",
            "description": "Right to import computers."
          },
          "canManageCloudAccounts": {
            "type": "boolean",
            "description": "Right to manage cloud accounts."
          },
          "canManageDirectories": {
            "type": "boolean",
            "description": "Right to manage directories."
          },
          "canManageVCenters": {
            "type": "boolean",
            "description": "Right to manage VMware vCenters."
          },
          "canTagComputers": {
            "type": "boolean",
            "description": "Right to tag computers."
          },
          "canViewNotRelatedToComputers": {
            "type": "boolean",
            "description": "Right to view events and alerts not related to computers."
          },
          "canViewOtherComputers": {
            "type": "boolean",
            "description": "Right to view non-selected computers."
          }
        },
        "description": "Computer right details."
      },
      "contactRights": {
        "type": "object",
        "properties": {
          "canCreateNewContacts": {
            "type": "boolean",
            "description": "Right to create new contacts."
          },
          "canDeleteContacts": {
            "type": "boolean",
            "description": "Right to delete contacts."
          },
          "canEditContactProperties": {
            "type": "boolean",
            "description": "Right to edit contacts."
          },
          "canViewContacts": {
            "type": "boolean",
            "description": "Right to view contacts."
          }
        },
        "description": "Contact right details."
      },
      "contextRights": {
        "type": "object",
        "properties": {
          "canCreateNewContexts": {
            "type": "boolean",
            "description": "Right to create new contexts."
          },
          "canDeleteContexts": {
            "type": "boolean",
            "description": "Right to delete contexts."
          },
          "canEditContextProperties": {
            "type": "boolean",
            "description": "Right to edit context properties."
          }
        },
        "description": "Context right details."
      },
      "dataCenterGatewayRights": {
        "type": "object",
        "properties": {
          "canCreateNewDataCenterGateways": {
            "type": "boolean",
            "description": "Right to create new data center gateways."
          },
          "canViewDataCenterGateways": {
            "type": "boolean",
            "description": "Right to view data center gateways."
          },
          "canEditDataCenterGateways": {
            "type": "boolean",
            "description": "Right to edit data center gateways."
          },
          "canDeleteDataCenterGateways": {
            "type": "boolean",
            "description": "Right to delete data center gateways."
          }
        },
        "description": "Data Center Gateway right details."
      },
      "deviceControlRights": {
        "type": "object",
        "properties": {
          "usbDeviceRights": {
            "$ref": "#/components/schemas/usbDeviceRights"
          }
        },
        "description": "Device control permission details."
      },
      "diagnosticRights": {
        "type": "object",
        "properties": {
          "canCreateDiagnosticPackages": {
            "type": "boolean",
            "description": "Right to create diagnostic packages."
          }
        },
        "description": "Diagnostic right details."
      },
      "directoryListRights": {
        "type": "object",
        "properties": {
          "canCreateNewDirectoryLists": {
            "type": "boolean",
            "description": "Right to create new directory lists."
          },
          "canDeleteDirectoryLists": {
            "type": "boolean",
            "description": "Right to delete directory lists."
          },
          "canEditDirectoryListProperties": {
            "type": "boolean",
            "description": "Right to edit directory list properties."
          }
        },
        "description": "Directory list right details."
      },
      "driftRights": {
        "type": "object",
        "properties": {
          "canAllowOrBlockDrift": {
            "type": "boolean",
            "description": "Right to allow or block unrecognized software."
          },
          "canViewDrift": {
            "type": "boolean",
            "description": "Right to view unrecognized software."
          }
        },
        "description": "Drift right details."
      },
      "expertSettingRights": {
        "type": "object",
        "properties": {
          "canEditExpertSettings": {
            "type": "boolean",
            "description": "Right to edit expert settings."
          },
          "canViewExpertSettings": {
            "type": "boolean",
            "description": "Right to view expert settings."
          }
        },
        "description": "Expert Setting right details."
      },
      "featureFlagsRights": {
        "type": "object",
        "properties": {
          "canViewFeatureFlags": {
            "type": "boolean",
            "description": "Right to view Feature Flags."
          }
        },
        "description": "Feature Flags right details."
      },
      "fileExtensionListRights": {
        "type": "object",
        "properties": {
          "canCreateNewFileExtensionLists": {
            "type": "boolean",
            "description": "Right to create new file extension lists."
          },
          "canDeleteFileExtensionLists": {
            "type": "boolean",
            "description": "Right to delete file extension lists."
          },
          "canEditFileExtensionListProperties": {
            "type": "boolean",
            "description": "Right to edit file extension list properties."
          }
        },
        "description": "File extension list right details."
      },
      "fileListRights": {
        "type": "object",
        "properties": {
          "canCreateNewFileLists": {
            "type": "boolean",
            "description": "Right to create new file lists."
          },
          "canDeleteFileLists": {
            "type": "boolean",
            "description": "Right to delete file lists."
          },
          "canEditFileListProperties": {
            "type": "boolean",
            "description": "Right to edit file list properties."
          }
        },
        "description": "File list right details."
      },
      "firewallRights": {
        "type": "object",
        "properties": {
          "contextRights": {
            "$ref": "#/components/schemas/contextRights"
          },
          "firewallRuleRights": {
            "$ref": "#/components/schemas/firewallRuleRights"
          },
          "statefulConfigurationRights": {
            "$ref": "#/components/schemas/statefulConfigurationRights"
          },
          "macListRights": {
            "$ref": "#/components/schemas/macListRights"
          }
        },
        "description": "Firewall rights details."
      },
      "firewallRuleRights": {
        "type": "object",
        "properties": {
          "canCreateNewFirewallRules": {
            "type": "boolean",
            "description": "Right to create new firewall rules."
          },
          "canDeleteFirewallRules": {
            "type": "boolean",
            "description": "Right to delete firewall rules."
          },
          "canEditFirewallRuleProperties": {
            "type": "boolean",
            "description": "Right to edit firewall rule properties."
          }
        },
        "description": "Firewall rule right details."
      },
      "fixRights": {
        "type": "object",
        "properties": {
          "canViewFixes": {
            "type": "boolean",
            "description": "Right to view fixes."
          }
        },
        "description": "Fix right details."
      },
      "heapRights": {
        "type": "object",
        "properties": {
          "canViewHeap": {
            "type": "boolean",
            "description": "Right to view the heap."
          }
        },
        "description": "Heap right details."
      },
      "hostedServiceRights": {
        "type": "object",
        "properties": {
          "accountRights": {
            "$ref": "#/components/schemas/accountRights"
          },
          "fixRights": {
            "$ref": "#/components/schemas/fixRights"
          },
          "heapRights": {
            "$ref": "#/components/schemas/heapRights"
          },
          "licenseRateRights": {
            "$ref": "#/components/schemas/licenseRateRights"
          },
          "queryRights": {
            "$ref": "#/components/schemas/queryRights"
          },
          "featureFlagsRights": {
            "$ref": "#/components/schemas/featureFlagsRights"
          },
          "queryTracebackRights": {
            "$ref": "#/components/schemas/queryTracebackRights"
          },
          "serverLogRights": {
            "$ref": "#/components/schemas/serverLogRights"
          },
          "stackTraceRights": {
            "$ref": "#/components/schemas/stackTraceRights"
          },
          "networkSecurityRights": {
            "$ref": "#/components/schemas/networkSecurityRights"
          }
        },
        "description": "Hosted service rights details."
      },
      "identifiedFileRights": {
        "type": "object",
        "properties": {
          "canDeleteIdentifiedFiles": {
            "type": "boolean",
            "description": "Right to delete identified files."
          },
          "canDownloadIdentifiedFiles": {
            "type": "boolean",
            "description": "Right to download identified files."
          },
          "canRestoreIdentifiedFiles": {
            "type": "boolean",
            "description": "Right to restore identified files."
          },
          "canSubmitIdentifiedFiles": {
            "type": "boolean",
            "description": "Right to submit identified files to Deep Discovery Analyzer."
          }
        },
        "description": "Identified file right details."
      },
      "integrityMonitoringRights": {
        "type": "object",
        "properties": {
          "integrityMonitoringRuleRights": {
            "$ref": "#/components/schemas/integrityMonitoringRuleRights"
          }
        },
        "description": "Integrity monitoring rights details."
      },
      "integrityMonitoringRuleRights": {
        "type": "object",
        "properties": {
          "canCreateNewIntegrityMonitoringRules": {
            "type": "boolean",
            "description": "Right to create new integrity monitoring rules."
          },
          "canDeleteIntegrityMonitoringRules": {
            "type": "boolean",
            "description": "Right to delete integrity monitoring rules."
          },
          "canEditIntegrityMonitoringRuleProperties": {
            "type": "boolean",
            "description": "Right to edit integrity monitoring rule properties."
          }
        },
        "description": "Integrity monitoring rule right details."
      },
      "intrusionPreventionRights": {
        "type": "object",
        "properties": {
          "applicationTypeRights": {
            "$ref": "#/components/schemas/applicationTypeRights"
          },
          "intrusionPreventionRuleRights": {
            "$ref": "#/components/schemas/intrusionPreventionRuleRights"
          }
        },
        "description": "Intrusion prevention rights details."
      },
      "intrusionPreventionRuleRights": {
        "type": "object",
        "properties": {
          "canCreateNewIntrusionPreventionRules": {
            "type": "boolean",
            "description": "Right to create new intrusion prevention rules."
          },
          "canDeleteIntrusionPreventionRules": {
            "type": "boolean",
            "description": "Right to delete intrusion prevention rules."
          },
          "canEditIntrusionPreventionRuleProperties": {
            "type": "boolean",
            "description": "Right to edit intrusion prevention rule properties."
          }
        },
        "description": "Intrusion prevention rule right details."
      },
      "ipListRights": {
        "type": "object",
        "properties": {
          "canCreateNewIPLists": {
            "type": "boolean",
            "description": "Right to create new IP lists."
          },
          "canDeleteIPLists": {
            "type": "boolean",
            "description": "Right to delete IP lists."
          },
          "canEditIPListProperties": {
            "type": "boolean",
            "description": "Right to edit IP lists."
          }
        },
        "description": "IP List right details."
      },
      "licenseRateRights": {
        "type": "object",
        "properties": {
          "canSaveLicenseRates": {
            "type": "boolean",
            "description": "Right to save license rates."
          },
          "canViewLicenseRates": {
            "type": "boolean",
            "description": "Right to view license rates."
          }
        },
        "description": "License rate right details."
      },
      "licenseRights": {
        "type": "object",
        "properties": {
          "canChangeLicense": {
            "type": "boolean",
            "description": "Right to change license."
          },
          "canViewLicense": {
            "type": "boolean",
            "description": "Right to view license."
          }
        },
        "description": "License right details."
      },
      "logInspectionDecoderRights": {
        "type": "object",
        "properties": {
          "canCreateNewLogInspectionDecoders": {
            "type": "boolean",
            "description": "Right to create new log inspection decoders."
          },
          "canDeleteLogInspectionDecoders": {
            "type": "boolean",
            "description": "Right to delete log inspection decoders."
          },
          "canEditLogInspectionDecoderProperties": {
            "type": "boolean",
            "description": "Right to edit log inspection decoder properties."
          }
        },
        "description": "Log inspection decoder right details."
      },
      "logInspectionRights": {
        "type": "object",
        "properties": {
          "logInspectionDecoderRights": {
            "$ref": "#/components/schemas/logInspectionDecoderRights"
          },
          "logInspectionRuleRights": {
            "$ref": "#/components/schemas/logInspectionRuleRights"
          }
        },
        "description": "Log inspection rights details."
      },
      "logInspectionRuleRights": {
        "type": "object",
        "properties": {
          "canCreateNewLogInspectionRules": {
            "type": "boolean",
            "description": "Right to create new log inspection rules."
          },
          "canDeleteLogInspectionRules": {
            "type": "boolean",
            "description": "Right to delete log inspection rules."
          },
          "canEditLogInspectionRuleProperties": {
            "type": "boolean",
            "description": "Right to edit log inspection rule properties."
          }
        },
        "description": "Log inspection rule right details."
      },
      "macListRights": {
        "type": "object",
        "properties": {
          "canCreateNewMACLists": {
            "type": "boolean",
            "description": "Right to create new MAC List objects."
          },
          "canDeleteMACLists": {
            "type": "boolean",
            "description": "Right to delete MAC List objects."
          },
          "canEditMACListProperties": {
            "type": "boolean",
            "description": "Right to edit MAC List object properties."
          }
        },
        "description": "MAC list right details."
      },
      "multiTenantRights": {
        "type": "object",
        "properties": {
          "canCreateTenants": {
            "type": "boolean",
            "description": "Right to create new tenants."
          },
          "canDeleteTenants": {
            "type": "boolean",
            "description": "Right to delete tenants."
          },
          "canEditTenantGeneralProperties": {
            "type": "boolean",
            "description": "Right to edit tenant general properties."
          },
          "canEditTenantModules": {
            "type": "boolean",
            "description": "Right to edit tenant modules."
          },
          "canEditTenantAccountDetails": {
            "type": "boolean",
            "description": "Right to edit tenant account details."
          },
          "canEditTenantFeatures": {
            "type": "boolean",
            "description": "Right to edit tenant features."
          },
          "canEditTenantSettings": {
            "type": "boolean",
            "description": "Right to edit tenant settings."
          },
          "canCreateAndEditTenantDatabaseServers": {
            "type": "boolean",
            "description": "Right to create and edit tenant database servers."
          },
          "canDeleteTenantDatabaseServers": {
            "type": "boolean",
            "description": "Right to delete tenant database servers."
          },
          "canManageTenantAPIKeys": {
            "type": "boolean",
            "description": "Right to manage tenant API keys."
          },
          "canSignInAsTenant": {
            "type": "boolean",
            "description": "Right to sign in as tenant."
          },
          "canViewTenants": {
            "type": "boolean",
            "description": "Right to view tenants and multi-tenancy system settings."
          }
        },
        "description": "Multi tenant right details."
      },
      "networkSecurityRights": {
        "type": "object",
        "properties": {
          "canCreateDeviceAuthorizationTokens": {
            "type": "boolean",
            "description": "Right to create Network Security Device authorization tokens."
          }
        },
        "description": "Network Security right details."
      },
      "platformRights": {
        "type": "object",
        "properties": {
          "administratorRights": {
            "$ref": "#/components/schemas/administratorRights"
          },
          "administratorRoleRights": {
            "$ref": "#/components/schemas/administratorRoleRights"
          },
          "agentVersionControlRights": {
            "$ref": "#/components/schemas/agentVersionControlRights"
          },
          "alertConfigurationRights": {
            "$ref": "#/components/schemas/alertConfigurationRights"
          },
          "alertRights": {
            "$ref": "#/components/schemas/alertRights"
          },
          "certificateRights": {
            "$ref": "#/components/schemas/certificateRights"
          },
          "computerRights": {
            "$ref": "#/components/schemas/computerRights"
          },
          "contactRights": {
            "$ref": "#/components/schemas/contactRights"
          },
          "dataCenterGatewayRights": {
            "$ref": "#/components/schemas/dataCenterGatewayRights"
          },
          "diagnosticRights": {
            "$ref": "#/components/schemas/diagnosticRights"
          },
          "assetValueRights": {
            "$ref": "#/components/schemas/assetValueRights"
          },
          "licenseRights": {
            "$ref": "#/components/schemas/licenseRights"
          },
          "multiTenantRights": {
            "$ref": "#/components/schemas/multiTenantRights"
          },
          "policyRights": {
            "$ref": "#/components/schemas/policyRights"
          },
          "portListRights": {
            "$ref": "#/components/schemas/portListRights"
          },
          "proxyRights": {
            "$ref": "#/components/schemas/proxyRights"
          },
          "relayGroupRights": {
            "$ref": "#/components/schemas/relayGroupRights"
          },
          "scanCacheRights": {
            "$ref": "#/components/schemas/scanCacheRights"
          },
          "scheduledTaskRights": {
            "$ref": "#/components/schemas/scheduledTaskRights"
          },
          "scheduleRights": {
            "$ref": "#/components/schemas/scheduleRights"
          },
          "settingRights": {
            "$ref": "#/components/schemas/settingRights"
          },
          "expertSettingRights": {
            "$ref": "#/components/schemas/expertSettingRights"
          },
          "syslogConfigurationRights": {
            "$ref": "#/components/schemas/syslogConfigurationRights"
          },
          "systemInformationRights": {
            "$ref": "#/components/schemas/systemInformationRights"
          },
          "taggingRights": {
            "$ref": "#/components/schemas/taggingRights"
          },
          "updateRights": {
            "$ref": "#/components/schemas/updateRights"
          },
          "apikeyRights": {
            "$ref": "#/components/schemas/apiKeyRights"
          },
          "iplistRights": {
            "$ref": "#/components/schemas/ipListRights"
          },
          "samlidentityProviderRights": {
            "$ref": "#/components/schemas/samlIdentityProviderRights"
          }
        },
        "description": "Platform rights details."
      },
      "policyRights": {
        "type": "object",
        "properties": {
          "canCreateNewPolicies": {
            "type": "boolean",
            "description": "Right to create new policies."
          },
          "canDeletePolicies": {
            "type": "boolean",
            "description": "Right to delete policies."
          },
          "canEditPolicyProperties": {
            "type": "boolean",
            "description": "Right to edit policy properties."
          },
          "canImportPolicies": {
            "type": "boolean",
            "description": "Right to import policies."
          },
          "canViewOtherPolicies": {
            "type": "boolean",
            "description": "Right to view non-selected policies."
          }
        },
        "description": "Policy right details."
      },
      "portListRights": {
        "type": "object",
        "properties": {
          "canCreateNewPortLists": {
            "type": "boolean",
            "description": "Right to create new port lists."
          },
          "canDeletePortLists": {
            "type": "boolean",
            "description": "Right to delete port lists."
          },
          "canEditPortListProperties": {
            "type": "boolean",
            "description": "Right to edit port list properties."
          }
        },
        "description": "Port list right details."
      },
      "proxyRights": {
        "type": "object",
        "properties": {
          "canCreateNewProxies": {
            "type": "boolean",
            "description": "Right to create new proxies."
          },
          "canDeleteProxies": {
            "type": "boolean",
            "description": "Right to delete proxies."
          },
          "canEditProxyProperties": {
            "type": "boolean",
            "description": "Right to edit proxy properties."
          }
        },
        "description": "Proxy right details."
      },
      "queryRights": {
        "type": "object",
        "properties": {
          "canViewQuery": {
            "type": "boolean",
            "description": "Right to view the query page."
          }
        },
        "description": "Query right details."
      },
      "queryTracebackRights": {
        "type": "object",
        "properties": {
          "canViewQueryTracebacks": {
            "type": "boolean",
            "description": "Right to view query tracebacks."
          }
        },
        "description": "Query traceback right details."
      },
      "relayGroupRights": {
        "type": "object",
        "properties": {
          "canCreateNewRelayGroups": {
            "type": "boolean",
            "description": "Right to create new relay groups."
          },
          "canDeleteRelayGroups": {
            "type": "boolean",
            "description": "Right to delete relay groups."
          },
          "canEditRelayGroupProperties": {
            "type": "boolean",
            "description": "Right to edit relay group properties."
          }
        },
        "description": "Relay group right details."
      },
      "rights": {
        "type": "object",
        "properties": {
          "platformRights": {
            "$ref": "#/components/schemas/platformRights"
          },
          "antiMalwareRights": {
            "$ref": "#/components/schemas/antiMalwareRights"
          },
          "webReputationRights": {
            "$ref": "#/components/schemas/webReputationRights"
          },
          "sensingModeRights": {
            "$ref": "#/components/schemas/sensingModeRights"
          },
          "firewallRights": {
            "$ref": "#/components/schemas/firewallRights"
          },
          "intrusionPreventionRights": {
            "$ref": "#/components/schemas/intrusionPreventionRights"
          },
          "integrityMonitoringRights": {
            "$ref": "#/components/schemas/integrityMonitoringRights"
          },
          "logInspectionRights": {
            "$ref": "#/components/schemas/logInspectionRights"
          },
          "applicationControlRights": {
            "$ref": "#/components/schemas/applicationControlRights"
          },
          "hostedServiceRights": {
            "$ref": "#/components/schemas/hostedServiceRights"
          }
        },
        "description": "Administrator rights details."
      },
      "role": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the administrator role. Searchable as String."
          },
          "description": {
            "type": "string",
            "description": "Description of the administrator role. Searchable as String."
          },
          "urn": {
            "type": "string",
            "description": "Uniform resource name.",
            "readOnly": true
          },
          "immutable": {
            "type": "boolean",
            "description": "The default immutable role in Deep Security Manager.",
            "readOnly": true
          },
          "canOnlyManipulateUsersWithEqualOrLesserRights": {
            "type": "boolean",
            "description": "Controls whether or not the role can only manipulate users with equal or lesser rights. Searchable as Boolean."
          },
          "allComputers": {
            "type": "boolean",
            "description": "Controls whether or not the role is allowed to access all computers. Searchable as Boolean."
          },
          "allPolicies": {
            "type": "boolean",
            "description": "Controls whether or not the role is allowed to access all policies. Searchable as Boolean."
          },
          "allowUserInterface": {
            "type": "boolean",
            "description": "Controls whether or not the role is allowed to use the user interface. Searchable as Boolean."
          },
          "allowWebService": {
            "type": "boolean",
            "description": "Controls whether or not the role is allowed to use the web service API. Searchable as Boolean."
          },
          "rights": {
            "$ref": "#/components/schemas/rights"
          },
          "computerIDs": {
            "type": "array",
            "description": "List of computer IDs that the role can access. Ignored if 'allComputers' is true.",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "computerGroupIDs": {
            "type": "array",
            "description": "List of computer group IDs that the role can access. A group ID of '0' allows access to computers not in a computer group. Note that groups must be identified individually and that access to sub-groups is not automatically granted. Ignored if 'allComputers' is true.",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "policyIDs": {
            "type": "array",
            "description": "List of policy IDs that the role can access. Ignored if 'allPolicies' is true.",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the administrator role. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "Administrator role details."
      },
      "ruleRights": {
        "type": "object",
        "properties": {
          "canCreateNewAppControlRules": {
            "type": "boolean",
            "description": "Right to create new rules."
          },
          "canDeleteAppControlRules": {
            "type": "boolean",
            "description": "Right to delete a rule."
          },
          "canEditAppControlRulesProperties": {
            "type": "boolean",
            "description": "Right to edit rule properties."
          },
          "canViewAppControlRules": {
            "type": "boolean",
            "description": "Right to view rules."
          }
        },
        "description": "Rule right details."
      },
      "rulesetRights": {
        "type": "object",
        "properties": {
          "canCreateNewRulesets": {
            "type": "boolean",
            "description": "Right to create new rulesets."
          },
          "canDeleteRulesets": {
            "type": "boolean",
            "description": "Right to delete rulesets."
          },
          "canEditRulesetProperties": {
            "type": "boolean",
            "description": "Right to edit ruleset properties."
          },
          "canViewRulesets": {
            "type": "boolean",
            "description": "Right to view rulesets."
          }
        },
        "description": "Ruleset right details."
      },
      "samlIdentityProviderRights": {
        "type": "object",
        "properties": {
          "canCreateNewSAMLIdentityProviders": {
            "type": "boolean",
            "description": "Right to create new SAML identity providers."
          },
          "canDeleteSAMLIdentityProviders": {
            "type": "boolean",
            "description": "Right to delete SAML identity providers."
          },
          "canEditSAMLIdentityProviders": {
            "type": "boolean",
            "description": "Right to edit SAML identity providers."
          },
          "canViewSAMLIdentityProviders": {
            "type": "boolean",
            "description": "Right to view SAML identity providers."
          }
        },
        "description": "SAML Identity Provider right details."
      },
      "scanCacheRights": {
        "type": "object",
        "properties": {
          "canManageScanCache": {
            "type": "boolean",
            "description": "Right to manage scan cache configuration."
          }
        },
        "description": "Scan cache right details."
      },
      "scheduleRights": {
        "type": "object",
        "properties": {
          "canCreateNewSchedules": {
            "type": "boolean",
            "description": "Right to create new schedules."
          },
          "canDeleteSchedules": {
            "type": "boolean",
            "description": "Right to delete schedules."
          },
          "canEditScheduleProperties": {
            "type": "boolean",
            "description": "Right to edit schedule properties."
          }
        },
        "description": "Schedule right details."
      },
      "scheduledTaskRights": {
        "type": "object",
        "properties": {
          "canCreateNewScheduledTasks": {
            "type": "boolean",
            "description": "Right to create new scheduled tasks."
          },
          "canDeleteScheduledTasks": {
            "type": "boolean",
            "description": "Right to delete scheduled tasks."
          },
          "canEditScheduledTaskProperties": {
            "type": "boolean",
            "description": "Right to edit scheduled task properties."
          },
          "canExecuteScheduledTasks": {
            "type": "boolean",
            "description": "Right to execute scheduled tasks."
          },
          "canViewScheduledTasks": {
            "type": "boolean",
            "description": "Right to view scheduled tasks."
          }
        },
        "description": "Scheduled task right details."
      },
      "sensingModeConfigurationRights": {
        "type": "object",
        "properties": {
          "canEditSensingModeConfiguration": {
            "type": "boolean",
            "description": "Right to edit activity monitoring configuration."
          }
        },
        "description": "Activity monitoring configuration right details."
      },
      "sensingModeRights": {
        "type": "object",
        "properties": {
          "sensingModeConfigurationRights": {
            "$ref": "#/components/schemas/sensingModeConfigurationRights"
          }
        },
        "description": "Activity monitoring rights details."
      },
      "serverLogRights": {
        "type": "object",
        "properties": {
          "canViewServerLogs": {
            "type": "boolean",
            "description": "Right to view server logs."
          }
        },
        "description": "Server log right details."
      },
      "settingRights": {
        "type": "object",
        "properties": {
          "canEditSettings": {
            "type": "boolean",
            "description": "Right to edit settings."
          },
          "canViewSettings": {
            "type": "boolean",
            "description": "Right to view settings."
          }
        },
        "description": "Setting right details."
      },
      "softwareInventoryRights": {
        "type": "object",
        "properties": {
          "canCreateNewSoftwareInventory": {
            "type": "boolean",
            "description": "Right to create new software inventory."
          },
          "canDeleteSoftwareInventory": {
            "type": "boolean",
            "description": "Right to delete software inventory."
          },
          "canViewSoftwareInventory": {
            "type": "boolean",
            "description": "Right to view software inventory."
          }
        },
        "description": "Software inventory right details."
      },
      "stackTraceRights": {
        "type": "object",
        "properties": {
          "canViewStackTraces": {
            "type": "boolean",
            "description": "Right to view stack traces."
          }
        },
        "description": "Stack trace right details."
      },
      "statefulConfigurationRights": {
        "type": "object",
        "properties": {
          "canCreateNewStatefulConfigurations": {
            "type": "boolean",
            "description": "Right to create new stateful configurations."
          },
          "canDeleteStatefulConfigurations": {
            "type": "boolean",
            "description": "Right to delete stateful configurations."
          },
          "canEditStatefulConfigurationProperties": {
            "type": "boolean",
            "description": "Right to edit stateful configuration properties."
          }
        },
        "description": "Stateful configuration right details."
      },
      "syslogConfigurationRights": {
        "type": "object",
        "properties": {
          "canCreateNewSyslogConfigurations": {
            "type": "boolean",
            "description": "Right to create new syslog configurations."
          },
          "canDeleteSyslogConfigurations": {
            "type": "boolean",
            "description": "Right to delete syslog configurations."
          },
          "canEditSyslogConfigurationProperties": {
            "type": "boolean",
            "description": "Right to edit syslog configurations."
          }
        },
        "description": "Syslog configuration right details."
      },
      "systemInformationRights": {
        "type": "object",
        "properties": {
          "canManageExtensions": {
            "type": "boolean",
            "description": "Right to manage extensions."
          },
          "canManageNodes": {
            "type": "boolean",
            "description": "Right to manage nodes."
          },
          "canViewSystemInformation": {
            "type": "boolean",
            "description": "Right to view system information."
          }
        },
        "description": "System information right details."
      },
      "taggingRights": {
        "type": "object",
        "properties": {
          "canDeleteAutoTagRules": {
            "type": "boolean",
            "description": "Right to delete auto tag rules."
          },
          "canUpdateAutoTagRules": {
            "type": "boolean",
            "description": "Right to update auto tag rules."
          },
          "canRunAutoTagRules": {
            "type": "boolean",
            "description": "Right to run auto tag rules."
          },
          "canDeleteTags": {
            "type": "boolean",
            "description": "Right to delete tags."
          },
          "canTag": {
            "type": "boolean",
            "description": "Right to tag."
          }
        },
        "description": "Tagging right details."
      },
      "trustEntityManagementRights": {
        "type": "object",
        "properties": {
          "canCreateAppControlTrustEntities": {
            "type": "boolean",
            "description": "Right to create entities in the trust entity management."
          },
          "canViewAppControlTrustEntities": {
            "type": "boolean",
            "description": "Right to view entities in the trust entity management."
          },
          "canEditAppControlTrustEntities": {
            "type": "boolean",
            "description": "Right to edit entities in the trust entity management."
          },
          "canDeleteAppControlTrustEntities": {
            "type": "boolean",
            "description": "Right to delete entities in the trust entity management."
          }
        },
        "description": "Trust entity management details."
      },
      "updateRights": {
        "type": "object",
        "properties": {
          "canImportSoftware": {
            "type": "boolean",
            "description": "Right to import software."
          },
          "canDeleteSoftware": {
            "type": "boolean",
            "description": "Right to delete software."
          },
          "canEditSoftwareProperties": {
            "type": "boolean",
            "description": "Right to edit software properties."
          },
          "canImportRuleUpdates": {
            "type": "boolean",
            "description": "Right to import and apply rule updates."
          },
          "canDeleteRuleUpdates": {
            "type": "boolean",
            "description": "Right to delete rule updates."
          },
          "canViewRuleUpdates": {
            "type": "boolean",
            "description": "Right to view rule updates."
          }
        },
        "description": "Update right details."
      },
      "usbDeviceRights": {
        "type": "object",
        "properties": {
          "canCreateNewUsbDevice": {
            "type": "boolean",
            "description": "Right to create new USB Device."
          },
          "canEditUsbDevice": {
            "type": "boolean",
            "description": "Right to edit USB Device."
          },
          "canDeleteUsbDevice": {
            "type": "boolean",
            "description": "Right to delete USB Device."
          }
        },
        "description": "USB Device permission details."
      },
      "webReputationConfigurationRights": {
        "type": "object",
        "properties": {
          "canEditWebReputationConfiguration": {
            "type": "boolean",
            "description": "Right to edit web reputation configuration."
          }
        },
        "description": "Web reputation configuration right details."
      },
      "webReputationRights": {
        "type": "object",
        "properties": {
          "webReputationConfigurationRights": {
            "$ref": "#/components/schemas/webReputationConfigurationRights"
          }
        },
        "description": "Web reputation rights details."
      },
      "agentActivationInformation": {
        "type": "object",
        "properties": {
          "activationURL": {
            "type": "string",
            "description": "Activation URL.",
            "readOnly": true
          },
          "activationToken": {
            "type": "string",
            "description": "Activation token.",
            "readOnly": true
          }
        },
        "description": "Agent activation information."
      },
      "AgentDeploymentScript": {
        "type": "object",
        "properties": {
          "platform": {
            "type": "string",
            "description": "Platform type for agent deployment.",
            "enum": [
              "linux",
              "windows",
              "solaris",
              "aix",
              "macos"
            ]
          },
          "validateCertificateRequired": {
            "type": "boolean",
            "description": "Validate if Deep Security Manager is using a valid TLS certificate from a trusted certificate authority (CA) when downloading the agent software."
          },
          "validateDigitalSignatureRequired": {
            "type": "boolean",
            "description": "Validate digital signature of Deep Security Agent installer."
          },
          "activationRequired": {
            "type": "boolean",
            "description": "Activate the agent at startup."
          },
          "dsmProxyID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the proxy server for contacting Deep Security Manager."
          },
          "relayProxyID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the proxy server for contacting Relay(s)."
          },
          "policyID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the policy assigned to the computer."
          },
          "relayGroupID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the relay group to which the computer belongs."
          },
          "computerGroupID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the computer group to which the computer belongs."
          },
          "scriptBody": {
            "type": "string",
            "description": "Agent deployment script.",
            "readOnly": true
          }
        },
        "description": "Agent deployment script."
      },
      "agentScanControlSettings": {
        "type": "object",
        "properties": {
          "maxConcurrentAgentScansOnEsx": {
            "type": "integer",
            "format": "int32",
            "description": "Max concurrent agent scans on each ESX host."
          }
        },
        "description": "AgentScanControl setting details"
      },
      "AgentVersionControls": {
        "type": "object",
        "properties": {
          "agentVersionControls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/agentVersionControl"
            }
          }
        }
      },
      "agentVersionControl": {
        "type": "object",
        "properties": {
          "os": {
            "type": "string",
            "description": "OS of the agent version control. Searchable as Choice.",
            "readOnly": true,
            "enum": [
              "Windows",
              "Linux",
              "Unix",
              "macOS"
            ]
          },
          "distro": {
            "type": "string",
            "description": "Distro of the agent version control. Searchable as Choice.",
            "readOnly": true,
            "enum": [
              "Red Hat",
              "CentOS",
              "SUSE",
              "Ubuntu",
              "Debian",
              "Oracle Linux",
              "Amazon Linux",
              "CloudLinux",
              "AlmaLinux",
              "Rocky Linux",
              "Solaris",
              "AIX"
            ]
          },
          "platform": {
            "type": "string",
            "description": "Platform of the agent version control. Searchable as Choice.",
            "readOnly": true,
            "enum": [
              "Microsoft Windows 2000 Server",
              "Microsoft Windows Server 2003",
              "Microsoft Windows Server 2003 R2",
              "Microsoft Windows Server 2008",
              "Microsoft Windows Server 2008 R2",
              "Microsoft Windows Server 2012",
              "Microsoft Windows Server 2012 R2",
              "Microsoft Windows Server 2016",
              "Microsoft Windows Server 2019",
              "Microsoft Windows Server 2022",
              "Microsoft Windows 2000 Professional",
              "Microsoft Windows XP",
              "Microsoft Windows 7",
              "Microsoft Windows 8",
              "Microsoft Windows 8.1",
              "Microsoft Windows 10",
              "Microsoft Windows 11",
              "Solaris 10 U4 to U6",
              "Solaris 10 U7 to U11",
              "Solaris 11.0 to 11.3",
              "Solaris 11.4",
              "AIX 5.3",
              "AIX 6.1",
              "AIX 7.1",
              "AIX 7.2",
              "Red Hat Enterprise 5",
              "Red Hat Enterprise 6",
              "Red Hat Enterprise 7",
              "Red Hat Enterprise 8",
              "Red Hat Enterprise 9",
              "Ubuntu Linux 10",
              "Ubuntu Linux 12",
              "Ubuntu Linux 14",
              "Ubuntu Linux 16",
              "Ubuntu Linux 18",
              "Ubuntu Linux 20",
              "Ubuntu Linux 22",
              "CentOS 5",
              "CentOS 6",
              "CentOS 7",
              "CentOS 8",
              "Debian 6",
              "Debian 7",
              "Debian 8",
              "Debian 9",
              "Debian 10",
              "Debian 11",
              "Amazon Linux",
              "Amazon Linux 2",
              "Amazon Linux 2022",
              "Oracle Linux Release 5",
              "Oracle Linux Release 6",
              "Oracle Linux Release 7",
              "Oracle Linux Release 8",
              "SUSE Enterprise Server 10",
              "SUSE Enterprise Server 11",
              "SUSE Enterprise Server 12",
              "SUSE Enterprise Server 15",
              "CloudLinux 5",
              "CloudLinux 6",
              "CloudLinux 7",
              "CloudLinux 8",
              "AlmaLinux 8",
              "Rocky Linux 8",
              "macOS 10.15 Catalina",
              "macOS 11 Big Sur",
              "macOS 12 Monterey"
            ]
          },
          "architecture": {
            "type": "string",
            "description": "Architecture of the agent version control. Searchable as Choice.",
            "readOnly": true,
            "enum": [
              "32-bit",
              "64-bit",
              "sparc",
              "powerpc",
              "64-bit Arm",
              "Universal"
            ]
          },
          "type": {
            "type": "string",
            "description": "Type of the agent version control. Searchable as Choice.",
            "enum": [
              "latest",
              "latest-lts",
              "specified",
              "unknown"
            ]
          },
          "version": {
            "type": "string",
            "description": "Version of the agent version control. Searchable as String."
          },
          "availableVersions": {
            "type": "array",
            "description": "List of available versions for the platform.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/availableVersion"
            }
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the agent version control. Searchable as ID."
          }
        },
        "description": "Agent version control details."
      },
      "availableVersion": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "version of the available version. Searchable as String.",
            "readOnly": true
          },
          "isLatest": {
            "type": "boolean",
            "description": "`true` if the the version is the latest. Searchable as Boolean.",
            "readOnly": true
          },
          "isLatestLTS": {
            "type": "boolean",
            "description": "`true` if the the version is the latest LTS. Searchable as Boolean.",
            "readOnly": true
          }
        },
        "description": "Available version details."
      },
      "AgentVersionControlProfiles": {
        "type": "object",
        "properties": {
          "agentVersionControlProfiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/agentVersionControlProfile"
            }
          }
        }
      },
      "agentVersionControlProfile": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the agent version control. Searchable as String."
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the agent version control profile. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "Agent version control profile details."
      },
      "AntiMalwareConfigurations": {
        "type": "object",
        "properties": {
          "antiMalwareConfigurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/antiMalwareConfiguration"
            }
          }
        }
      },
      "antiMalwareConfiguration": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the anti-malware configuration. Searchable as String."
          },
          "description": {
            "type": "string",
            "description": "Description of the anti-malware configuration. Searchable as String."
          },
          "scanType": {
            "type": "string",
            "description": "The type of malware scan configuration. Searchable as Choice.",
            "enum": [
              "real-time",
              "on-demand"
            ]
          },
          "documentExploitProtectionEnabled": {
            "type": "boolean",
            "description": "Controls whether to scan for known critical vulnerabilities. Use true to enable scan."
          },
          "documentExploitProtection": {
            "type": "string",
            "description": "Scan for exploits against known critical vulnerabilities only. Searchable as Choice.",
            "enum": [
              "critical-only",
              "critical-and-heuristic"
            ]
          },
          "documentExploitHeuristicLevel": {
            "type": "string",
            "description": "Controls whether to scan for exploits of known critical vulnerabilites as well as aggessively detect suspicious behaviour that could be an unknown exploit. Searchable as Choice.",
            "enum": [
              "default",
              "default-and-agressive"
            ]
          },
          "machineLearningEnabled": {
            "type": "boolean",
            "description": "Controls whether predictive machine learning is enabled.  Set to true to enable. Searchable as Boolean."
          },
          "behaviorMonitoringEnabled": {
            "type": "boolean",
            "description": "Controls whether to detect suspicious activity and unauthorized changes (including ransomware). Set to true to detect."
          },
          "documentRecoveryEnabled": {
            "type": "boolean",
            "description": "Controls whether to back up ransomware-encrypted files. Set to true to back up. Searchable as Boolean."
          },
          "intelliTrapEnabled": {
            "type": "boolean",
            "description": "Controls whether IntelliTrap is enabled. Set to true to enable. Searchable as Boolean."
          },
          "memoryScanEnabled": {
            "type": "boolean",
            "description": "Controls whether to scan process memory for malware. Use true to enable scan. Searchable as Boolean."
          },
          "spywareEnabled": {
            "type": "boolean",
            "description": "Controls whether to enable spyware/grayware protection. Set to true to enable. Searchable as Boolean."
          },
          "alertEnabled": {
            "type": "boolean",
            "description": "Controls whether to create an alert when the Malware Scan Configuration logs an event. Set to true to enable the alert. Searchable as Boolean."
          },
          "directoriesToScan": {
            "type": "string",
            "description": "Specify if the scan will be peformed on all the directories or on a subset. Searchable as Choice.",
            "enum": [
              "all-directories",
              "directory-list"
            ]
          },
          "directoryListID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the directory list to scan. Set to 0 to remove any assignment. Searchable as Numeric."
          },
          "filesToScan": {
            "type": "string",
            "description": "Specify if scan will be performed on all files, a subset or by using IntelliScan. Searchable as Choice.",
            "enum": [
              "all-files",
              "intelliscan-file-types",
              "file-extension-list"
            ]
          },
          "fileExtensionListID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the file extension list to scan. Set to 0 to remove any assignment. Searchable as Numeric."
          },
          "excludedDirectoryListID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the directory list to exclude from the scan. Set to 0 to remove any assignment. Searchable as Numeric."
          },
          "excludedFileListID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the file list to exclude from the scan. Set to 0 to remove any assignment. Searchable as Numeric."
          },
          "excludedFileExtensionListID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the file extension list to exclude from the scan. Set to 0 to remove any assignment. Searchable as Numeric."
          },
          "excludedProcessImageFileListID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the process image file list to exclude from the scan. Set to 0 to remove any assignment. Searchable as Numeric."
          },
          "realTimeScan": {
            "type": "string",
            "description": "Specify when to perform the real-time scan. Searchable as Choice.",
            "enum": [
              "read-only",
              "write-only",
              "read-write"
            ]
          },
          "scanCompressedEnabled": {
            "type": "boolean",
            "description": "Controls whether to scan compressed files. Use true to enable scan. Searchable as Boolean."
          },
          "scanCompressedMaximumSize": {
            "type": "integer",
            "format": "int32",
            "description": "Maximum size of compressed files to scan, in MB. Searchable as Numeric."
          },
          "scanCompressedMaximumLevels": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of levels of compression to scan. Searchable as Numeric."
          },
          "scanCompressedMaximumFiles": {
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of files to extract. Searchable as Numeric."
          },
          "microsoftOfficeEnabled": {
            "type": "boolean",
            "description": "Controls whether to scan Embedded Microsoft Office Objects. Use true to enable scan. Searchable as Boolean."
          },
          "microsoftOfficeLayers": {
            "type": "integer",
            "format": "int32",
            "description": "Number of Microsoft Object Linking and Embedding (OLE) Layers to scan. Searchable as Numeric."
          },
          "networkDirectoriesEnabled": {
            "type": "boolean",
            "description": "Controls whether to scan network directories. Set to true to enable. Searchable as Boolean."
          },
          "customRemediationActionsEnabled": {
            "type": "boolean",
            "description": "Controls whether to use the action ActiveActions recommends when malware is detected. Set to true to use the action ActiveAction recommends."
          },
          "customScanActionsEnabled": {
            "type": "boolean",
            "description": "Controls whether to use custom actions. Use true to enable custom actions. Available when 'customRemediationActionsEnabled' is true."
          },
          "scanActionForVirus": {
            "type": "string",
            "description": "The action to perform when a virus is detected. Searchable as Choice. Available when 'customScanActionsEnabled' is true.",
            "enum": [
              "pass",
              "delete",
              "quarantine",
              "clean",
              "deny-access"
            ]
          },
          "scanActionForTrojans": {
            "type": "string",
            "description": "The action to perform when a trojan is detected. Searchable as Choice. Available when 'customScanActionsEnabled' is true.",
            "enum": [
              "pass",
              "delete",
              "quarantine",
              "deny-access"
            ]
          },
          "scanActionForPacker": {
            "type": "string",
            "description": "The action to perform when a packer is detected. Searchable as Choice. Available when 'customScanActionsEnabled' is true.",
            "enum": [
              "pass",
              "delete",
              "quarantine",
              "deny-access"
            ]
          },
          "scanActionForSpyware": {
            "type": "string",
            "description": "The action to perform when spyware is detected. Searchable as Choice. Available when 'customScanActionsEnabled' is true.",
            "enum": [
              "pass",
              "delete",
              "quarantine",
              "deny-access"
            ]
          },
          "scanActionForOtherThreats": {
            "type": "string",
            "description": "The action to take when other threats are detected. Searchable as Choice. Available when 'customScanActionsEnabled' is true.",
            "enum": [
              "pass",
              "delete",
              "quarantine",
              "clean",
              "deny-access"
            ]
          },
          "scanActionForCookies": {
            "type": "string",
            "description": "The action to take when cookies are detected. Searchable as Choice. Available when 'customScanActionsEnabled' is true.",
            "enum": [
              "pass",
              "delete"
            ]
          },
          "scanActionForCVE": {
            "type": "string",
            "description": "The action to take when a CVE exploit is detected. Searchable as Choice. Available when 'customScanActionsEnabled' is true.",
            "enum": [
              "pass",
              "delete",
              "quarantine",
              "deny-access"
            ]
          },
          "scanActionForHeuristics": {
            "type": "string",
            "description": "The action to take when malware identified with heuristics are detected. Searchable as Choice. Available when 'customScanActionsEnabled' is true.",
            "enum": [
              "pass",
              "delete",
              "quarantine",
              "deny-access"
            ]
          },
          "scanActionForPossibleMalware": {
            "type": "string",
            "description": "The action to take when possible malware is detected. Searchable as Choice. Available when 'customRemediationActionsEnabled' is true.",
            "enum": [
              "active-action",
              "pass",
              "delete",
              "quarantine",
              "deny-access"
            ]
          },
          "amsiScanEnabled": {
            "type": "boolean",
            "description": "Controls whether Windows Antimalware Scan Interface (AMSI) protection is enabled. Set to true to enable."
          },
          "scanActionForBehaviorMonitoring": {
            "type": "string",
            "description": "The action to take when suspicious activity and unauthorized changes are detected. Searchable as Choice. Available when 'behaviorMonitoringEnabled' is true.",
            "enum": [
              "active-action",
              "pass"
            ]
          },
          "scanActionForMachineLearning": {
            "type": "string",
            "description": "The action to take when malware identified with machine learning is detected. Searchable as Choice. Available when 'machineLearningEnabled' is true.",
            "enum": [
              "pass",
              "delete",
              "quarantine"
            ]
          },
          "scanActionForAmsi": {
            "type": "string",
            "description": "The action to take when malware identified with AMSI protection is detected. Available when 'amsiScanEnabled' is true.",
            "enum": [
              "pass",
              "terminate"
            ]
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the anti-malware configuration. This ID is set automatically. Searchable as ID.",
            "readOnly": true
          },
          "cpuUsage": {
            "type": "string",
            "enum": [
              "low",
              "medium",
              "high"
            ]
          }
        },
        "description": "Configure protection against malware, viruses, trojans and spyware."
      },
      "apiKeyCurrent": {
        "type": "object",
        "properties": {
          "keyName": {
            "type": "string",
            "description": "Display name of the APIKey. Searchable as String."
          },
          "description": {
            "type": "string",
            "description": "Description of the APIKey. Searchable as String."
          },
          "locale": {
            "type": "string",
            "description": "Country and language for the APIKey.",
            "enum": [
              "en-US",
              "ja-JP"
            ]
          },
          "roleID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the role assigned to the APIKey. Searchable as Numeric."
          },
          "timeZone": {
            "type": "string",
            "description": "Display name of the APIKey's time zone, e.g. America/New_York. Searchable as String."
          },
          "active": {
            "type": "boolean",
            "description": "If true, the APIKey can be used to authenticate. If false, the APIKey is locked out. Searchable as Boolean."
          },
          "created": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the APIKey's creation, in milliseconds since epoch. Searchable as Date."
          },
          "lastSignIn": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the APIKey's last successful authentication, in milliseconds since epoch. Searchable as Date."
          },
          "unlockTime": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of when a locked out APIKey will be unlocked, in milliseconds since epoch. Searchable as Date."
          },
          "unsuccessfulSignInAttempts": {
            "type": "integer",
            "format": "int32",
            "description": "Number of unsuccessful authentication attempts made since the last successful authentication. Searchable as Numeric."
          },
          "expiryDate": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the APIKey's expiry date, in milliseconds since epoch. Searchable as Date."
          },
          "secretKey": {
            "type": "string",
            "description": "Secret key used to authenticate API requests. Only returned when creating a new APIKey or regenerating the secret key.",
            "readOnly": true
          },
          "serviceAccount": {
            "type": "boolean",
            "description": "If true, the APIKey was created by the primary tenant (T0) to authenticate API calls against other tenants' databases. Searchable as Boolean.",
            "readOnly": true
          },
          "roleURN": {
            "type": "string",
            "description": "Uniform resource name of the role assigned to the APIKey.",
            "readOnly": true
          },
          "tenantID": {
            "type": "integer",
            "format": "int32",
            "description": "Tenant ID of the APIKey.",
            "readOnly": true
          },
          "tenantGUID": {
            "type": "string",
            "description": "Tenant GUID of the APIKey.",
            "readOnly": true
          },
          "cloudOneAccountID": {
            "type": "string",
            "description": "Cloud One Account ID.",
            "readOnly": true
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the APIKey. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "Details of an API key. Use API keys to authenticate requests with Deep Security Manager."
      },
      "apiKey": {
        "type": "object",
        "properties": {
          "keyName": {
            "type": "string",
            "description": "Display name of the APIKey. Searchable as String."
          },
          "description": {
            "type": "string",
            "description": "Description of the APIKey. Searchable as String."
          },
          "locale": {
            "type": "string",
            "description": "Country and language for the APIKey.",
            "enum": [
              "en-US",
              "ja-JP"
            ]
          },
          "roleID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the role assigned to the APIKey. Searchable as Numeric."
          },
          "timeZone": {
            "type": "string",
            "description": "Display name of the APIKey's time zone, e.g. America/New_York. Searchable as String."
          },
          "active": {
            "type": "boolean",
            "description": "If true, the APIKey can be used to authenticate. If false, the APIKey is locked out. Searchable as Boolean."
          },
          "created": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the APIKey's creation, in milliseconds since epoch. Searchable as Date."
          },
          "lastSignIn": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the APIKey's last successful authentication, in milliseconds since epoch. Searchable as Date."
          },
          "unlockTime": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of when a locked out APIKey will be unlocked, in milliseconds since epoch. Searchable as Date."
          },
          "unsuccessfulSignInAttempts": {
            "type": "integer",
            "format": "int32",
            "description": "Number of unsuccessful authentication attempts made since the last successful authentication. Searchable as Numeric."
          },
          "expiryDate": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the APIKey's expiry date, in milliseconds since epoch. Searchable as Date."
          },
          "secretKey": {
            "type": "string",
            "description": "Secret key used to authenticate API requests. Only returned when creating a new APIKey or regenerating the secret key.",
            "readOnly": true
          },
          "serviceAccount": {
            "type": "boolean",
            "description": "If true, the APIKey was created by the primary tenant (T0) to authenticate API calls against other tenants' databases. Searchable as Boolean.",
            "readOnly": true
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the APIKey. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "Details of an API key. Use API keys to authenticate requests with Deep Security Manager."
      },
      "apiKeys": {
        "type": "object",
        "properties": {
          "apiKeys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiKey"
            }
          }
        }
      },
      "APIUsageMetrics": {
        "type": "object",
        "properties": {
          "apiUsageMetrics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/apiUsageMetric"
            }
          }
        }
      },
      "apiUsageMetric": {
        "type": "object",
        "properties": {
          "apiType": {
            "type": "string",
            "description": "Type of API called (\"REST\" or \"SOAP\"). Searchable as String."
          },
          "action": {
            "type": "string",
            "description": "Http action (\"GET\", \"PUT\", \"POST\" or \"DELETE\"). Searchable as String."
          },
          "method": {
            "type": "string",
            "description": "Method or API Endpoint called. Searchable as String."
          },
          "date": {
            "type": "integer",
            "format": "int64",
            "description": "Date of API call in milliseconds since epoch. Searchable as Date."
          },
          "tenantGUID": {
            "type": "string",
            "description": "GUID of the tenant who called the API. Searchable as String."
          },
          "duration": {
            "type": "integer",
            "format": "int64",
            "description": "Duration of the API call from request to response in milliseconds. Searchable as Numeric."
          },
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "description": "Http status code returned by the API. Searchable as Numeric."
          },
          "authenticationMethod": {
            "type": "string",
            "description": "Method used to authenticate the API call (\"sID\", \"API-Key\", or empty string). Searchable as String."
          },
          "expandParameter": {
            "type": "string",
            "description": "\"expand\" parameter passed to /computers endpoint. Searchable as String."
          },
          "responseItemCount": {
            "type": "integer",
            "format": "int32",
            "description": "Number of items returned to the client from a list/search operation. Searchable as Numeric."
          },
          "ID": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the APIUsageMetric. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "API Usage Metrics are useful to view data on which API endpoints are used and how."
      },
      "ApplicationControlGlobalRules": {
        "type": "object",
        "properties": {
          "applicationControlGlobalRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/applicationControlGlobalRule"
            }
          }
        }
      },
      "applicationControlGlobalRule": {
        "type": "object",
        "properties": {
          "sha256": {
            "type": "string",
            "description": "SHA-256 hash of the executable named in the rule. Searchable as String."
          },
          "description": {
            "type": "string",
            "description": "Description of the rule. Searchable as String."
          },
          "action": {
            "type": "string",
            "description": "Action to take when a user attempts to launch the executable named in the rule. Searchable as Choice.",
            "readOnly": true,
            "enum": [
              "block"
            ]
          },
          "lastUpdatedAdministrator": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the last administrator to update the rule. Searchable as Numeric.",
            "readOnly": true
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the last rule modification, in milliseconds since epoch. Searchable as Date.",
            "readOnly": true
          },
          "ID": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the application control rule. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "Rule details."
      },
      "ApplicationTypes": {
        "type": "object",
        "properties": {
          "applicationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/applicationType"
            }
          }
        }
      },
      "applicationType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Display name of the ApplicationType. Searchable as String."
          },
          "description": {
            "type": "string",
            "description": "Description of the ApplicationType. Searchable as String."
          },
          "minimumAgentVersion": {
            "type": "string",
            "description": "Version of the Deep Security agent or appliance required to support the ApplicationType. Searchable as String."
          },
          "direction": {
            "type": "string",
            "description": "Direction of the initial communication for the ApplicationType (e.g. 'outgoing' for web browsers). Searchable as Choice.",
            "enum": [
              "incoming",
              "outgoing"
            ]
          },
          "protocol": {
            "type": "string",
            "description": "Protocol used by the ApplicationType. Searchable as Choice.",
            "enum": [
              "icmp",
              "tcp",
              "udp",
              "tcp-udp"
            ]
          },
          "portType": {
            "type": "string",
            "description": "Port number configuration type. Searchable as Choice.",
            "enum": [
              "any",
              "multiple",
              "port-list"
            ]
          },
          "portMultiple": {
            "type": "array",
            "description": "If portType is multiple, the list of port numbers the ApplicationType monitors. Searchable as String.",
            "items": {
              "type": "string"
            }
          },
          "portListID": {
            "type": "integer",
            "format": "int32",
            "description": "If portType is port-list, ID of the PortList containing the port numbers the ApplicationType monitors. Set to 0 to remove any assignment. Searchable as Numeric."
          },
          "recommendationsMode": {
            "type": "string",
            "description": "Indicates whether recommendation scans consider the ApplicationType. Create an ApplicationType computer or policy override to modify this value. Searchable as Choice.",
            "enum": [
              "enabled",
              "ignored",
              "unknown",
              "disabled"
            ]
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the ApplicationType. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "Application Types are useful for grouping intrusion prevention rules that have a common purpose."
      },
      "AWSConnector": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "The AWS Connector's display name in DSM."
          },
          "accountId": {
            "type": "string",
            "description": "The AWS Account ID. Searchable as String."
          },
          "accountAlias": {
            "type": "string",
            "description": "The AWS Account Alias. Searchable as String."
          },
          "accessKey": {
            "type": "string",
            "description": "The AWS Access Key of the account. If used, Cross Account Role ARN is not required. Searchable as String."
          },
          "secretKey": {
            "type": "string",
            "description": "The AWS Secret Key required to add the connector using an Access Key. Not present in returned objects."
          },
          "seedRegion": {
            "type": "string",
            "description": "The region to initialize the EC2 client in. This is an advanced option used if you want to access special regions. Searchable as String."
          },
          "useInstanceRole": {
            "type": "boolean",
            "description": "Specifies whether or not to use the DSM instance role to add the AWS Connector instead of an Access Key or a Cross Account Role ARN."
          },
          "crossAccountRoleArn": {
            "type": "string",
            "description": "The Cross Account Role ARN of the AWS account. If used, Access Key is not required. Searchable as String."
          },
          "lastSyncTime": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the last time the AWS Connector was successfully synchronized, in milliseconds since epoch. Searchable as Date."
          },
          "syncedRegions": {
            "type": "array",
            "description": "The list of AWS regions that have been synchronized for the connector.",
            "items": {
              "$ref": "#/components/schemas/AWSRegion"
            }
          },
          "workspacesEnabled": {
            "type": "boolean",
            "description": "A flag controlling whether or not Amazon Workspaces are enabled for the connector. Searchable as Boolean. Default is false."
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "The Deep Security internal ID of the AWS Cloud Connector. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "Defines an AWS Cloud Connector that is used to retrieve information from AWS."
      },
      "AWSRegion": {
        "type": "object",
        "properties": {
          "region": {
            "type": "string",
            "description": "The Amazon region name."
          },
          "computersSynced": {
            "type": "integer",
            "format": "int64",
            "description": "The number of instances in the region during the last sync."
          },
          "workspacesSynced": {
            "type": "integer",
            "format": "int64",
            "description": "The number of workspaces in the region during the last sync."
          }
        },
        "description": "A region in AWS that instances and workspaces can be synchronized to."
      },
      "AWSConnectors": {
        "type": "object",
        "properties": {
          "awsConnectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AWSConnector"
            }
          }
        }
      },
      "awsconnectorsettings": {
        "type": "object",
        "properties": {
          "externalId": {
            "type": "string",
            "description": "External ID to be applied to Cross Account Roles when adding AWS Connectors for this tenant."
          }
        },
        "description": "Aws Connector Settings"
      },
      "AzureConnector": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The Azure Connector's display name in DSM. Searchable as String."
          },
          "azureTenantID": {
            "type": "string",
            "description": "The Azure Tenant/Active Directory ID. Searchable as String."
          },
          "subscriptionID": {
            "type": "string",
            "description": "The Azure Subscription ID. Searchable as String."
          },
          "azureAdApplicationID": {
            "type": "string",
            "description": "The Azure Active Directory Application ID. Searchable as String."
          },
          "azureAdApplicationSecret": {
            "type": "string",
            "description": "The Azure Active Directory Application secret/password. Not present in returned objects."
          },
          "azureAdApplicationCertificate": {
            "type": "string",
            "description": "The Azure Active Directory Application certificate for authentication. The certificate should be in X.509 PEM format and encoded in Base64. Not present in returned objects."
          },
          "azureAdApplicationPrivateKey": {
            "type": "string",
            "description": "The Azure Active Directory Application private key of azureAdApplicationCertificate. The private key should be in PEM format and encoded in Base64. Not present in returned objects."
          },
          "azureAdApplicationPrivateKeySecret": {
            "type": "string",
            "description": "The optional secret of Azure Active Directory Application private key if the private key is protected with secret/password."
          },
          "azureAdApplicationCertificateExpirationDate": {
            "type": "integer",
            "format": "int64",
            "description": "Expiration timestamp of the the Azure Active Directory Application certificate, in milliseconds since epoch.",
            "readOnly": true
          },
          "resourceApiEndPoint": {
            "type": "string",
            "description": "The optional Azure Resource REST API endpoint. Will auto detect by DSM VM location if not provided. This is an advanced option used if you want to access private or confidential cloud. Be aware that managing Azure Government computers outside Azure Government would break ITAR compliance."
          },
          "loginApiEndPoint": {
            "type": "string",
            "description": "The optional Azure Active Directory Login/Authentication API endpoint. Will auto detect by DSM VM location if not provided. This is an advanced option used if you want to access private or confidential cloud. Be aware that managing Azure Government computers outside Azure Government would break ITAR compliance."
          },
          "lastSyncTime": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the last time the Azure Connector was successfully synchronized, in milliseconds since epoch.",
            "readOnly": true
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "Azure Connector ID. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "Defines an Azure Cloud Connector that is used to retrieve information from Azure."
      },
      "AzureConnectors": {
        "type": "object",
        "properties": {
          "azureConnectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AzureConnector"
            }
          }
        }
      },
      "certificate": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the SSL certificate. This ID is set automatically.",
            "readOnly": true
          },
          "certificate": {
            "type": "string",
            "description": "The certificate. It's a PEM formatted string"
          },
          "certificateDetails": {
            "$ref": "#/components/schemas/certificateDetails"
          },
          "trusted": {
            "type": "boolean",
            "description": "True if the certificate is trusted by Deep Security Manager or verified by a CA.",
            "readOnly": true
          },
          "purpose": {
            "type": "string",
            "description": "The type of connections for which the certificate is to be used.",
            "enum": [
              "SSL",
              "EXCEPTION"
            ]
          }
        },
        "description": "Certificate"
      },
      "certificateDetails": {
        "type": "object",
        "properties": {
          "issuerDN": {
            "type": "string",
            "description": "The certificate issuer.",
            "readOnly": true
          },
          "subjectDN": {
            "type": "string",
            "description": "The certificate subject (owner).",
            "readOnly": true
          },
          "notBefore": {
            "type": "integer",
            "format": "int64",
            "description": "The date on which the certificate validity period begins.",
            "readOnly": true
          },
          "notAfter": {
            "type": "integer",
            "format": "int64",
            "description": "The date on which the certificate validity period ends.",
            "readOnly": true
          },
          "serialNumber": {
            "type": "string",
            "description": "A number that uniquely identifies the certificate and is issued by the certification authority.",
            "readOnly": true
          },
          "sha1Fingerprint": {
            "type": "string",
            "description": "The sha1 fingerprint of the certificate.",
            "readOnly": true
          },
          "sha256Fingerprint": {
            "type": "string",
            "description": "The sha256 fingerprint of the certificate.",
            "readOnly": true
          }
        },
        "description": "Certificate details"
      },
      "certificates": {
        "type": "object",
        "properties": {
          "certificates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/certificate"
            }
          }
        },
        "description": "List of certificates"
      },
      "CommonObjectInfo": {
        "type": "object",
        "properties": {
          "commonObjectID": {
            "type": "integer",
            "format": "int32",
            "description": "Common object id",
            "readOnly": true
          },
          "commonObjectName": {
            "type": "string",
            "description": "Common object name",
            "readOnly": true
          }
        }
      },
      "commonObjectImportTask": {
        "type": "object",
        "required": [
          "commonObjectContent",
          "type"
        ],
        "properties": {
          "commonObjectContent": {
            "type": "string",
            "description": "Common object content zipped and base64-encoded, write only."
          },
          "type": {
            "type": "string",
            "description": "Type of the common objects to import. Searchable as Choice.",
            "enum": [
              "directory-lists",
              "file-extension-lists",
              "file-lists",
              "ip-lists",
              "mac-lists",
              "port-lists",
              "contexts",
              "stateful-configurations",
              "schedules"
            ]
          },
          "status": {
            "type": "string",
            "description": "Status of the task.",
            "readOnly": true,
            "enum": [
              "requested",
              "in-progress",
              "complete",
              "failed"
            ]
          },
          "created": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the created time, in milliseconds since epoch. Searchable as Date.",
            "readOnly": true
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the last updated time, in milliseconds since epoch. Searchable as Date.",
            "readOnly": true
          },
          "commonObjectMappings": {
            "type": "array",
            "description": "Common object mapping between Deep Security Manager and Workload Security.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/commonObjectMapping"
            }
          },
          "errorCode": {
            "type": "integer",
            "format": "int32",
            "description": "Type of failed import.",
            "readOnly": true
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the CommonObjectImportTask.",
            "readOnly": true
          },
          "taskGUID": {
            "type": "string",
            "description": "GUID of the task. Searchable as String.",
            "readOnly": true
          }
        },
        "description": "Describes the common object import task."
      },
      "commonObjectMapping": {
        "type": "object",
        "properties": {
          "importTo": {
            "$ref": "#/components/schemas/CommonObjectInfo"
          },
          "importFrom": {
            "$ref": "#/components/schemas/CommonObjectInfo"
          }
        },
        "description": "Common object mapping on Deep Security Manager to Workload Security."
      },
      "commonObjectImportTasks": {
        "type": "object",
        "properties": {
          "commonObjectImportTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commonObjectImportTask"
            }
          }
        }
      },
      "ActivityMonitoringComputerExtension": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "description": "Module state. The 'inherited' value is write-only.",
            "enum": [
              "inherited",
              "on",
              "off"
            ]
          },
          "suspiciousObjectListVersion": {
            "type": "string"
          },
          "suspiciousObjectListUpdateTime": {
            "type": "integer",
            "format": "int64"
          },
          "suspiciousObjectListEnabled": {
            "type": "boolean"
          },
          "moduleStatus": {
            "$ref": "#/components/schemas/computerModuleStatus"
          }
        },
        "description": "Computer-level configuration for the Activity Monitoring module."
      },
      "AntiMalwareComputerExtension": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "description": "Module state. The 'inherited' value is write-only.",
            "enum": [
              "inherited",
              "on",
              "off"
            ]
          },
          "moduleStatus": {
            "$ref": "#/components/schemas/computerModuleStatus"
          },
          "realTimeScanConfigurationID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the Real Time Scan Configuration."
          },
          "realTimeScanScheduleID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the Real Time Schedule."
          },
          "manualScanConfigurationID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the Manual Scan Configuration."
          },
          "scheduledScanConfigurationID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the Scheduled Scan Configuration."
          },
          "lastManualScan": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the last manual scan for malware, in milliseconds since epoch.",
            "readOnly": true
          },
          "lastScheduledScan": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the last scheduled scan for malware, in milliseconds since epoch.",
            "readOnly": true
          }
        },
        "description": "Computer-level configuration for the Anti-Malware module. Null for tenants for whom Anti-Malware is hidden."
      },
      "ApplicationControlComputerExtension": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "description": "Module state. The 'inherited' value is write-only.",
            "enum": [
              "inherited",
              "on",
              "off"
            ]
          },
          "moduleStatus": {
            "$ref": "#/components/schemas/computerModuleStatus"
          },
          "blockUnrecognized": {
            "type": "boolean",
            "description": "Controls whether to block unrecognized software until it is explicitly allowed. Set to true to block."
          },
          "rulesetID": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the shared whitelist ruleset."
          },
          "trustRulesetID": {
            "type": "string",
            "description": "ID of the trust ruleset. An empty string will set it to \"None\" and assigning a value of 0 will set it to \"Inherited\"."
          },
          "maintenanceModeStatus": {
            "type": "string",
            "description": "Maintenance mode status.",
            "enum": [
              "off",
              "start-requested",
              "on",
              "stop-requested",
              "reset-duration-requested"
            ]
          },
          "maintenanceModeDuration": {
            "type": "integer",
            "format": "int32",
            "description": "Duration of maintenance mode in minutes."
          },
          "maintenanceModeStartTime": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the date the maintenanceMode was started, in milliseconds since epoch.",
            "readOnly": true
          },
          "maintenanceModeEndTime": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the date the maintenanceMode was ended, in milliseconds since epoch.",
            "readOnly": true
          }
        },
        "description": "Computer-level configuration for the Application Control module. Null for tenants for whom Application Control is hidden."
      },
      "ComputerSettings": {
        "type": "object",
        "properties": {
          "logInspectionSettingSeverityClippingAgentEventSendSyslogLevelMin": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionConnectionsCleanupMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionVerifyTcpChecksumEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingScanCacheOnDemandConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "applicationControlSettingSharedRulesetId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingSmartProtectionServerConnectionLostWarningEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "applicationControlSettingExecutionEnforcementLevel": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingBlockedUrlDomains": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionSynSentTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAgentSelfProtectionPassword": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceBlockTcpXmasAttackDuration": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingVirtualAndContainerNetworkScanEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "logInspectionSettingSyslogConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDebugModeEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingVirtualAndContainerNetworkScanEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingFileHashSha256Enabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceNotifyFingerprintProbeEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEventLogFileRetainNum": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckTcpPawsZero": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingConnectedThreatDefenseUseControlManagerSuspiciousObjectListEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingEngineOptionFragmentedIpKeepMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDrop6To4BogonsAddressesEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "logInspectionSettingSeverityClippingAgentEventStoreLevelMin": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingScanCacheConcurrencyMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingSyslogConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionTcpPawsWindowPolicy": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceDetectTcpXmasAttackEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "applicationControlSettingRulesetMode": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingSmartProtectionGlobalServerUseProxyEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingSmartProtectionLocalServerAllowOffDomainGlobal": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "integrityMonitoringSettingCombinedModeProtectionSource": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionCloseWaitTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingScanOpenPortListId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAgentSelfProtectionPasswordEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionAckTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEventLogFileCachedEntriesStaleTime": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingCombinedModeProtectionSource": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAgentEventsSendInterval": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingInactiveAgentCleanupOverrideEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingFailureResponseEngineSystem": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingRelayState": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDropEvasiveRetransmitEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "activityMonitoringSettingIndicatorEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingEngineOptionFragmentedIpTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckTcpZeroFlags": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingSmartProtectionGlobalServerUseProxyEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingNsxSecurityTaggingPreventModeLevel": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceNotifyTcpXmasAttackEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionUdpTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingSmartProtectionLocalServerEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionTcpMssLimit": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionColdStartTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionEstablishedTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingIdentifiedFilesSpaceMaxMbytes": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionAllowNullIpEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingNotificationsSuppressPopupsEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckTcpRstFinFlags": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDisconnectTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionCloseTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionTunnelDepthMaxExceededAction": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceDetectTcpNullScanEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingSmartProtectionAntiMalwareGlobalServerProxyId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionFilterIpv4Tunnels": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingSmartProtectionLocalServerUrls": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionLogOnePacketPeriod": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "deviceControlSettingSyslogConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionFilterIpv6Tunnels": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckTcpCongestionFlags": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingHeartbeatMissedAlertThreshold": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingEngineOptionsEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionConnectionsNumUdpMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "integrityMonitoringSettingAutoApplyRecommendationsEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionTunnelDepthMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDropUnknownSslProtocolEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingNsxSecurityTaggingValue": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingLogDataRuleFirstMatchEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionLoggingPolicy": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingTroubleshootingLoggingLevel": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingVirtualApplianceOnDemandScanCacheEntriesMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingCombinedModeProtectionSource": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionClosingTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckPaws": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingAutoApplyRecommendationsEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceDetectFingerprintProbeEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingNsxSecurityTaggingRemoveOnCleanScanEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionLogPacketLengthMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDropTeredoAnomaliesEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingSecurityLevel": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDropIpv6SiteLocalAddressesEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "activityMonitoringSettingActivityEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionStrictTerodoPortCheckEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAutoUpdateTlsInspectionSupportEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingBlockedUrlKeywords": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingSyslogConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingFailureResponsePacketSanityCheck": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingNetworkEngineMode": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEventLogFileSizeMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingMalwareScanMultithreadedProcessingEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceDetectTcpSynFinScanEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAutoUpdateKernelPackageEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDropIpZeroPayloadEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionBlockIpv6Agent8AndEarlierEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingEngineOptionFragmentedIpPacketSendIcmpEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingPredictiveMachineLearningExceptions": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionLogEventsPerSecondMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionSslSessionTime": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingBehaviorMonitoringScanExclusionList": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingSmartProtectionGlobalServerEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionLogOnePacketWithinPeriodEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionGenerateConnectionEventsIcmpEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingHeartbeatInactiveVmOfflineAlertEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingSmartProtectionWebReputationGlobalServerProxyId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingNsxSecurityTaggingEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckFragmentedPackets": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionConnectionsNumIcmpMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckTcpSplitHandshake": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingCombinedModeProtectionSource": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionEventNodesMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingMonitorPortListId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "applicationControlSettingSyslogConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckOutNoConnection": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionBlockIpv6Agent9AndLaterEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "integrityMonitoringSettingVirtualApplianceOptimizationScanCacheEntriesMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceNotifyTcpNullScanEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionIgnoreStatusCode1": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionIgnoreStatusCode0": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionIgnoreStatusCode2": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionSslSessionSize": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingScanCacheRealTimeConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingRecommendationOngoingScansInterval": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingSmartProtectionGlobalServerUseProxyEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingInterfaceLimitOneActiveEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckTcpChecksum": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDropIpv6ExtType0Enabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingScanFileSizeMaxMbytes": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionGenerateConnectionEventsTcpEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingFileHashSizeMaxMbytes": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEventLogFileCachedEntriesLifeTime": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingSmartProtectionGlobalServerProxyId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "logInspectionSettingAutoApplyRecommendationsEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingConnectedThreatDefenseSuspiciousFileDdanSubmissionEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "deviceControlSettingDeviceControlUsbStorageDeviceAction": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingBlockingPageLink": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingSyslogConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAgentCommunicationsDirection": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "integrityMonitoringSettingScanCacheConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingDocumentExploitProtectionRuleExceptions": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckTcpSynWithData": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingFileHashEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceBlockFingerprintProbeDuration": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDropIpv6BogonsAddressesEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionBootStartTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionConnectionsNumTcpMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionSecurityPosture": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingInterfacePatterns": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingInterfaceIsolationEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingVirtualApplianceRealTimeScanCacheEntriesMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEventsOutOfAllowedPolicyEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckEvasiveRetransmit": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionIcmpTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "integrityMonitoringSettingSyslogConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionConnectionCleanupTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingSmartProtectionLocalServerAllowOffDomainGlobal": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceNotifyTcpSynFinScanEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionErrorTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingOfflineScheduledScanEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingAllowedUrls": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceNotifyNetworkOrPortScanEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionFinWait1Timeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionGenerateConnectionEventsUdpEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "activityMonitoringSettingSyslogConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckTcpSynRstFlags": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingSpywareApprovedList": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckTcpUrgentFlags": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingNsxSecurityTaggingDetectModeLevel": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingEngineOptionFragmentedIpUnconcernedMacAddressBypassEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionLogAllPacketDataEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckTcpSynFinFlags": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingHeartbeatInterval": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionFragmentSizeMin": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingSmartProtectionServerConnectionLostWarningEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceBlockNetworkOrPortScanDuration": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "integrityMonitoringSettingContentHashAlgorithm": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingSmartScanState": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingConfigPackageExceedsAlertMaxEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingEnvironmentVariableOverrides": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionFragmentOffsetMin": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingSmartProtectionLocalServerUrls": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionSynRcvdTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEventLogFileCachedEntriesNum": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionForceAllowIcmpType3Code4": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceBlockTcpNullScanDuration": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingSmartProtectionGlobalServerEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "integrityMonitoringSettingRealtimeEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionLastAckTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "deviceControlSettingDeviceControlAutoRunUsbAction": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceExcludeIpListId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "deviceControlSettingDeviceControlEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAgentSelfProtectionEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDropIpv6ReservedAddressesEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckFinNoConnection": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDebugPacketNumMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionBypassCiscoWaasConnectionsEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingHeartbeatLocalTimeShiftAlertThreshold": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingFileHashMd5Enabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceDetectNetworkOrPortScanEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionSilentTcpConnectionDropEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionBlockSameSrcDstIpEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionForceAllowDhcpDns": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceIncludeIpListId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionsEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceBlockTcpSynFinScanDuration": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingSecurityBlockUntestedPagesEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingAllowedUrlDomains": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingEnableContainerFileOnAccessScan": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingTrustedCertificateExceptionEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEventLogFileIgnoreSourceIpListId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDropIpv6FragmentsLowerThanMinMtuEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAutoAssignNewIntrusionPreventionRulesEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckRstNoConnection": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingBlockedUrls": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingCombinedModeNetworkGroupProtectionSource": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingAlertingEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingNsxSecurityTaggingOnRemediationFailureEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "integrityMonitoringSettingCpuUsageLevel": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAutoUpdateAntiMalwareEngineEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "deviceControlSettingDeviceControlMobileDeviceAction": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingInspectTlsTrafficEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingCombinedModeProtectionSource": {
            "$ref": "#/components/schemas/SettingValue"
          }
        }
      },
      "Computers": {
        "type": "object",
        "properties": {
          "computers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/computer"
            }
          }
        }
      },
      "DeviceControlComputerExtension": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "description": "Module state. The 'inherited' value is write-only.",
            "enum": [
              "inherited",
              "on",
              "off"
            ]
          },
          "moduleStatus": {
            "$ref": "#/components/schemas/computerModuleStatus"
          }
        },
        "description": "Computer-level configuration for the Device Control module. Null for tenants for whom Device Control is hidden."
      },
      "ESXSummary": {
        "type": "object",
        "properties": {
          "manufacturer": {
            "type": "string",
            "description": "Manufacturer of the ESX. Searchable as String.",
            "readOnly": true
          },
          "model": {
            "type": "string",
            "description": "Model of the ESX. Searchable as String.",
            "readOnly": true
          },
          "processors": {
            "type": "string",
            "description": "Quantity and processor speed of the ESX's processors. Searchable as Numeric.",
            "readOnly": true
          },
          "processorType": {
            "type": "string",
            "description": "Detailed information on the make and model of the ESX's processor. Searchable as String.",
            "readOnly": true
          },
          "numberOfNICs": {
            "type": "string",
            "description": "Number of Network interface controllers the ESX has. Searchable as Numeric.",
            "readOnly": true
          },
          "state": {
            "type": "string",
            "description": "State of the ESX.",
            "readOnly": true
          },
          "virtualMachines": {
            "type": "string",
            "description": "Number of virtual machines hosted on the ESX.",
            "readOnly": true
          },
          "vMotionEnabled": {
            "type": "string",
            "description": "Indicates whether vMotion is enabled on the ESX. The is value is true if enabled. Searchable as Boolean.",
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "description": "List of name/value pairs of ESX Custom Attributes",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/customAttribute"
            }
          },
          "TPMEnabled": {
            "type": "boolean"
          },
          "TPMAlertsEnabled": {
            "type": "boolean"
          },
          "TPMHasData": {
            "type": "boolean"
          },
          "TPMLastChecked": {
            "type": "integer",
            "format": "int64"
          }
        },
        "description": "VMware ESX Host Information."
      },
      "FirewallComputerExtension": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "description": "Module state. The 'inherited' value is write-only.",
            "enum": [
              "inherited",
              "on",
              "off"
            ]
          },
          "moduleStatus": {
            "$ref": "#/components/schemas/computerModuleStatus"
          },
          "globalStatefulConfigurationID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the Global Stateful Configuration."
          },
          "statefulConfigurationAssignments": {
            "$ref": "#/components/schemas/StatefulConfigurationAssignments"
          },
          "ruleIDs": {
            "type": "array",
            "description": "IDs of the assigned firewall rules.",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "description": "Computer-level configuration for the Firewall module. Null for tenants for whom Firewall is hidden."
      },
      "IntegrityMonitoringComputerExtension": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "description": "Module state. The 'inherited' value is write-only.",
            "enum": [
              "inherited",
              "real-time",
              "on",
              "off"
            ]
          },
          "moduleStatus": {
            "$ref": "#/components/schemas/computerModuleStatus"
          },
          "lastIntegrityScan": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the last full scan for integrity, in milliseconds since epoch.",
            "readOnly": true
          },
          "lastBaselineCreated": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the last integrity baseline, in milliseconds since epoch.",
            "readOnly": true
          },
          "ruleIDs": {
            "type": "array",
            "description": "IDs of the assigned Integrity Monitoring rules.",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "description": "Computer-level configuration for the Integrity Monitoring module. Null for tenants for whom Integrity Monitoring is hidden."
      },
      "Interfaces": {
        "type": "object",
        "properties": {
          "interfaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/interface"
            }
          }
        }
      },
      "IntrusionPreventionComputerExtension": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "description": "Module state. The 'inherited' value is write-only.",
            "enum": [
              "inherited",
              "prevent",
              "detect",
              "off"
            ]
          },
          "moduleStatus": {
            "$ref": "#/components/schemas/computerModuleStatus"
          },
          "ruleIDs": {
            "type": "array",
            "description": "IDs of the assigned Intrusion Prevention rules.",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "applicationTypeIDs": {
            "type": "array",
            "description": "IDs of the assigned Application Types.",
            "readOnly": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "description": "Computer-level configuration for the Intrusion Prevention module. Null for tenants for whom Intrusion Prevention is hidden."
      },
      "LogInspectionComputerExtension": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "description": "Module state. The 'inherited' value is write-only.",
            "enum": [
              "inherited",
              "on",
              "off"
            ]
          },
          "moduleStatus": {
            "$ref": "#/components/schemas/computerModuleStatus"
          },
          "ruleIDs": {
            "type": "array",
            "description": "IDs of the assigned Log Inspection rules.",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "description": "Computer-level configuration for the Log Inspection module. Null for tenants for whom Log Inspection is hidden."
      },
      "SAPComputerExtension": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "description": "Module state. The 'inherited' value is write-only.",
            "enum": [
              "inherited",
              "on",
              "off"
            ]
          },
          "moduleStatus": {
            "$ref": "#/components/schemas/computerModuleStatus"
          }
        },
        "description": "Computer-level configuration for the Scanner module (SAP integration). Null for tenants for whom SAP is hidden."
      },
      "SettingValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Value of a Setting."
          }
        }
      },
      "StatefulConfigurationAssignments": {
        "type": "object",
        "properties": {
          "statefulConfigurationAssignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/statefulConfigurationAssignment"
            }
          }
        }
      },
      "VirtualMachineGCPLabel": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Key of the label."
          },
          "value": {
            "type": "string",
            "description": "Value of the label."
          }
        },
        "description": "Label of GCP platform."
      },
      "VirtualMachineMetadata": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the metadata."
          },
          "value": {
            "type": "string",
            "description": "Value of the metadata."
          }
        },
        "description": "Item of metadata for an AWS Workspace."
      },
      "VirtualMachineSecurityGroup": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the Security Group.",
            "readOnly": true
          },
          "ID": {
            "type": "string",
            "description": "ID of the Security Group.",
            "readOnly": true
          }
        },
        "description": "AWS Security Group for EC2 instances."
      },
      "WebReputationComputerExtension": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "description": "Module state. The 'inherited' value is write-only.",
            "enum": [
              "inherited",
              "on",
              "off"
            ]
          },
          "moduleStatus": {
            "$ref": "#/components/schemas/computerModuleStatus"
          }
        },
        "description": "Computer-level configuration for the Web Reputation module. Null for tenants for whom Web Reputation is hidden."
      },
      "azureARMVirtualMachineSummary": {
        "type": "object",
        "properties": {
          "cloudProvider": {
            "type": "string",
            "description": "Cloud provider: \"Azure\"."
          },
          "subscriptionID": {
            "type": "string",
            "description": "Subscription ID. Searchable as String."
          },
          "deploymentModel": {
            "type": "string",
            "description": "Deployment model: \"Classic\" or \"Resource Manager\"."
          },
          "resourceGroup": {
            "type": "string",
            "description": "Name of resource group. Searchable as String."
          },
          "state": {
            "type": "string",
            "description": "Power state, for example, \"POWER ON\"."
          },
          "location": {
            "type": "string",
            "description": "Physical location of the resource, for example: \"East US\". Searchable as String."
          },
          "type": {
            "type": "string",
            "description": "Hardware type, for example: \"Standard_DS1_v2\". Searchable as String."
          },
          "operatingSystem": {
            "type": "string",
            "description": "Operating system, for example: \"Microsoft Windows\". Searchable as String."
          },
          "publicIPAddress": {
            "type": "string",
            "description": "Public IP address. Searchable as String."
          },
          "privateIPAddress": {
            "type": "string",
            "description": "Private IP address. Searchable as String."
          },
          "cloudService": {
            "type": "string",
            "description": "Cloud service, for example: \"DH-DC\". Searchable as String."
          },
          "deploymentID": {
            "type": "string",
            "description": "Deployment ID, for example: \"76ab36a0fb8d4c4ab6b802acdf58b3a4\". Searchable as String."
          },
          "imageID": {
            "type": "string",
            "description": "Image ID, for example: \"a699494373c04fc0bc8f2bb1389d6106__Windows-Server-2012-R2-201503.01-en.us-127GB.vhd\". Searchable as String."
          },
          "instanceID": {
            "type": "string",
            "description": "Instance ID. Searchable as String."
          },
          "azureResourceId": {
            "type": "string",
            "description": "Azure Resource ID. Searchable as String"
          },
          "securityGroup": {
            "type": "string",
            "description": "Network security group, for example: \"bh-Win10Pro-1-nsg\". Searchable as String."
          },
          "metadata": {
            "type": "array",
            "description": "List of tag name/value metadata pairs.",
            "items": {
              "$ref": "#/components/schemas/VirtualMachineMetadata"
            }
          },
          "DNSName": {
            "type": "string"
          }
        },
        "description": "Details of an Azure virtual machine that is managed using the Azure Resource Manager (ARM)."
      },
      "azureVMVirtualMachineSummary": {
        "type": "object",
        "properties": {
          "cloudProvider": {
            "type": "string",
            "description": "Cloud provider: \"Azure\"."
          },
          "subscriptionID": {
            "type": "string",
            "description": "Subscription ID. Searchable as String."
          },
          "operatingSystem": {
            "type": "string",
            "description": "Operating system, for example: \"Microsoft Windows\". Searchable as String."
          },
          "publicVirtualIPAddress": {
            "type": "string",
            "description": "Public virtual IP address. Searchable as String."
          },
          "privateIPAddress": {
            "type": "string",
            "description": "Private IP address. Searchable as String."
          },
          "publicIPAddress": {
            "type": "string",
            "description": "Public IP address. Searchable as String."
          },
          "location": {
            "type": "string",
            "description": "Physical location of the VM, for example: \"East US\". Searchable as String."
          },
          "instanceID": {
            "type": "string",
            "description": "Instance ID. Searchable as String."
          },
          "azureResourceId": {
            "type": "string",
            "description": "Azure Resource ID. Searchable as String"
          },
          "imageID": {
            "type": "string",
            "description": "Image ID, for example: \"a699494373c04fc0bc8f2bb1389d6106__Windows-Server-2012-R2-201503.01-en.us-127GB.vhd\". Searchable as String."
          },
          "cloudService": {
            "type": "string",
            "description": "Cloud service, for example: \"DH-DC\". Searchable as String."
          },
          "deploymentID": {
            "type": "string",
            "description": "Deployment ID, for example: \"76ab36a0fb8d4c4ab6b802acdf58b3a4\". Searchable as String."
          },
          "type": {
            "type": "string",
            "description": "Hardware type, for example: \"Standard_DS1_v2\". Searchable as String."
          },
          "state": {
            "type": "string",
            "description": "Power state, for example, \"POWER ON\"."
          },
          "DNSName": {
            "type": "string"
          }
        },
        "description": "Details for an Azure virtual machine."
      },
      "component": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the component.",
            "readOnly": true
          },
          "forUseBy": {
            "type": "string",
            "description": "Name and version of the component consumer.",
            "readOnly": true
          },
          "platform": {
            "type": "string",
            "description": "Platform of the component.",
            "readOnly": true
          },
          "version": {
            "type": "string",
            "description": "Version of the component.",
            "readOnly": true
          },
          "latest": {
            "type": "boolean",
            "description": "True if the component is the latest version.",
            "readOnly": true
          }
        },
        "description": "Security update component."
      },
      "computer": {
        "type": "object",
        "properties": {
          "hostName": {
            "type": "string",
            "description": "Hostname of the computer. Searchable as String."
          },
          "displayName": {
            "type": "string",
            "description": "Display name of the computer. Searchable as String."
          },
          "description": {
            "type": "string",
            "description": "Description of the computer. Searchable as String."
          },
          "lastIPUsed": {
            "type": "string",
            "description": "Most recent IP address used by the computer. This value is null when the computer is not activated. Searchable as String.",
            "readOnly": true
          },
          "platform": {
            "type": "string",
            "description": "Platform of the computer. Automatically detected and set. Searchable as String",
            "readOnly": true
          },
          "groupID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the computer group to which the computer belongs. Set to 0 to remove any assignment. Searchable as Numeric."
          },
          "policyID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the policy assigned to the computer. Set to 0 to remove any assignment. Searchable as Numeric."
          },
          "assetImportanceID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the asset importance assigned to the computer. Set to 0 to remove any assignment. Searchable as Numeric."
          },
          "relayListID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the relay list that is assigned to the computer. Set to 0 to remove any assignment. Searchable as Numeric."
          },
          "agentFingerPrint": {
            "type": "string",
            "description": "FingerPrint of the Agent on the computer. This value is null when no agent is installed or activated. Searchable as String.",
            "readOnly": true
          },
          "applianceFingerPrint": {
            "type": "string",
            "description": "FingerPrint of the Appliance protecting the computer. This value is null when no Deep Security Virtual Appliance is protecting the computer.",
            "readOnly": true
          },
          "lastAgentCommunication": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the last agent communication, in milliseconds since epoch. Searchable as Date.",
            "readOnly": true
          },
          "lastApplianceCommunication": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the last appliance communication, in milliseconds since epoch.",
            "readOnly": true
          },
          "lastSendPolicyRequest": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the last policy request sent, in milliseconds since epoch. Searchable as Date.",
            "readOnly": true
          },
          "lastSendPolicySuccess": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of last successful policy sent, in milliseconds since epoch.  Searchable as Date.",
            "readOnly": true
          },
          "agentVersion": {
            "type": "string",
            "description": "Version of Deep Security Agent that is installed on the computer. When no agent software is installed or activated, the version is '0.0.0.0'. Searchable as String, however to search for computers without an agent, search for computers that have no agent fingerprint.'.",
            "readOnly": true
          },
          "computerStatus": {
            "$ref": "#/components/schemas/computerStatus"
          },
          "tasks": {
            "$ref": "#/components/schemas/computerTasks"
          },
          "securityUpdates": {
            "$ref": "#/components/schemas/securityUpdates"
          },
          "computerSettings": {
            "$ref": "#/components/schemas/ComputerSettings"
          },
          "interfaces": {
            "$ref": "#/components/schemas/Interfaces"
          },
          "biosUUID": {
            "type": "string",
            "description": "BIOS UUID, for example: \"421e1137-5c49-56e4-246d-9bf7637e69f5\". Only applies to VMware VMs.",
            "readOnly": true
          },
          "azureARMVirtualMachineSummary": {
            "$ref": "#/components/schemas/azureARMVirtualMachineSummary"
          },
          "azureVMVirtualMachineSummary": {
            "$ref": "#/components/schemas/azureVMVirtualMachineSummary"
          },
          "ec2VirtualMachineSummary": {
            "$ref": "#/components/schemas/ec2VirtualMachineSummary"
          },
          "noConnectorVirtualMachineSummary": {
            "$ref": "#/components/schemas/noConnectorVirtualMachineSummary"
          },
          "vmwareVMVirtualMachineSummary": {
            "$ref": "#/components/schemas/vmwareVMVirtualMachineSummary"
          },
          "vcloudVMVirtualMachineSummary": {
            "$ref": "#/components/schemas/vcloudVMVirtualMachineSummary"
          },
          "workspaceVirtualMachineSummary": {
            "$ref": "#/components/schemas/workspaceVirtualMachineSummary"
          },
          "gcpVirtualMachineSummary": {
            "$ref": "#/components/schemas/gcpVirtualMachineSummary"
          },
          "hostGUID": {
            "type": "string",
            "description": "HostGUID of the computer. Searchable as String.",
            "readOnly": true
          },
          "agentGUID": {
            "type": "string",
            "description": "AgentGUID of the computer. Searchable as String.",
            "readOnly": true
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the computer. Searchable as ID.",
            "readOnly": true
          },
          "antiMalware": {
            "$ref": "#/components/schemas/AntiMalwareComputerExtension"
          },
          "webReputation": {
            "$ref": "#/components/schemas/WebReputationComputerExtension"
          },
          "deviceControl": {
            "$ref": "#/components/schemas/DeviceControlComputerExtension"
          },
          "activityMonitoring": {
            "$ref": "#/components/schemas/ActivityMonitoringComputerExtension"
          },
          "firewall": {
            "$ref": "#/components/schemas/FirewallComputerExtension"
          },
          "intrusionPrevention": {
            "$ref": "#/components/schemas/IntrusionPreventionComputerExtension"
          },
          "integrityMonitoring": {
            "$ref": "#/components/schemas/IntegrityMonitoringComputerExtension"
          },
          "logInspection": {
            "$ref": "#/components/schemas/LogInspectionComputerExtension"
          },
          "applicationControl": {
            "$ref": "#/components/schemas/ApplicationControlComputerExtension"
          },
          "ESXSummary": {
            "$ref": "#/components/schemas/ESXSummary"
          },
          "SAP": {
            "$ref": "#/components/schemas/SAPComputerExtension"
          }
        },
        "description": "Computer details. Settings set on the computer override settings on an assigned policy. When the computer is virtual, additional information about the virtual machine is provided."
      },
      "computerModuleStatus": {
        "type": "object",
        "properties": {
          "agentStatus": {
            "type": "string",
            "description": "Agent status.",
            "readOnly": true,
            "enum": [
              "inactive",
              "active",
              "warning",
              "error",
              "not-supported"
            ]
          },
          "agentStatusMessage": {
            "type": "string",
            "description": "Agent status message.",
            "readOnly": true
          },
          "applianceStatus": {
            "type": "string",
            "description": "Appliance status.",
            "readOnly": true,
            "enum": [
              "inactive",
              "active",
              "warning",
              "error",
              "not-supported"
            ]
          },
          "applianceStatusMessage": {
            "type": "string",
            "description": "Appliance status message.",
            "readOnly": true
          }
        },
        "description": "Computer Module status details."
      },
      "computerStatus": {
        "type": "object",
        "properties": {
          "agentStatus": {
            "type": "string",
            "description": "Agent status.",
            "readOnly": true,
            "enum": [
              "inactive",
              "active",
              "warning",
              "error",
              "not-supported"
            ]
          },
          "agentStatusMessages": {
            "type": "array",
            "description": "Agent status messages.",
            "readOnly": true,
            "items": {
              "type": "string"
            }
          },
          "applianceStatus": {
            "type": "string",
            "description": "Appliance status.",
            "readOnly": true,
            "enum": [
              "inactive",
              "active",
              "warning",
              "error",
              "not-supported"
            ]
          },
          "applianceStatusMessages": {
            "type": "array",
            "description": "Appliance status messages.",
            "readOnly": true,
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Computer status details."
      },
      "computerTasks": {
        "type": "object",
        "properties": {
          "agentTasks": {
            "type": "array",
            "description": "Agent tasks. Searchable as String.",
            "readOnly": true,
            "items": {
              "type": "string"
            }
          },
          "applianceTasks": {
            "type": "array",
            "description": "Appliance tasks. Searchable as String.",
            "readOnly": true,
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Computer task details."
      },
      "customAttribute": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the custom attribute."
          },
          "value": {
            "type": "string",
            "description": "Value of the custom attribute."
          }
        },
        "description": "Custom Attribute of an ESX."
      },
      "ec2VirtualMachineSummary": {
        "type": "object",
        "properties": {
          "cloudProvider": {
            "type": "string",
            "description": "Cloud provider: \"AWS\"."
          },
          "accountID": {
            "type": "string",
            "description": "Account ID. Searchable as String."
          },
          "operatingSystem": {
            "type": "string",
            "description": "Operating system, for example: \"Microsoft Windows (64 bit)\". Searchable as String."
          },
          "privateIPAddress": {
            "type": "string",
            "description": "Private IP address. Searchable as String."
          },
          "publicIPAddress": {
            "type": "string",
            "description": "Public IP address. Searchable as String."
          },
          "availabilityZone": {
            "type": "string",
            "description": "Availability Zone, for example: \"us-east-1a\". Searchable as String."
          },
          "instanceID": {
            "type": "string",
            "description": "Instance ID, for example: \"i-0e80f75f9532ad1ba\". Searchable as String."
          },
          "securityGroups": {
            "type": "array",
            "description": "List of security groups.",
            "items": {
              "$ref": "#/components/schemas/VirtualMachineSecurityGroup"
            }
          },
          "type": {
            "type": "string",
            "description": "Instance type, for example: \"t2.micro\". Searchable as String."
          },
          "virtualizationType": {
            "type": "string",
            "description": "Virtualization type, for example: \"hvm\". Searchable as String."
          },
          "state": {
            "type": "string",
            "description": "Power state, for example, \"POWER ON\"."
          },
          "metadata": {
            "type": "array",
            "description": "List of name/value metadata pairs.",
            "items": {
              "$ref": "#/components/schemas/VirtualMachineMetadata"
            }
          },
          "DNSName": {
            "type": "string"
          },
          "amiID": {
            "type": "string"
          }
        },
        "description": "Details of an AWS EC2 virtual machine."
      },
      "gcpVirtualMachineSummary": {
        "type": "object",
        "properties": {
          "cloudProvider": {
            "type": "string",
            "description": "Cloud provider: \"GCP\"."
          },
          "state": {
            "type": "string",
            "description": "Power state, for example, \"POWER ON\"."
          },
          "operatingSystem": {
            "type": "string",
            "description": "Operating system, for example: \"Microsoft Windows (64 bit)\". Searchable as String."
          },
          "instanceID": {
            "type": "string",
            "description": "Instance ID, for example: \"1234567890123456789\". Searchable as String."
          },
          "projectID": {
            "type": "string",
            "description": "Project ID. Searchable as String."
          },
          "privateIPAddress": {
            "type": "string",
            "description": "Private IP address. Searchable as String."
          },
          "publicIPAddress": {
            "type": "string",
            "description": "Public IP address. Searchable as String."
          },
          "zone": {
            "type": "string",
            "description": "Zone is a deployment area, for example: \"us-east1-d\". Searchable as String."
          },
          "vCPUs": {
            "type": "integer",
            "format": "int32",
            "description": "Number of vCPU. Searchable as Numeric."
          },
          "memory": {
            "type": "integer",
            "format": "int32",
            "description": "Memory size in megabyte. Searchable as Numeric."
          },
          "labels": {
            "type": "array",
            "description": "List of key/value labels.",
            "items": {
              "$ref": "#/components/schemas/VirtualMachineGCPLabel"
            }
          },
          "networkTags": {
            "type": "array",
            "description": "List of network tags.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Details of a GCP virtual machine."
      },
      "interface": {
        "type": "object",
        "properties": {
          "interfaceTypeID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the InterfaceType to which the Interface is mapped. Searchable as Numeric."
          },
          "name": {
            "type": "string",
            "description": "Name of the Interface. Set automatically by the DSM. Searchable as String.",
            "readOnly": true
          },
          "displayName": {
            "type": "string",
            "description": "Display name of the Interface. Optionally set by the user. Searchable as String."
          },
          "detected": {
            "type": "boolean",
            "description": "Indicates whether or not the interface is currently detected. Searchable as Boolean.",
            "readOnly": true
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the Interface.",
            "readOnly": true
          },
          "MAC": {
            "type": "string",
            "description": "MAC Address of the interface. Searchable as String.",
            "readOnly": true
          },
          "DHCP": {
            "type": "boolean",
            "description": "Indicates whether the interface uses DHCP. The value is true if it uses DHCP. Searchable as Boolean.",
            "readOnly": true
          },
          "IPs": {
            "type": "array",
            "description": "List of IPs used by the interface.",
            "readOnly": true,
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Network interface of a managed computer."
      },
      "noConnectorVirtualMachineSummary": {
        "type": "object",
        "properties": {
          "accountID": {
            "type": "string",
            "description": "Agent-reported account ID. Searchable as String."
          },
          "directoryID": {
            "type": "string",
            "description": "Agent-reported directory ID. Searchable as String."
          },
          "userName": {
            "type": "string",
            "description": "Agent-reported user ID. Searchable as String."
          },
          "instanceID": {
            "type": "string",
            "description": "Agent-reported instance ID. Searchable as String."
          },
          "region": {
            "type": "string",
            "description": "Agent-reported region. Searchable as String."
          }
        },
        "description": "Details of an AWS virtual machine that was added to Deep Security Manager using the legacy Add Cloud Account wizard."
      },
      "securityUpdates": {
        "type": "object",
        "properties": {
          "updateStatus": {
            "$ref": "#/components/schemas/updateStatus"
          },
          "lastChanged": {
            "type": "integer",
            "format": "int64",
            "description": "Date when components were last updated, in milliseconds since epoch.",
            "readOnly": true
          },
          "rules": {
            "type": "array",
            "description": "Security update components: rules.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/component"
            }
          },
          "antiMalware": {
            "type": "array",
            "description": "Security update components: anti-malware.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/component"
            }
          },
          "webReputationService": {
            "type": "array",
            "description": "Security update components: web reputation service.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/component"
            }
          },
          "manifests": {
            "type": "array",
            "description": "Security update components: manifests.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/component"
            }
          },
          "other": {
            "type": "array",
            "description": "Security update components: other.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/component"
            }
          }
        },
        "description": "Security update details."
      },
      "statefulConfigurationAssignment": {
        "type": "object",
        "properties": {
          "interfaceID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of interface."
          },
          "interfaceTypeID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of interface type."
          },
          "statefulConfigurationID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of stateful configuration."
          }
        },
        "description": "Stateful configuration assignments to the interface."
      },
      "updateStatus": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Update status.",
            "readOnly": true,
            "enum": [
              "inactive",
              "active",
              "warning",
              "error",
              "not-supported"
            ]
          },
          "statusMessage": {
            "type": "string",
            "description": "Update status message.",
            "readOnly": true
          }
        },
        "description": "Update status details."
      },
      "vcloudVMVirtualMachineSummary": {
        "type": "object",
        "properties": {
          "cloudProvider": {
            "type": "string",
            "description": "Cloud provider: \"vCloud\"."
          },
          "operatingSystem": {
            "type": "string",
            "description": "Operating system, for example: \"Microsoft Windows Server 2012 (64-bit)\". Searchable as String."
          },
          "instanceID": {
            "type": "string",
            "description": "Instance ID. Searchable as String."
          },
          "type": {
            "type": "string",
            "description": "Hardware type. Searchable as String."
          },
          "state": {
            "type": "string",
            "description": "Power state, for example: \"Powered On\"."
          },
          "IPAddress": {
            "type": "string"
          },
          "DNSName": {
            "type": "string"
          }
        },
        "description": "Details of a vCloud virtual machine."
      },
      "vmwareVMVirtualMachineSummary": {
        "type": "object",
        "properties": {
          "operatingSystem": {
            "type": "string",
            "description": "Operating system, for example: \"Microsoft Windows Server 2012 (64-bit)\". Searchable as String."
          },
          "memory": {
            "type": "string",
            "description": "Memory allocation, for example: \"12,288 MB\"."
          },
          "vmwareTools": {
            "type": "string",
            "description": "VMware tools status, for example: \"OK\"."
          },
          "biosUUID": {
            "type": "string",
            "description": "BIOS UUID, for example: \"421e1137-5c49-56e4-246d-9bf7637e69f5\". Searchable as String."
          },
          "state": {
            "type": "string",
            "description": "Power state, for example: \"Powered On\"."
          },
          "notes": {
            "type": "array",
            "description": "Notes associated with the VM.",
            "items": {
              "type": "string"
            }
          },
          "CPU": {
            "type": "string",
            "description": "Number and type of CPUs, for example: \"4 vCPU\". Searchable as Numeric."
          },
          "IPAddress": {
            "type": "string"
          },
          "DNSName": {
            "type": "string"
          },
          "vCenterUUID": {
            "type": "string"
          },
          "NSXSecurityGroups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Details of a VMWare virtual machine."
      },
      "workspaceVirtualMachineSummary": {
        "type": "object",
        "properties": {
          "cloudProvider": {
            "type": "string",
            "description": "Cloud provider: \"AWS\"."
          },
          "accountID": {
            "type": "string",
            "description": "Account ID. Searchable as String."
          },
          "workspaceDirectory": {
            "type": "string",
            "description": "Name of workspace directory."
          },
          "userName": {
            "type": "string",
            "description": "Name of workspace owner. Searchable as String."
          },
          "workspaceID": {
            "type": "string",
            "description": "Workspace ID, for example: \"ws-hlt453cld\". Searchable as String."
          },
          "bundleID": {
            "type": "string",
            "description": "Bundle ID, for example: \"wsb-92b9h49ds\". Searchable as String."
          },
          "workspaceHardware": {
            "type": "string",
            "description": "Hardware description, for example: \"STANDARD\". Searchable as String."
          },
          "state": {
            "type": "string",
            "description": "Power state, for example, \"POWER ON\"."
          },
          "metadata": {
            "type": "array",
            "description": "List of name/value metadata pairs.",
            "items": {
              "$ref": "#/components/schemas/VirtualMachineMetadata"
            }
          },
          "IPAddress": {
            "type": "string"
          }
        },
        "description": "Details of an AWS Workspace."
      },
      "ComputersToBeDeletedIDList": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "description": "The list of IDs of computers to be deleted. The maximum number of IDs can be passed at one request is 1000",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "description": "The ID list of the computers to be deleted"
      },
      "ExceptionRule": {
        "type": "object",
        "properties": {
          "deviceID": {
            "type": "integer",
            "format": "int64"
          },
          "createdTime": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp (in milliseconds since epoch) for the creation of the device exception rule.",
            "readOnly": true
          },
          "ID": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the USB Storage Device Exception Rule. Searchable as ID.",
            "readOnly": true
          },
          "action": {
            "type": "string",
            "enum": [
              "full-access"
            ]
          }
        },
        "description": "USB Storage Device exception rule."
      },
      "ExceptionRules": {
        "type": "object",
        "properties": {
          "exceptionRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExceptionRule"
            }
          }
        },
        "description": "List of USB Storage Device exception rules."
      },
      "firewallAssignments": {
        "type": "object",
        "properties": {
          "assignedRuleIDs": {
            "type": "array",
            "description": "List of assigned firewall rule IDs.",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "description": "Firewall rule assignments."
      },
      "RuleIDs": {
        "type": "object",
        "properties": {
          "ruleIDs": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "FirewallRules": {
        "type": "object",
        "properties": {
          "firewallRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/firewallRule"
            }
          }
        }
      },
      "firewallRule": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the firewall rule. Searchable as String."
          },
          "description": {
            "type": "string",
            "description": "Description of the firewall rule. Searchable as String."
          },
          "action": {
            "type": "string",
            "description": "Action of the packet filter. Searchable as Choice.",
            "enum": [
              "log-only",
              "allow",
              "deny",
              "force-allow",
              "bypass"
            ]
          },
          "priority": {
            "type": "string",
            "description": "Priority of the packet filter. Searchable as Choice.",
            "enum": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ]
          },
          "direction": {
            "type": "string",
            "description": "Packet direction. Searchable as Choice.",
            "enum": [
              "incoming",
              "outgoing"
            ]
          },
          "frameType": {
            "type": "string",
            "description": "Supported frame types. Searchable as Choice.",
            "enum": [
              "any",
              "ip",
              "arp",
              "revarp",
              "ipv4",
              "ipv6",
              "other"
            ]
          },
          "frameNumber": {
            "type": "integer",
            "format": "int32",
            "description": "Ethernet frame number. Only required for FrameType \"other\". Searchable as Numeric."
          },
          "frameNot": {
            "type": "boolean",
            "description": "Controls if the frame setting should be inverted. Set to true to invert. Searchable as Boolean."
          },
          "protocol": {
            "type": "string",
            "description": "Protocol. Searchable as Choice.",
            "enum": [
              "any",
              "icmp",
              "igmp",
              "ggp",
              "tcp",
              "pup",
              "udp",
              "idp",
              "nd",
              "raw",
              "tcp-udp",
              "icmpv6",
              "other"
            ]
          },
          "protocolNumber": {
            "type": "integer",
            "format": "int32",
            "description": "Two-byte protocol number. Searchable as Numeric."
          },
          "protocolNot": {
            "type": "boolean",
            "description": "Controls if the protocol setting should be inverted. Set to true to invert. Searchable as Boolean."
          },
          "sourceIPType": {
            "type": "string",
            "description": "Source IP type. Default is \"any\". Searchable as Choice.",
            "enum": [
              "any",
              "masked-ip",
              "range",
              "ip-list",
              "single",
              "multiple"
            ]
          },
          "sourceIPValue": {
            "type": "string",
            "description": "Source IP. Only applies to source IP type \"masked-ip\" or \"single\". Searchable as String."
          },
          "sourceIPMask": {
            "type": "string",
            "description": "Source IP mask. Only applies to source IP type \"masked-ip\". Searchable as String."
          },
          "sourceIPRangeFrom": {
            "type": "string",
            "description": "The first value for a range of source IP addresses. Only applies to source IP type \"range\". Searchable as String."
          },
          "sourceIPRangeTo": {
            "type": "string",
            "description": "The last value for a range of source IP addresses. Only applies to source IP type \"range\". Searchable as String."
          },
          "sourceIPMultiple": {
            "type": "array",
            "description": "List of source IP addresses. Only applies to source IP type \"multiple\". Searchable as String.",
            "items": {
              "type": "string"
            }
          },
          "sourceIPListID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of source IP list. Only applies to source IP type \"ip-list\". Set to 0 to remove any assignment. Searchable as Numeric."
          },
          "sourceIPNot": {
            "type": "boolean",
            "description": "Controls if the source IP setting should be inverted. Set to true to invert. Searchable as Boolean."
          },
          "sourceMACType": {
            "type": "string",
            "description": "Source MAC type. Default is \"any\". Searchable as Choice.",
            "enum": [
              "any",
              "single",
              "mac-list",
              "multiple"
            ]
          },
          "sourceMACValue": {
            "type": "string",
            "description": "Source MAC address. Only applies to MAC type \"single\". Searchable as String."
          },
          "sourceMACMultiple": {
            "type": "array",
            "description": "List of MAC addresses. Only applies to MAC type \"multiple\". Searchable as String.",
            "items": {
              "type": "string"
            }
          },
          "sourceMACListID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of MAC address list. Only applies to MAC type \"mac-list\". Set to 0 to remove any assignment. Searchable as Numeric."
          },
          "sourceMACNot": {
            "type": "boolean",
            "description": "Controls if the source MAC setting should be inverted. Set to true to invert. Searchable as Boolean."
          },
          "sourcePortType": {
            "type": "string",
            "description": "The type of source port. Searchable as Choice.",
            "enum": [
              "any",
              "multiple",
              "port-list"
            ]
          },
          "sourcePortMultiple": {
            "type": "array",
            "description": "List of comma-delimited source ports. Only applies to source type \"multiple\". Searchable as String.",
            "items": {
              "type": "string"
            }
          },
          "sourcePortListID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of source port list. Only applies to source type \"port-list\". Set to 0 to remove any assignment. Searchable as Numeric."
          },
          "sourcePortNot": {
            "type": "boolean",
            "description": "Controls if the source port setting should be inverted. Set to true to invert. Searchable as Boolean."
          },
          "destinationIPType": {
            "type": "string",
            "description": "Destination IP type. Default is \"any\". Searchable as Choice.",
            "enum": [
              "any",
              "masked-ip",
              "range",
              "ip-list",
              "single",
              "multiple"
            ]
          },
          "destinationIPValue": {
            "type": "string",
            "description": "Destination IP. Only applies to destination IP type \"masked-ip\" or \"single\". Searchable as String."
          },
          "destinationIPMask": {
            "type": "string",
            "description": "Destination IP mask. Only applies to destination IP type \"masked-ip\". Searchable as String."
          },
          "destinationIPRangeFrom": {
            "type": "string",
            "description": "The first value for a range of destination IP addresses. Only applies to estination IP type \"range\". Searchable as String."
          },
          "destinationIPRangeTo": {
            "type": "string",
            "description": "The last value for a range of destination IP addresses. Only applies to destination IP type \"range\". Searchable as String."
          },
          "destinationIPMultiple": {
            "type": "array",
            "description": "List of comma-delimited destination IP addresses. Only applies to destination IP type \"multiple\". Searchable as String.",
            "items": {
              "type": "string"
            }
          },
          "destinationIPListID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of destination IP list. Only applies to destination IP type \"ip-list\". Set to 0 to remove any assignment. Searchable as Numeric."
          },
          "destinationIPNot": {
            "type": "boolean",
            "description": "Controls if the destination IP setting should be inverted. Set to true to invert. Searchable as Boolean."
          },
          "destinationMACType": {
            "type": "string",
            "description": "Destination MAC type. Default is \"any\". Searchable as Choice.",
            "enum": [
              "any",
              "single",
              "mac-list",
              "multiple"
            ]
          },
          "destinationMACValue": {
            "type": "string",
            "description": "Destination MAC address. Only applies to MAC type \"single\". Searchable as String."
          },
          "destinationMACMultiple": {
            "type": "array",
            "description": "List of comma-delimited MAC addresses. Only applies to MAC type \"multiple\". Searchable as String.",
            "items": {
              "type": "string"
            }
          },
          "destinationMACListID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of MAC address list. Only applies to MAC type \"mac-list\". Set to 0 to remove any assignment. Searchable as Numeric."
          },
          "destinationMACNot": {
            "type": "boolean",
            "description": "Controls if the destination MAC setting should be inverted. Set to true to invert. Searchable as Boolean."
          },
          "destinationPortType": {
            "type": "string",
            "description": "The type of destination port. Searchable as Choice.",
            "enum": [
              "any",
              "multiple",
              "port-list"
            ]
          },
          "destinationPortMultiple": {
            "type": "array",
            "description": "List of comma-delimited destination ports. Only applies to destination type \"multiple\". Searchable as String.",
            "items": {
              "type": "string"
            }
          },
          "destinationPortListID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of destination port list. Only applies to destination type \"port-list\". Set to 0 to remove any assignment. Searchable as Numeric."
          },
          "destinationPortNot": {
            "type": "boolean",
            "description": "Controls if the destination port setting should be inverted. Set to true to invert. Searchable as Boolean."
          },
          "anyFlags": {
            "type": "boolean",
            "description": "True if any flags are used. Searchable as Boolean."
          },
          "logDisabled": {
            "type": "boolean",
            "description": "Controls if logging for this filter is disabled. Only applies to filter action \"log-only\" or \"deny\". Searchable as Boolean."
          },
          "includePacketData": {
            "type": "boolean",
            "description": "Controls if this filter should capture data for every log. Searchable as Boolean."
          },
          "alertEnabled": {
            "type": "boolean",
            "description": "Controls if this filter should be alerted on. Searchable as Boolean."
          },
          "scheduleID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the schedule to control when this filter is \"on\". Set to 0 to remove any assignment. Searchable as Numeric."
          },
          "contextID": {
            "type": "integer",
            "format": "int32",
            "description": "RuleContext that is applied to this filter. Set to 0 to remove any assignment. Searchable as Numeric."
          },
          "tcpflags": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "fin",
                "syn",
                "rst",
                "psh",
                "ack",
                "urg"
              ]
            }
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the firewall rule. Searchable as ID.",
            "readOnly": true
          },
          "TCPNot": {
            "type": "boolean"
          },
          "ICMPType": {
            "type": "integer",
            "format": "int32"
          },
          "ICMPCode": {
            "type": "integer",
            "format": "int32"
          },
          "ICMPNot": {
            "type": "boolean"
          }
        },
        "description": "Firewall rule details."
      },
      "ComputerGroups": {
        "type": "object",
        "properties": {
          "computerGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/computerGroup"
            }
          }
        }
      },
      "computerGroup": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Specifies what type the ComputerGroup is. Defaults to `folder`",
            "readOnly": true,
            "enum": [
              "ad-add-directory",
              "ad-folder-network",
              "aws-region",
              "aws-vpc",
              "aws-subnet",
              "aws-workspaces",
              "aws-directory",
              "azure-top",
              "azure-group",
              "gcp-connector",
              "gcp-project",
              "cloud-provider-top",
              "vcloud-top",
              "aws-account",
              "vm-group",
              "vcloud-provider_datacenter",
              "vcloud-vapp",
              "vcenters-top",
              "vcenter-folder-network",
              "vmware-datacenter",
              "vcenter-cluster-group",
              "external-group",
              "folder",
              "root"
            ]
          },
          "name": {
            "type": "string",
            "description": "Name of the ComputerGroup. Searchable as String."
          },
          "description": {
            "type": "string",
            "description": "Description of the ComputerGroup. Searchable as String."
          },
          "parentGroupID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the ComputerGroup's parent group. Empty if the parent is a root ComputerGroup. ComputerGroup will be a root group unless a valid value for `parentGroupID` is set. Searchable as Numeric."
          },
          "directoryID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the ComputerGroup's directory server. Set to `0` if the group is not a directory server. Searchable as Numeric.",
            "readOnly": true
          },
          "externalID": {
            "type": "string",
            "description": "External ID of the ComputerGroup. Empty if the ComputerGroup is not created/managed by a cloud account. Searchable as String.",
            "readOnly": true
          },
          "virtualID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the ComputerGroup as it exists in VMware vCloud. Set to `0` if the ComputerGroup is not from vCloud. Searchable as Numeric.",
            "readOnly": true
          },
          "virtualType": {
            "type": "integer",
            "format": "int32",
            "description": "Type of the ComputerGroup as it exists in VMware vCloud. Set to `0` if the ComputerGroup is not from vCloud. Searchable as Numeric.",
            "readOnly": true
          },
          "virtualName": {
            "type": "string",
            "description": "Name of the ComputerGroup as it exists in VMware vCloud. Ignored if the ComputerGroup is not from vCloud. Searchable as String.",
            "readOnly": true
          },
          "cloudType": {
            "type": "string",
            "description": "Cloud platform of the ComputerGroup.  Ignored if the ComputerGroup does not represent a cloud container. Searchable as Choice.",
            "readOnly": true,
            "enum": [
              "amazon",
              "vcloud-private-cloud",
              "azure",
              "azure-arm",
              "gcp"
            ]
          },
          "cloudResourceType": {
            "type": "string",
            "description": "Cloud container type of the ComputerGroup. This is platform dependent. Ignored if the ComputerGroup does not represent a cloud container. Searchable as Numeric.",
            "readOnly": true,
            "enum": [
              "physical",
              "top-level",
              "partition",
              "aws-ec2-instance",
              "aws-workspace",
              "vcloud-organization",
              "vcloud-catalog",
              "vcloud-networks",
              "vcloud-virtual-data-center",
              "vcloud-virtual-application",
              "vcloud-virtual-application-template",
              "vcloud-virtual-machine",
              "azure-instance",
              "azure-arm-instance"
            ]
          },
          "cloudID": {
            "type": "integer",
            "format": "int32",
            "description": "Cloud container ID of the ComputerGroup. Ignored if the ComputerGroup does not represent a cloud container. Searchable as Numeric.",
            "readOnly": true
          },
          "amazonAccountID": {
            "type": "integer",
            "format": "int32",
            "description": "Amazon Web Services account ID of the ComputerGroup. Set to `0` if the ComputerGroup does not represent an Amazon Web Services account. Searchable as Numeric.",
            "readOnly": true
          },
          "amazonRegionID": {
            "type": "integer",
            "format": "int64",
            "description": "Amazon Web Services region ID of the ComputerGroup. Set to `0` if the ComputerGroup does not represent an Amazon Web Services region. amazonWorkspacesID will be used instead if the ComputerGroup represents an Amazon Web Services WorkSpaces node. Searchable as Numeric.",
            "readOnly": true
          },
          "amazonVPCID": {
            "type": "integer",
            "format": "int64",
            "description": "Amazon Web Services Virtual Private Cloud ID of the ComputerGroup. Set to `0` if the ComputerGroup does not represent an Amazon Web Services Virtual Private Cloud. Searchable as Numeric.",
            "readOnly": true
          },
          "amazonSubnetID": {
            "type": "integer",
            "format": "int64",
            "description": "Amazon Web Services subnet ID of the ComputerGroup. Set to `0` if the ComputerGroup does not represent an Amazon Web Services subnet. Searchable as Numeric.",
            "readOnly": true
          },
          "amazonWorkspacesID": {
            "type": "integer",
            "format": "int64",
            "description": "Amazon Web Services WorkSpaces ID of the ComputerGroup. Set to `0` if the ComputerGroup does not represent an Amazon Web Services WorkSpace. Will be used instead of amazonRegionID if the ComputerGroup represents a WorkSpaces node under a region. Searchable as Numeric.",
            "readOnly": true
          },
          "amazonDirectoryID": {
            "type": "integer",
            "format": "int64",
            "description": "Amazon Web Services directory ID of the ComputerGroup. Set to `0` if the ComputerGroup does not represent an Amazon Web Services directory. Searchable as Numeric.",
            "readOnly": true
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the ComputerGroup. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "Logical containers to organize computers that are protected by Deep Security Manager."
      },
      "InetAddress": {
        "type": "object",
        "properties": {
          "canonicalHostName": {
            "type": "string"
          },
          "multicastAddress": {
            "type": "boolean"
          },
          "anyLocalAddress": {
            "type": "boolean"
          },
          "loopbackAddress": {
            "type": "boolean"
          },
          "linkLocalAddress": {
            "type": "boolean"
          },
          "siteLocalAddress": {
            "type": "boolean"
          },
          "mcglobal": {
            "type": "boolean"
          },
          "mcnodeLocal": {
            "type": "boolean"
          },
          "mclinkLocal": {
            "type": "boolean"
          },
          "mcsiteLocal": {
            "type": "boolean"
          },
          "mcorgLocal": {
            "type": "boolean"
          },
          "address": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            }
          },
          "hostAddress": {
            "type": "string"
          },
          "hostName": {
            "type": "string"
          }
        }
      },
      "integrityMonitoringAssignments": {
        "type": "object",
        "properties": {
          "assignedRuleIDs": {
            "type": "array",
            "description": "IDs of IntegrityMonitoringRules assigned to the computer or policy.",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "recommendationScanStatus": {
            "type": "string",
            "description": "Status of the last recommendation scan done on a computer or policy.",
            "readOnly": true,
            "enum": [
              "none",
              "valid",
              "out-of-date",
              "unknown"
            ]
          },
          "lastRecommendationScanDate": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the last recommendation scan date, in milliseconds since epoch.",
            "readOnly": true
          },
          "recommendedToAssignRuleIDs": {
            "type": "array",
            "description": "IntegrityMonitoringRules separated by commas, that were recommended to be assigned to the computer or policy by a recommendation scan.",
            "readOnly": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "recommendedToUnassignRuleIDs": {
            "type": "array",
            "description": "IntegrityMonitoringRules, separated by commas, that were recommended to be unassigned from the computer or policy by a recommendation scan.",
            "readOnly": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "IntegrityMonitoringRules": {
        "type": "object",
        "properties": {
          "integrityMonitoringRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/integrityMonitoringRule"
            }
          }
        }
      },
      "integrityMonitoringRule": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the IntegrityMonitoringRule. Searchable as String."
          },
          "description": {
            "type": "string",
            "description": "Description of the IntegrityMonitoringRule. Searchable as String."
          },
          "minimumAgentVersion": {
            "type": "string",
            "description": "Minimum Deep Security Agent version that supports the IntegrityMonitoringRule. This value is provided in the X.X.X.X format. Defaults to `6.0.0.0`. If an agent is not the minimum required version, the manager does not send the rule to the agent, and generates an alert. Searchable as String.",
            "readOnly": true
          },
          "minimumManagerVersion": {
            "type": "string",
            "description": "Minimum Deep Security Manager version that supports the IntegrityMonitoringRule. This value is provided in the X.X.X format. Defaults to `6.0.0`. An alert will be raised if a manager that fails to meet the minimum manager version value tries to assign this rule to a host or profile. Searchable as String.",
            "readOnly": true
          },
          "severity": {
            "type": "string",
            "description": "Severity level of the event is multiplied by the computer's asset value to determine ranking. Ranking can be used to sort events with more business impact. Searchable as Choice.",
            "enum": [
              "low",
              "medium",
              "high",
              "critical"
            ]
          },
          "type": {
            "type": "string",
            "description": "Type of the IntegrityMonitoringRule. If the rule is predefined by Trend Micro, it is set to `2`. If it is user created, it is set to `1`. Searchable as String.",
            "readOnly": true
          },
          "originalIssue": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp when the IntegrityMonitoringRule was originally issued by Trend Micro, in milliseconds since epoch.  Empty if the IntegrityMonitoringRule is user created. Searchable as Date.",
            "readOnly": true
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp when the IntegrityMonitoringRule was last updated, in milliseconds since epoch. Searchable as Date.",
            "readOnly": true
          },
          "identifier": {
            "type": "string",
            "description": "Identifier of the IntegrityMonitoringRule from Trend Micro. Empty if the IntegrityMonitoringRule is user created. Searchable as String.",
            "readOnly": true
          },
          "template": {
            "type": "string",
            "description": "Template which the IntegrityMonitoringRule follows.",
            "enum": [
              "registry",
              "file",
              "custom"
            ]
          },
          "registryKeyRoot": {
            "type": "string",
            "description": "Registry hive which is monitored by the IntegrityMonitoringRule. Empty if the IntegrityMonitoringRule does not monitor a registry key."
          },
          "registryKeyValue": {
            "type": "string",
            "description": "Registry key which is monitored by the IntegrityMonitoringRule. Empty if the IntegrityMonitoringRule does not monitor a registry key. Ignored if the IntegrityMonitoringRule does not monitor a registry key."
          },
          "registryIncludeSubKeys": {
            "type": "boolean",
            "description": "Controls whether the IntegrityMonitoringRule should also include subkeys of the registry key it monitors. Defaults to `false`. Ignored if the IntegrityMonitoringRule does not monitor a registry key."
          },
          "registryIncludedValues": {
            "type": "array",
            "description": "Registry key values to be monitored by the IntegrityMonitoringRule. JSON array or delimited by `\\n`. `?` matches a single character, while `*` matches zero or more characters. Ignored if the IntegrityMonitoringRule does not monitor a registry key.",
            "items": {
              "type": "string"
            }
          },
          "registryIncludeDefaultValue": {
            "type": "boolean",
            "description": "Controls whether the rule should monitor default registry key values. Defaults to `true`. Ignored if the IntegrityMonitoringRule does not monitor a registry key."
          },
          "registryExcludedValues": {
            "type": "array",
            "description": "Registry key values to be ignored by the IntegrityMonitoringRule. JSON array or delimited by `\\n`. `?` matches a single character, while `*` matches zero or more characters. Ignored if the IntegrityMonitoringRule does not monitor a registry key.",
            "items": {
              "type": "string"
            }
          },
          "registryAttributes": {
            "type": "array",
            "description": "Registry key attributes to be monitored by the IntegrityMonitoringRule. JSON array or delimited by `\\n`. Defaults to `STANDARD` which will monitor changes in registry size, content and type. Ignored if the IntegrityMonitoringRule does not monitor a registry key.",
            "items": {
              "type": "string"
            }
          },
          "fileBaseDirectory": {
            "type": "string",
            "description": "Base of the file directory to be monitored by the IntegrityMonitoringRule. Ignored if the IntegrityMonitoringRule does not monitor a file directory."
          },
          "fileIncludeSubDirectories": {
            "type": "boolean",
            "description": "Controls whether the IntegrityMonitoringRule should also monitor sub-directories of the base file directory that is associated with it. Defaults to `false`. Ignored if the IntegrityMonitoringRule does not monitor a file directory."
          },
          "fileIncludedValues": {
            "type": "array",
            "description": "File name values to be monitored by the IntegrityMonitoringRule. JSON array or delimited by `\\n`. `?` matches a single character, while `*` matches zero or more characters. Leaving this field blank when monitoring file directories will cause the IntegrityMonitoringRule to monitor all files in a directory. This can use significant system resources if the base directory contains numerous or large files. Ignored if the IntegrityMonitoringRule does not monitor a file directory.",
            "items": {
              "type": "string"
            }
          },
          "fileExcludedValues": {
            "type": "array",
            "description": "File name values to be ignored by the IntegrityMonitoringRule. JSON array or delimited by `\\n`. `?` matches a single character, while `*` matches zero or more characters. Ignored if the IntegrityMonitoringRule does not monitor a file directory.",
            "items": {
              "type": "string"
            }
          },
          "fileAttributes": {
            "type": "array",
            "description": "File attributes to be monitored by the IntegrityMonitoringRule. JSON array or delimited by `\\n`. Defaults to `STANDARD` which will monitor changes in file creation date, last modified date, permissions, owner, group, size, content, flags (Windows) and SymLinkPath (Linux). Ignored if the IntegrityMonitoringRule does not monitor a file directory.",
            "items": {
              "type": "string"
            }
          },
          "customXML": {
            "type": "string",
            "description": "Custom XML rules to be used by the IntegrityMonitoringRule. Custom XML rules must be encoded in the Base64 format. Ignored if the IntegrityMonitoringRule does not follow the `custom` template."
          },
          "alertEnabled": {
            "type": "boolean",
            "description": "Controls whether an alert should be made if an event related to the IntegrityMonitoringRule is logged. Defaults to `false`. Searchable as Boolean."
          },
          "realTimeMonitoringEnabled": {
            "type": "boolean",
            "description": "Controls whether the IntegrityMonitoringRule is monitored in real time or during every scan. Defaults to `true` which indicates that it is monitored in real time. A value of `false` indicates that it will only be checked during scans. Searchable as Boolean."
          },
          "recommendationsMode": {
            "type": "string",
            "description": "Indicates whether recommendation scans consider the IntegrityMonitoringRule. Can be set to enabled or ignored. Custom rules cannot be recommended. Searchable as Choice.",
            "enum": [
              "enabled",
              "ignored",
              "unknown",
              "disabled"
            ]
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the IntegrityMonitoringRule. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "Integrity monitoring rules describe how Deep Security Agents should scan for and detect changes to a computer's files, directories and registry keys and values as well as changes in installed software, processes, listening ports and running services. Integrity monitoring rules can be assigned directly to computers or can be made part of a policy."
      },
      "intrusionPreventionAssignments": {
        "type": "object",
        "properties": {
          "assignedRuleIDs": {
            "type": "array",
            "description": "IDs of the intrusion prevention rules currently assigned.",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "assignedApplicationTypeIDs": {
            "type": "array",
            "description": "IDs of the application types currently assigned.",
            "readOnly": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "recommendationScanStatus": {
            "type": "string",
            "description": "Status of the last recommendation scan.",
            "enum": [
              "none",
              "valid",
              "out-of-date",
              "unknown"
            ]
          },
          "lastRecommendationScanDate": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the last recommendation scan, in milliseconds since epoch."
          },
          "recommendedToAssignRuleIDs": {
            "type": "array",
            "description": "IDs of the intrusion prevention rules recommended for assignment.",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "recommendedToUnassignRuleIDs": {
            "type": "array",
            "description": "IDs of the intrusion prevention rules recommended for unassignment.",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "IntrusionPreventionRules": {
        "type": "object",
        "properties": {
          "intrusionPreventionRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/intrusionPreventionRule"
            }
          }
        }
      },
      "intrusionPreventionRule": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the IntrusionPreventionRule. Searchable as String."
          },
          "description": {
            "type": "string",
            "description": "Description of the IntrusionPreventionRule. Searchable as String."
          },
          "minimumAgentVersion": {
            "type": "string",
            "description": "Version of the Deep Security agent or appliance required to support the rule. Searchable as String."
          },
          "applicationTypeID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the application type for the IntrusionPreventionRule. Searchable as Numeric."
          },
          "priority": {
            "type": "string",
            "description": "Priority level of the rule. Higher priority rules are applied before lower priority rules. Searchable as Choice.",
            "enum": [
              "lowest",
              "low",
              "normal",
              "high",
              "highest"
            ]
          },
          "severity": {
            "type": "string",
            "description": "Severity level of the rule. Severity levels can be used as sorting criteria and affect event rankings. Searchable as Choice.",
            "enum": [
              "low",
              "medium",
              "high",
              "critical"
            ]
          },
          "detectOnly": {
            "type": "boolean",
            "description": "In detect mode, the rule creates an event log and does not interfere with traffic."
          },
          "eventLoggingDisabled": {
            "type": "boolean",
            "description": "Enable to prevent event logs from being created when the rule is triggered. Not available if detectOnly is true. Searchable as Boolean."
          },
          "generateEventOnPacketDrop": {
            "type": "boolean",
            "description": "Generate an event every time a packet is dropped for the rule. Not available if eventLoggingDisabled is true. Searchable as Boolean."
          },
          "alwaysIncludePacketData": {
            "type": "boolean",
            "description": "Enabled to include package data in the event logs. Not available if eventLoggingDisabled is true. Searchable as Boolean."
          },
          "debugModeEnabled": {
            "type": "boolean",
            "description": "Enable to log additional packets preceeding and following the packet that the rule detected. Not available if eventLoggingDisabled is true. Searchable as Boolean."
          },
          "type": {
            "type": "string",
            "description": "Type of IntrusionPreventionRule. Searchable as Choice.",
            "enum": [
              "custom",
              "smart",
              "vulnerability",
              "exploit",
              "hidden",
              "policy",
              "info"
            ]
          },
          "originalIssue": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the date the rule was released, in milliseconds since epoch. Searchable as Date."
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the last rule modification, in milliseconds since epoch. Searchable as Date."
          },
          "identifier": {
            "type": "string",
            "description": "Unique identification tag of the rule. Searchable as String.",
            "readOnly": true
          },
          "template": {
            "type": "string",
            "description": "Type of template for the IntrusionPreventionRule. Applicable only to custom rules.",
            "enum": [
              "signature",
              "start-end-patterns",
              "custom"
            ]
          },
          "signature": {
            "type": "string",
            "description": "Signature of the rule. Applicable to custom rules with template type signature."
          },
          "start": {
            "type": "string",
            "description": "Start pattern of the rule. Applicable to custom rules with template type start-end-patterns."
          },
          "patterns": {
            "type": "array",
            "description": "Body patterns of the rule, which must be found between start and end patterns. Applicable to custom rules with template type start-end-patterns.",
            "items": {
              "type": "string"
            }
          },
          "end": {
            "type": "string",
            "description": "End pattern of the rule. Applicable to custom rules with template type start-end-patterns."
          },
          "caseSensitive": {
            "type": "boolean",
            "description": "Enable to make signatures and patterns case sensitive. Applicable to custom rules with template type signature or start-end-patterns."
          },
          "condition": {
            "type": "string",
            "description": "Condition to determine if the rule is triggered. Applicable to custom rules with template type start-end-patterns.",
            "enum": [
              "all",
              "any",
              "none"
            ]
          },
          "action": {
            "type": "string",
            "description": "Action to apply if the rule is triggered. Applicable to custom rules with template type signature or start-end-patterns.",
            "enum": [
              "drop",
              "log-only"
            ]
          },
          "customXML": {
            "type": "string",
            "description": "The custom XML used to define the rule. Applicable to custom rules with template type custom."
          },
          "alertEnabled": {
            "type": "boolean",
            "description": "Enable to raise an alert when the rule logs an event. Searchable as Boolean."
          },
          "scheduleID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the schedule which defines times during which the rule is active. Set to 0 to remove any assignment. Searchable as Numeric."
          },
          "contextID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the context in which the rule is applied. Set to 0 to remove any assignment. Searchable as Numeric."
          },
          "recommendationsMode": {
            "type": "string",
            "description": "Indicates whether recommendation scans consider the IntrusionPreventionRule. Can be set to enabled or ignored. Custom rules cannot be recommended. Searchable as Choice.",
            "enum": [
              "enabled",
              "ignored",
              "unknown",
              "disabled"
            ]
          },
          "canBeAssignedAlone": {
            "type": "boolean",
            "description": "True when the rule has no dependencies.",
            "readOnly": true
          },
          "dependsOnRuleIDs": {
            "type": "array",
            "description": "IDs of intrusion prevention rules the rule depends on, which will be automatically assigned if this rule is assigned.",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the IntrusionPreventionRule. Searchable as ID.",
            "readOnly": true
          },
          "CVSSScore": {
            "type": "string",
            "description": "A measure of the severity of the vulnerability according the National Vulnerability Database. Searchable as String or as Numeric."
          },
          "CVE": {
            "type": "array",
            "description": "List of CVEs associated with the IntrusionPreventionRule. Searchable as String.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Intrusion Prevention rule details. Intrusion prevention rules define a set of conditions that are compared to the payload session and application layers of network packets (such as DNS, HTTP, SSL, and SMTP), as well as the sequence of those packets according to those higher-layer protocols."
      },
      "logInspectionAssignments": {
        "type": "object",
        "properties": {
          "assignedRuleIDs": {
            "type": "array",
            "description": "IDs of the log inspection rules currently assigned.",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "recommendationScanStatus": {
            "type": "string",
            "description": "Status of the last recommendation scan.",
            "enum": [
              "none",
              "valid",
              "out-of-date",
              "unknown"
            ]
          },
          "lastRecommendationScanDate": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the last recommendation scan, in milliseconds since epoch."
          },
          "recommendedToAssignRuleIDs": {
            "type": "array",
            "description": "IDs of the log inspection rules recommended for assignment.",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "recommendedToUnassignRuleIDs": {
            "type": "array",
            "description": "IDs of the log inspection rules recommended for unassignment.",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "description": "Result of a log inspection recommendation."
      },
      "LogFiles": {
        "type": "object",
        "properties": {
          "logFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/logFile"
            }
          }
        }
      },
      "LogInspectionRules": {
        "type": "object",
        "properties": {
          "logInspectionRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/logInspectionRule"
            }
          }
        }
      },
      "logFile": {
        "type": "object",
        "properties": {
          "location": {
            "type": "string",
            "description": "File path of the log file."
          },
          "format": {
            "type": "string",
            "description": "Structure of the data in the log file. The application that generates the log file defines the structure of the data.",
            "enum": [
              "syslog",
              "snort-full",
              "snort-fast",
              "apache",
              "iis",
              "squid",
              "nmapg",
              "mysql-log",
              "postgresql-log",
              "dbj-multilog",
              "eventlog",
              "single-line-text-log"
            ]
          }
        },
        "description": "Describes the file path and format of the log file."
      },
      "logInspectionRule": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the LogInspectionRule. Searchable as String."
          },
          "description": {
            "type": "string",
            "description": "Description of the LogInspectionRule that appears in search results, and on the General tab in the Deep Security Manager user interface. Searchable as String."
          },
          "minimumAgentVersion": {
            "type": "string",
            "description": "Minimum Deep Security Agent version required by the LogInspectionRule. Searchable as String."
          },
          "minimumManagerVersion": {
            "type": "string",
            "description": "Minimumn Deep Security Manager version required by the LogInspectionRule. Searchable as String."
          },
          "type": {
            "type": "string",
            "description": "Type of the LogInspectionRule. The value 'Defined' is used for LogInspectionRules provided by Trend Micro. Searchable as String."
          },
          "originalIssue": {
            "type": "integer",
            "format": "int64",
            "description": "Creation timestamp of the LogInspectionRule, measured in milliseconds since epoch. Searchable as Date."
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64",
            "description": "Update timestamp of the LogInspectionRule, measured in milliseconds since epoch. Searchable as Date."
          },
          "identifier": {
            "type": "string",
            "description": "Indentifier of the LogInspectionRule used in the Deep Security Manager user interface. Searchable as String."
          },
          "template": {
            "type": "string",
            "description": "Template used to create this rule.",
            "enum": [
              "basic-rule",
              "custom"
            ]
          },
          "ruleID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the LogInspectionRule sent to the Deep Security Agent. The values 100000 - 109999 are reserved for user-definded rules."
          },
          "level": {
            "type": "integer",
            "format": "int32",
            "description": "Log level of the LogInspectionRule indicates severity of attack. Level 0 is the least severe and will not log an event. Level 15 is the most severe."
          },
          "groups": {
            "type": "array",
            "description": "Groups that the LogInspectionRule is assigned to, separated by commas. Useful when dependency is used as it's possible to create a LogInspectionRule that fires when another LogInspectionRule belonging to a specific group fires.",
            "items": {
              "type": "string"
            }
          },
          "ruleDescription": {
            "type": "string",
            "description": "Description of the LogInspectionRule that appears on events and the Content tab in the Deep Security Manager user interface. Alternatively, you can configure this by inserting a description in 'ruleXML'."
          },
          "pattern": {
            "type": "string",
            "description": "Regular expression pattern the LogInspectionRule will look for in the logs. The rule will be triggered on a match. Open Source HIDS SEcurity (OSSEC) regular expression syntax is supported, see http://www.ossec.net/docs/syntax/regex.html."
          },
          "patternType": {
            "type": "string",
            "description": "Pattern the LogInspectionRule will look for in the logs. The string matching pattern is faster than the regex pattern.",
            "enum": [
              "string",
              "regex"
            ]
          },
          "dependency": {
            "type": "string",
            "description": "Indicates if a dependant rule or dependency group is set or not. If set, the LogInspectionRule will only log an event if the dependency is triggered. Available for user-defined rules.",
            "enum": [
              "none",
              "rule",
              "group"
            ]
          },
          "dependencyRuleID": {
            "type": "integer",
            "format": "int32",
            "description": "If dependency is configured, the ID of the rule that this rule is dependant on. Ignored if the rule is from Trend Micro, which uses `dependsOnRuleIDs` instead."
          },
          "dependencyGroup": {
            "type": "string",
            "description": "If dependency is configured, the dependancy groups that this rule is dependant on."
          },
          "frequency": {
            "type": "integer",
            "format": "int32",
            "description": "Number of times the dependant rule has to match within a specific time frame before the rule is triggered."
          },
          "timeFrame": {
            "type": "integer",
            "format": "int32",
            "description": "Time period for the frequency of LogInspectionRule triggers that will generate an event, in seconds."
          },
          "ruleXML": {
            "type": "string",
            "description": "LogInspectionRule in an XML format. For information on the XML format, see http://ossec-docs.readthedocs.io/en/latest/syntax/head_rules.html"
          },
          "logFiles": {
            "$ref": "#/components/schemas/LogFiles"
          },
          "alertEnabled": {
            "type": "boolean",
            "description": "Controls whether to raise an alert when a LogInspectionRule logs an event. Use true to raise an alert. Searchable as Boolean."
          },
          "alertMinimumSeverity": {
            "type": "integer",
            "format": "int32",
            "description": "Severity level that will trigger an alert. Ignored unless `ruleXML` contains multiple rules with different severities, and so you must indicate which severity level to use. Searchable as Numeric."
          },
          "recommendationsMode": {
            "type": "string",
            "description": "Indicates whether recommendation scans consider the LogInspectionRule. Can be set to enabled or ignored. Custom rules cannot be recommended. Searchable as Choice.",
            "enum": [
              "enabled",
              "ignored",
              "unknown",
              "disabled"
            ]
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "description": "Order in which LogInspectionRules are sent to the Deep Security Agent. Log inspeciton rules are sent in ascending order. Valid values are between 10000 and 20000."
          },
          "canBeAssignedAlone": {
            "type": "boolean",
            "description": "Indicates whether this LogInspectionRule can be allocated without allocating any additional LogInspectionRules. Ignored if the rule is user-defined, which uses `dependency` instead.",
            "readOnly": true
          },
          "dependsOnRuleIDs": {
            "type": "array",
            "description": "IDs of LogInspectionRules, separated by commas, that are required by this rule. Ignored if the rule is user-defined, which uses `dependencyRuleID` or `dependencyGroup` instead.",
            "readOnly": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the LogInspectionRule. This number is set automatically. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "Contains string matching and threshold to trigger alerts as well as group information for LogInspectionRules."
      },
      "contact": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the Contact. Searchable as String."
          },
          "description": {
            "type": "string",
            "description": "Description of the Contact. Searchable as String."
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number of the Contact. Searchable as String."
          },
          "mobileNumber": {
            "type": "string",
            "description": "Mobile number of the Contact. Searchable as String."
          },
          "pagerNumber": {
            "type": "string",
            "description": "Pager number of the Contact. Searchable as String."
          },
          "emailAddress": {
            "type": "string",
            "description": "Email address of the Contact. Searchable as String."
          },
          "locale": {
            "type": "string",
            "description": "Locale of the Contact.",
            "enum": [
              "en-US",
              "ja-JP"
            ]
          },
          "roleID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the role assigned to the Contact. Searchable as Numeric."
          },
          "reportPDFPasswordEnabled": {
            "type": "boolean",
            "description": "Controls whether the reports that the Contact generates are password-protected. Set to true to password-protect, and false otherwise. Defaults to false. Searchable as Boolean."
          },
          "reportPDFPassword": {
            "type": "string",
            "description": "Password that protects the reports that the Contact generates. Ignored when reportPDFPasswordEnabled is false."
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the Contact. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "Details of a Contact. A contact is a user who cannot sign into Deep Security Manager but can be sent reports via scheduled tasks."
      },
      "Contacts": {
        "type": "object",
        "properties": {
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/contact"
            }
          }
        }
      },
      "DataCenterGateways": {
        "type": "object",
        "properties": {
          "dataCenterGateways": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/dataCenterGateway"
            }
          }
        }
      },
      "dataCenterGateway": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Data center gateway's display name."
          },
          "publicKey": {
            "type": "string",
            "description": "Public key of the data center gateway.",
            "readOnly": true
          },
          "gatewayResource": {
            "type": "string",
            "description": "Resource name of data center gateway.",
            "readOnly": true
          },
          "endpoint": {
            "type": "string",
            "description": "Control endpoint for the data center gateway service.",
            "readOnly": true
          },
          "cloudOneAccountID": {
            "type": "string",
            "description": "Cloud One account ID.",
            "readOnly": true
          },
          "created": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the creation of the data center gateway, in milliseconds since epoch.",
            "readOnly": true
          },
          "lastModified": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the last updated to the data center gateway, in milliseconds since epoch.",
            "readOnly": true
          },
          "certificate": {
            "type": "string",
            "description": "Certificate of the data center gateway. Only returned when creating a new Data Center Gateway.",
            "readOnly": true
          },
          "privateKey": {
            "type": "string",
            "description": "Private key of the data center gateway. Only returned when creating a new Data Center Gateway.",
            "readOnly": true
          },
          "rootCA": {
            "type": "string",
            "description": "Root CA for data center gateway service. Only returned when creating a new Data Center Gateway.",
            "readOnly": true
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of data center gateway.",
            "readOnly": true
          }
        },
        "description": "DataCenterGateway details. A DataCenterGateway object represents a connection between the gateway client and Cloud One Workload Security."
      },
      "USBDevice": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the USB Storage Device. Searchable as String."
          },
          "vendor": {
            "type": "string",
            "description": "Vendor of the USB Storage Device. Searchable as String."
          },
          "model": {
            "type": "string",
            "description": "Model of the USB Storage Device. Searchable as String."
          },
          "serialNumber": {
            "type": "string",
            "description": "Serial Number of the USB Storage Device. Searchable as String."
          },
          "ID": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the USB Storage Device. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "USB Storage Device details."
      },
      "USBDevices": {
        "type": "object",
        "properties": {
          "usbDevices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/USBDevice"
            }
          }
        },
        "description": "List of USB Storage Device objects."
      },
      "ComputerExceptionRule": {
        "type": "object",
        "properties": {
          "computerID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the computer.",
            "readOnly": true
          },
          "hostName": {
            "type": "string",
            "description": "Hostname of the computer.",
            "readOnly": true
          },
          "displayName": {
            "type": "string",
            "description": "Display name of the computer.",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "Description of the computer.",
            "readOnly": true
          },
          "ID": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the USB Storage Device Exception Rule.",
            "readOnly": true
          },
          "action": {
            "type": "string",
            "enum": [
              "full-access"
            ]
          }
        },
        "description": "USB Storage Device exception rule with basic computer information."
      },
      "ComputerExceptionRules": {
        "type": "object",
        "properties": {
          "computers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComputerExceptionRule"
            }
          }
        },
        "description": "List of USB Storage Device exception objects with computer information."
      },
      "PolicyExceptionRule": {
        "type": "object",
        "properties": {
          "policyID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the policy.",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of the policy.",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "Description of the policy.",
            "readOnly": true
          },
          "ID": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the USB Storage Device Exception Rule.",
            "readOnly": true
          },
          "action": {
            "type": "string",
            "enum": [
              "full-access"
            ]
          }
        },
        "description": "USB Storage Device exception rule with basic policy information."
      },
      "PolicyExceptionRules": {
        "type": "object",
        "properties": {
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyExceptionRule"
            }
          }
        },
        "description": "List of USB Storage Device exception objects with policy information."
      },
      "DirectoryLists": {
        "type": "object",
        "properties": {
          "directoryLists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/directoryList"
            }
          }
        }
      },
      "directoryList": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the directory list. Searchable as String."
          },
          "description": {
            "type": "string",
            "description": "Description of the directory list. Searchable as String."
          },
          "items": {
            "type": "array",
            "description": "List of directory paths. Windows directories need to end in a backslash (\\). Asterisk (*) is a wildcard character.",
            "items": {
              "type": "string"
            }
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the directory list. This number is set automatically. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "Collection of directories."
      },
      "EventBasedTask": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of event based task. Searchable as String."
          },
          "type": {
            "type": "string",
            "description": "Type of scheduled task. Searchable as Choice.",
            "enum": [
              "computer-created-by-system",
              "computer-moved-by-system",
              "agent-initiated-activation",
              "agent-ip-changed",
              "nsx-protection-changed",
              "computer-powered-on-by-system"
            ]
          },
          "enabled": {
            "type": "boolean",
            "description": "Indicates whether or not the event based task is enabled. Searchable as Boolean."
          },
          "lastRunTime": {
            "type": "integer",
            "format": "int64",
            "description": "The last time this event based task was run, or null if never run. Searchable as Date."
          },
          "actions": {
            "type": "array",
            "description": "List of actions to perform when an event based task condition is met.",
            "items": {
              "$ref": "#/components/schemas/EventBasedTaskAction"
            }
          },
          "conditions": {
            "type": "array",
            "description": "List of conditions that must be met in order for an event based task to run its actions.",
            "items": {
              "$ref": "#/components/schemas/EventBasedTaskCondition"
            }
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "Event based task identifier. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "Defines an event based task. Events based tasks automatically perform specific Deep Security Manager triggered by an event."
      },
      "EventBasedTaskAction": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of action taken by the event based task.",
            "enum": [
              "activate",
              "assign-policy",
              "assign-relay",
              "assign-group",
              "deactivate"
            ]
          },
          "parameterValue": {
            "type": "integer",
            "format": "int32",
            "description": "The parameter value for actions that require a parameter.\n\tactivate : activation delay in minutes\n\tassign-policy : ID of the policy to assign\n\tassign-relay : ID of the relay group to assign\n\tassign-group : ID of the computer group to assign"
          }
        },
        "description": "Defines an action to perform when an event based task condition is met."
      },
      "EventBasedTaskCondition": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "description": "The event field to match against when evaluating this condition. Use `tag` enum to specify \"Cloud Instance Metadata\" which correspond to \"AWS Tags\", \"Azure Tags\" or \"GCP Labels\".",
            "enum": [
              "hostname",
              "vcenter",
              "cloudProvider",
              "securityGroup",
              "imageId",
              "esx",
              "folder",
              "platform",
              "applianceProtectionAvailable",
              "applianceProtectionActivated",
              "lastUsedIP",
              "tag",
              "nsxSecurityGroup",
              "cloudVendor",
              "gcpNetworkTag"
            ]
          },
          "key": {
            "type": "string",
            "description": "If matching against a key/value field, then the key to match when evaluating this condition."
          },
          "value": {
            "type": "string",
            "description": "The value to match when evaluating this condition."
          }
        },
        "description": "Defines a condition that must be met in order for an event based task to run its actions."
      },
      "EventBasedTasks": {
        "type": "object",
        "properties": {
          "eventBasedTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventBasedTask"
            }
          }
        }
      },
      "FileExtensionLists": {
        "type": "object",
        "properties": {
          "fileExtensionLists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fileExtensionList"
            }
          }
        }
      },
      "fileExtensionList": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the file extension list. Searchable as String."
          },
          "description": {
            "type": "string",
            "description": "Description of the file extension list. Searchable as String."
          },
          "items": {
            "type": "array",
            "description": "List of file extensions. Asterisk (*) is a wildcard character.",
            "items": {
              "type": "string"
            }
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the file extension list. This number is set automatically. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "Collection of file extensions."
      },
      "FileLists": {
        "type": "object",
        "properties": {
          "fileLists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fileList"
            }
          }
        }
      },
      "fileList": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the file list. Searchable as String."
          },
          "description": {
            "type": "string",
            "description": "Description of the file list. Searchable as String."
          },
          "items": {
            "type": "array",
            "description": "List of file paths. Asterisk (*) is a wildcard character.",
            "items": {
              "type": "string"
            }
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the file list. This number is set automatically. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "Collection of files."
      },
      "action": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of the GCPConnectorAction.",
            "enum": [
              "synchronize"
            ]
          },
          "status": {
            "type": "string",
            "description": "Status of the GCPConnectorAction.",
            "enum": [
              "SUBMITTED",
              "RUNNING",
              "SUCCESS",
              "FAILED"
            ]
          },
          "submittedTime": {
            "type": "integer",
            "format": "int64",
            "description": "Submitted time of the GCPConnectorAction."
          },
          "ID": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the GCPConnectorAction.",
            "readOnly": true
          }
        },
        "description": "The supported action of a gcp connector."
      },
      "GCPConnector": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Display name of the connector. Searchable as String."
          },
          "serviceAccount": {
            "type": "string",
            "description": "Service account of the connector, base64-encoded."
          },
          "ownerProjectID": {
            "type": "string",
            "description": "The project ID which owns the service account. Searchable as String.",
            "readOnly": true
          },
          "privateKeyID": {
            "type": "string",
            "description": "Private key ID of the GCP service account. Searchable as String.",
            "readOnly": true
          },
          "clientEmail": {
            "type": "string",
            "description": "Client email of the GCP service account. Searchable as String.",
            "readOnly": true
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the connector.",
            "readOnly": true
          }
        },
        "description": "Everything about GCP connector."
      },
      "GCPConnectors": {
        "type": "object",
        "properties": {
          "gcpconnectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GCPConnector"
            }
          }
        }
      },
      "InterfaceTypes": {
        "type": "object",
        "properties": {
          "interfaceTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/interfaceType"
            }
          }
        }
      },
      "interfaceType": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the InterfaceType. Searchable as String."
          },
          "description": {
            "type": "string",
            "description": "Description of the InterfaceType. Searchable as String."
          },
          "matches": {
            "type": "array",
            "description": "String patterns to match with Interface names and display names. One pattern per line. The `*` character can be used for wildcard matches. Searchable as String.",
            "items": {
              "type": "string"
            }
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the InterfaceType. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "Use InterfaceTypes to apply Deep Security policies to specific network interfaces of managed computers."
      },
      "ipList": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the IP list. Searchable as String."
          },
          "description": {
            "type": "string",
            "description": "Description of the IP list. Searchable as String."
          },
          "items": {
            "type": "array",
            "description": "List of comma-delimited IP addresses. Can contain individual IPs, masked IPs (for example: \"192.168.2.0./24\", \"192.168.2.0/255.255.255.0\" or \"2001:0DB8::CD30:0:0:0:0/60\") or IP ranges (for example: \"192.168.0.2 - 192.168.0.125\" or \"FF01::101 - FF01::102\").",
            "items": {
              "type": "string"
            }
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the IP list. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "IP list details."
      },
      "ipLists": {
        "type": "object",
        "properties": {
          "ipLists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ipList"
            }
          }
        }
      },
      "macList": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the MAC address list. Searchable as String."
          },
          "description": {
            "type": "string",
            "description": "Description of the MAC address list. Searchable as String."
          },
          "items": {
            "type": "array",
            "description": "List of comma-delimited MAC addresses. The list can also contain comments and other information that is parsed out.",
            "items": {
              "type": "string"
            }
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the MAC address list. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "MAC address list details."
      },
      "macLists": {
        "type": "object",
        "properties": {
          "macLists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/macList"
            }
          }
        }
      },
      "MovedComputers": {
        "type": "object",
        "properties": {
          "movedComputers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/movedComputer"
            }
          }
        },
        "description": "List of MovedComputer objects"
      },
      "movedComputer": {
        "type": "object",
        "properties": {
          "moveGUID": {
            "type": "string",
            "description": "GUID of the move of the computer. Searchable as String."
          },
          "computerID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the computer. Searchable as Numeric."
          },
          "moved": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp when the computer was moved, in milliseconds since epoch. Searchable as Date.",
            "readOnly": true
          },
          "created": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp when the MovedComputer was created, in milliseconds since epoch. Searchable as Date.",
            "readOnly": true
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the MovedComputer. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "MovedComputer details."
      },
      "ActivityMonitoringPolicyExtension": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "description": "Module state. The 'inherited' value is write-only.",
            "enum": [
              "inherited",
              "on",
              "off"
            ]
          },
          "moduleStatus": {
            "$ref": "#/components/schemas/policyModuleStatus"
          }
        },
        "description": "Policy-level configuration for the Activity Monitoring module"
      },
      "AntiMalwarePolicyExtension": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "description": "Module state. The 'inherited' value is write-only.",
            "enum": [
              "inherited",
              "on",
              "off"
            ]
          },
          "moduleStatus": {
            "$ref": "#/components/schemas/policyModuleStatus"
          },
          "realTimeScanConfigurationID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the Real Time Scan Configuration."
          },
          "realTimeScanScheduleID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the Real Time Schedule."
          },
          "manualScanConfigurationID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the Manual Scan Configuration."
          },
          "scheduledScanConfigurationID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the Scheduled Scan Configuration."
          }
        },
        "description": "Policy-level configuration for the Anti-Malware module"
      },
      "ApplicationControlPolicyExtension": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "description": "Module state. The 'inherited' value is write-only.",
            "enum": [
              "inherited",
              "on",
              "off"
            ]
          },
          "moduleStatus": {
            "$ref": "#/components/schemas/policyModuleStatus"
          },
          "blockUnrecognized": {
            "type": "boolean",
            "description": "Block unrecognized software until it is explicitly allowed."
          },
          "rulesetID": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the shared whitelist ruleset."
          },
          "trustRulesetID": {
            "type": "string",
            "description": "ID of the trust ruleset. An empty string will set it to \"None\" and assigning a value of 0 will set it to \"Inherited\"."
          }
        },
        "description": "Policy-level configuration for the Application Control module"
      },
      "DeviceControlPolicyExtension": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "enum": [
              "inherited",
              "on",
              "off"
            ]
          },
          "moduleStatus": {
            "$ref": "#/components/schemas/policyModuleStatus"
          }
        },
        "description": "Policy-level configuration for the Device Control module. Null for tenants for whom Device Control is hidden."
      },
      "FirewallPolicyExtension": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "description": "Module state. The 'inherited' value is write-only.",
            "enum": [
              "inherited",
              "on",
              "off"
            ]
          },
          "moduleStatus": {
            "$ref": "#/components/schemas/policyModuleStatus"
          },
          "globalStatefulConfigurationID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the Global Stateful Configuration. Set to 0 to remove any assignment."
          },
          "statefulConfigurationAssignments": {
            "$ref": "#/components/schemas/StatefulConfigurationAssignments"
          },
          "ruleIDs": {
            "type": "array",
            "description": "IDs of the assigned firewall rules.",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "description": "Policy-level configuration for the Firewall module"
      },
      "IntegrityMonitoringPolicyExtension": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "description": "Module state. The 'inherited' value is write-only.",
            "enum": [
              "inherited",
              "real-time",
              "on",
              "off"
            ]
          },
          "moduleStatus": {
            "$ref": "#/components/schemas/policyModuleStatus"
          },
          "ruleIDs": {
            "type": "array",
            "description": "IDs of the assigned Integrity Monitoring rules.",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "description": "Policy-level configuration for the Integrity Monitoring module"
      },
      "IntrusionPreventionPolicyExtension": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "description": "Module state. The 'inherited' value is write-only.",
            "enum": [
              "inherited",
              "prevent",
              "detect",
              "off"
            ]
          },
          "moduleStatus": {
            "$ref": "#/components/schemas/policyModuleStatus"
          },
          "ruleIDs": {
            "type": "array",
            "description": "IDs of the assigned Intrusion Prevention rules.",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "applicationTypeIDs": {
            "type": "array",
            "description": "IDs of the assigned Application Types.",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "description": "Policy-level configuration for the Intrusion Prevention module"
      },
      "LogInspectionPolicyExtension": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "description": "Module state. The 'inherited' value is write-only.",
            "enum": [
              "inherited",
              "on",
              "off"
            ]
          },
          "moduleStatus": {
            "$ref": "#/components/schemas/policyModuleStatus"
          },
          "ruleIDs": {
            "type": "array",
            "description": "IDs of the assigned Log Inspection rules.",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "description": "Policy-level configuration for the Log Inspection module"
      },
      "PolicySettings": {
        "type": "object",
        "properties": {
          "logInspectionSettingSeverityClippingAgentEventSendSyslogLevelMin": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionConnectionsCleanupMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionVerifyTcpChecksumEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingScanCacheOnDemandConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "applicationControlSettingSharedRulesetId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingSmartProtectionServerConnectionLostWarningEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "applicationControlSettingExecutionEnforcementLevel": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingBlockedUrlDomains": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionSynSentTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAgentSelfProtectionPassword": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceBlockTcpXmasAttackDuration": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingVirtualAndContainerNetworkScanEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "logInspectionSettingSyslogConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDebugModeEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingVirtualAndContainerNetworkScanEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingFileHashSha256Enabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceNotifyFingerprintProbeEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEventLogFileRetainNum": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckTcpPawsZero": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingConnectedThreatDefenseUseControlManagerSuspiciousObjectListEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingEngineOptionFragmentedIpKeepMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDrop6To4BogonsAddressesEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "logInspectionSettingSeverityClippingAgentEventStoreLevelMin": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingScanCacheConcurrencyMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingSyslogConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionTcpPawsWindowPolicy": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceDetectTcpXmasAttackEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "applicationControlSettingRulesetMode": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingSmartProtectionGlobalServerUseProxyEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingSmartProtectionLocalServerAllowOffDomainGlobal": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "integrityMonitoringSettingCombinedModeProtectionSource": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionCloseWaitTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingScanOpenPortListId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAgentSelfProtectionPasswordEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionAckTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEventLogFileCachedEntriesStaleTime": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingCombinedModeProtectionSource": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAgentEventsSendInterval": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingInactiveAgentCleanupOverrideEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingFailureResponseEngineSystem": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingRelayState": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDropEvasiveRetransmitEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "activityMonitoringSettingIndicatorEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingEngineOptionFragmentedIpTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckTcpZeroFlags": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingSmartProtectionGlobalServerUseProxyEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingNsxSecurityTaggingPreventModeLevel": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceNotifyTcpXmasAttackEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionUdpTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingSmartProtectionLocalServerEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionTcpMssLimit": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionColdStartTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionEstablishedTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingIdentifiedFilesSpaceMaxMbytes": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionAllowNullIpEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingNotificationsSuppressPopupsEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckTcpRstFinFlags": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDisconnectTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionCloseTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionTunnelDepthMaxExceededAction": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceDetectTcpNullScanEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingSmartProtectionAntiMalwareGlobalServerProxyId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionFilterIpv4Tunnels": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingSmartProtectionLocalServerUrls": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionLogOnePacketPeriod": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "deviceControlSettingSyslogConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionFilterIpv6Tunnels": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckTcpCongestionFlags": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingHeartbeatMissedAlertThreshold": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingEngineOptionsEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionConnectionsNumUdpMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "integrityMonitoringSettingAutoApplyRecommendationsEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionTunnelDepthMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDropUnknownSslProtocolEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingNsxSecurityTaggingValue": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingLogDataRuleFirstMatchEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionLoggingPolicy": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingTroubleshootingLoggingLevel": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingVirtualApplianceOnDemandScanCacheEntriesMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingCombinedModeProtectionSource": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionClosingTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckPaws": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingAutoApplyRecommendationsEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceDetectFingerprintProbeEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingNsxSecurityTaggingRemoveOnCleanScanEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionLogPacketLengthMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDropTeredoAnomaliesEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingSecurityLevel": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDropIpv6SiteLocalAddressesEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "activityMonitoringSettingActivityEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionStrictTerodoPortCheckEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAutoUpdateTlsInspectionSupportEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingBlockedUrlKeywords": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingSyslogConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingFailureResponsePacketSanityCheck": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingNetworkEngineMode": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEventLogFileSizeMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingMalwareScanMultithreadedProcessingEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceDetectTcpSynFinScanEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAutoUpdateKernelPackageEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDropIpZeroPayloadEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionBlockIpv6Agent8AndEarlierEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingEngineOptionFragmentedIpPacketSendIcmpEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingPredictiveMachineLearningExceptions": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionLogEventsPerSecondMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionSslSessionTime": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingBehaviorMonitoringScanExclusionList": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingSmartProtectionGlobalServerEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionLogOnePacketWithinPeriodEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionGenerateConnectionEventsIcmpEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingHeartbeatInactiveVmOfflineAlertEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingSmartProtectionWebReputationGlobalServerProxyId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingNsxSecurityTaggingEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckFragmentedPackets": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionConnectionsNumIcmpMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckTcpSplitHandshake": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingCombinedModeProtectionSource": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionEventNodesMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingMonitorPortListId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "applicationControlSettingSyslogConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckOutNoConnection": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionBlockIpv6Agent9AndLaterEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "integrityMonitoringSettingVirtualApplianceOptimizationScanCacheEntriesMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceNotifyTcpNullScanEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionIgnoreStatusCode1": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionIgnoreStatusCode0": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionIgnoreStatusCode2": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionSslSessionSize": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingScanCacheRealTimeConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingRecommendationOngoingScansInterval": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingSmartProtectionGlobalServerUseProxyEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingInterfaceLimitOneActiveEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckTcpChecksum": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDropIpv6ExtType0Enabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingScanFileSizeMaxMbytes": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionGenerateConnectionEventsTcpEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingFileHashSizeMaxMbytes": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEventLogFileCachedEntriesLifeTime": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingSmartProtectionGlobalServerProxyId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "logInspectionSettingAutoApplyRecommendationsEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingConnectedThreatDefenseSuspiciousFileDdanSubmissionEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "deviceControlSettingDeviceControlUsbStorageDeviceAction": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingBlockingPageLink": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingSyslogConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAgentCommunicationsDirection": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "integrityMonitoringSettingScanCacheConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingDocumentExploitProtectionRuleExceptions": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckTcpSynWithData": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingFileHashEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceBlockFingerprintProbeDuration": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDropIpv6BogonsAddressesEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionBootStartTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionConnectionsNumTcpMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionSecurityPosture": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingInterfacePatterns": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingInterfaceIsolationEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingVirtualApplianceRealTimeScanCacheEntriesMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEventsOutOfAllowedPolicyEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckEvasiveRetransmit": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionIcmpTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "integrityMonitoringSettingSyslogConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionConnectionCleanupTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingSmartProtectionLocalServerAllowOffDomainGlobal": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceNotifyTcpSynFinScanEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionErrorTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingOfflineScheduledScanEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingAllowedUrls": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceNotifyNetworkOrPortScanEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionFinWait1Timeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionGenerateConnectionEventsUdpEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "activityMonitoringSettingSyslogConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckTcpSynRstFlags": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingSpywareApprovedList": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckTcpUrgentFlags": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingNsxSecurityTaggingDetectModeLevel": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingEngineOptionFragmentedIpUnconcernedMacAddressBypassEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionLogAllPacketDataEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckTcpSynFinFlags": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingHeartbeatInterval": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionFragmentSizeMin": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingSmartProtectionServerConnectionLostWarningEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceBlockNetworkOrPortScanDuration": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "integrityMonitoringSettingContentHashAlgorithm": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingSmartScanState": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingConfigPackageExceedsAlertMaxEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingEnvironmentVariableOverrides": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionFragmentOffsetMin": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingSmartProtectionLocalServerUrls": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionSynRcvdTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEventLogFileCachedEntriesNum": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionForceAllowIcmpType3Code4": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceBlockTcpNullScanDuration": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingSmartProtectionGlobalServerEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "integrityMonitoringSettingRealtimeEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionLastAckTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "deviceControlSettingDeviceControlAutoRunUsbAction": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceExcludeIpListId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "deviceControlSettingDeviceControlEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAgentSelfProtectionEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDropIpv6ReservedAddressesEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckFinNoConnection": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDebugPacketNumMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionBypassCiscoWaasConnectionsEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingHeartbeatLocalTimeShiftAlertThreshold": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingFileHashMd5Enabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceDetectNetworkOrPortScanEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionSilentTcpConnectionDropEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionBlockSameSrcDstIpEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionForceAllowDhcpDns": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceIncludeIpListId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionsEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceBlockTcpSynFinScanDuration": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingSecurityBlockUntestedPagesEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingAllowedUrlDomains": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingEnableContainerFileOnAccessScan": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingTrustedCertificateExceptionEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEventLogFileIgnoreSourceIpListId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDropIpv6FragmentsLowerThanMinMtuEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAutoAssignNewIntrusionPreventionRulesEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckRstNoConnection": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingBlockedUrls": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingCombinedModeNetworkGroupProtectionSource": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingAlertingEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingNsxSecurityTaggingOnRemediationFailureEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "integrityMonitoringSettingCpuUsageLevel": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAutoUpdateAntiMalwareEngineEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "deviceControlSettingDeviceControlMobileDeviceAction": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingInspectTlsTrafficEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingCombinedModeProtectionSource": {
            "$ref": "#/components/schemas/SettingValue"
          }
        }
      },
      "SAPPolicyExtension": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "description": "Module state. The 'inherited' value is write-only.",
            "enum": [
              "inherited",
              "on",
              "off"
            ]
          },
          "moduleStatus": {
            "$ref": "#/components/schemas/policyModuleStatus"
          }
        },
        "description": "Policy-level configuration for the SAP module"
      },
      "WebReputationPolicyExtension": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "description": "Module state. The 'inherited' value is write-only.",
            "enum": [
              "inherited",
              "on",
              "off"
            ]
          },
          "moduleStatus": {
            "$ref": "#/components/schemas/policyModuleStatus"
          }
        },
        "description": "Policy-level configuration for the Web Reputation module"
      },
      "policy": {
        "type": "object",
        "properties": {
          "parentID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the parent policy. Searchable as Numeric."
          },
          "name": {
            "type": "string",
            "description": "Name of the policy. Searchable as String."
          },
          "description": {
            "type": "string",
            "description": "Description of the policy. Searchable as String."
          },
          "policySettings": {
            "$ref": "#/components/schemas/PolicySettings"
          },
          "recommendationScanMode": {
            "type": "string",
            "description": "Enable or disable ongoing recommendation scans for computers assigned this policy. Searchable as Choice.",
            "enum": [
              "off",
              "ongoing"
            ]
          },
          "autoRequiresUpdate": {
            "type": "string",
            "description": "Automatically update computers assigned this policy when the configuration changes. Searchable as Choice.",
            "enum": [
              "off",
              "on"
            ]
          },
          "interfaceTypes": {
            "$ref": "#/components/schemas/InterfaceTypes"
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the policy. Searchable as ID.",
            "readOnly": true
          },
          "antiMalware": {
            "$ref": "#/components/schemas/AntiMalwarePolicyExtension"
          },
          "webReputation": {
            "$ref": "#/components/schemas/WebReputationPolicyExtension"
          },
          "deviceControl": {
            "$ref": "#/components/schemas/DeviceControlPolicyExtension"
          },
          "activityMonitoring": {
            "$ref": "#/components/schemas/ActivityMonitoringPolicyExtension"
          },
          "firewall": {
            "$ref": "#/components/schemas/FirewallPolicyExtension"
          },
          "intrusionPrevention": {
            "$ref": "#/components/schemas/IntrusionPreventionPolicyExtension"
          },
          "integrityMonitoring": {
            "$ref": "#/components/schemas/IntegrityMonitoringPolicyExtension"
          },
          "logInspection": {
            "$ref": "#/components/schemas/LogInspectionPolicyExtension"
          },
          "applicationControl": {
            "$ref": "#/components/schemas/ApplicationControlPolicyExtension"
          },
          "SAP": {
            "$ref": "#/components/schemas/SAPPolicyExtension"
          }
        },
        "description": "Policy details"
      },
      "policyModuleStatus": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status.",
            "readOnly": true,
            "enum": [
              "inactive",
              "active",
              "warning",
              "error",
              "not-supported"
            ]
          },
          "statusMessage": {
            "type": "string",
            "description": "Status message.",
            "readOnly": true
          }
        },
        "description": "Policy Module status details."
      },
      "policies": {
        "type": "object",
        "properties": {
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/policy"
            }
          }
        },
        "description": "List of policies"
      },
      "DefaultPolicySettings": {
        "type": "object",
        "properties": {
          "logInspectionSettingSeverityClippingAgentEventSendSyslogLevelMin": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionConnectionsCleanupMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionVerifyTcpChecksumEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingScanCacheOnDemandConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "applicationControlSettingSharedRulesetId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "applicationControlSettingState": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingSmartProtectionServerConnectionLostWarningEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "applicationControlSettingExecutionEnforcementLevel": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingBlockedUrlDomains": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionSynSentTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAgentSelfProtectionPassword": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceBlockTcpXmasAttackDuration": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingVirtualAndContainerNetworkScanEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "logInspectionSettingSyslogConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDebugModeEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingVirtualAndContainerNetworkScanEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingFileHashSha256Enabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceNotifyFingerprintProbeEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEventLogFileRetainNum": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckTcpPawsZero": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingConnectedThreatDefenseUseControlManagerSuspiciousObjectListEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingEngineOptionFragmentedIpKeepMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDrop6To4BogonsAddressesEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "logInspectionSettingSeverityClippingAgentEventStoreLevelMin": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingScanCacheConcurrencyMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingSyslogConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionTcpPawsWindowPolicy": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceDetectTcpXmasAttackEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "applicationControlSettingRulesetMode": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingSmartProtectionGlobalServerUseProxyEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingSmartProtectionLocalServerAllowOffDomainGlobal": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "integrityMonitoringSettingCombinedModeProtectionSource": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionCloseWaitTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingScanOpenPortListId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAgentSelfProtectionPasswordEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionAckTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEventLogFileCachedEntriesStaleTime": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingCombinedModeProtectionSource": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAgentEventsSendInterval": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingInactiveAgentCleanupOverrideEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingFailureResponseEngineSystem": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingRelayState": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDropEvasiveRetransmitEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingState": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "activityMonitoringSettingIndicatorEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingEngineOptionFragmentedIpTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckTcpZeroFlags": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingSmartProtectionGlobalServerUseProxyEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingNsxSecurityTaggingPreventModeLevel": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceNotifyTcpXmasAttackEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionUdpTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingSmartProtectionLocalServerEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionTcpMssLimit": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionColdStartTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionEstablishedTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingIdentifiedFilesSpaceMaxMbytes": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingState": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionAllowNullIpEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingNotificationsSuppressPopupsEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckTcpRstFinFlags": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDisconnectTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionCloseTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionTunnelDepthMaxExceededAction": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceDetectTcpNullScanEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingSmartProtectionAntiMalwareGlobalServerProxyId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionFilterIpv4Tunnels": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingSmartProtectionLocalServerUrls": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionLogOnePacketPeriod": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "deviceControlSettingSyslogConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionFilterIpv6Tunnels": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckTcpCongestionFlags": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingHeartbeatMissedAlertThreshold": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingEngineOptionsEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionConnectionsNumUdpMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "integrityMonitoringSettingAutoApplyRecommendationsEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionTunnelDepthMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDropUnknownSslProtocolEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingNsxSecurityTaggingValue": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingLogDataRuleFirstMatchEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionLoggingPolicy": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingTroubleshootingLoggingLevel": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingVirtualApplianceOnDemandScanCacheEntriesMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingCombinedModeProtectionSource": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionClosingTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingState": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckPaws": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingAutoApplyRecommendationsEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceDetectFingerprintProbeEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingNsxSecurityTaggingRemoveOnCleanScanEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionLogPacketLengthMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDropTeredoAnomaliesEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingSecurityLevel": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDropIpv6SiteLocalAddressesEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "logInspectionSettingState": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "activityMonitoringSettingActivityEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionStrictTerodoPortCheckEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAutoUpdateTlsInspectionSupportEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingBlockedUrlKeywords": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingSyslogConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingFailureResponsePacketSanityCheck": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingNetworkEngineMode": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEventLogFileSizeMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingMalwareScanMultithreadedProcessingEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceDetectTcpSynFinScanEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAutoUpdateKernelPackageEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDropIpZeroPayloadEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionBlockIpv6Agent8AndEarlierEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingEngineOptionFragmentedIpPacketSendIcmpEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingPredictiveMachineLearningExceptions": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionLogEventsPerSecondMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionSslSessionTime": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "deviceControlSettingState": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingBehaviorMonitoringScanExclusionList": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingSmartProtectionGlobalServerEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionLogOnePacketWithinPeriodEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionGenerateConnectionEventsIcmpEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingHeartbeatInactiveVmOfflineAlertEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingSmartProtectionWebReputationGlobalServerProxyId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingNsxSecurityTaggingEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckFragmentedPackets": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionConnectionsNumIcmpMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckTcpSplitHandshake": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingCombinedModeProtectionSource": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionEventNodesMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingMonitorPortListId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "sapSettingState": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "applicationControlSettingSyslogConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckOutNoConnection": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionBlockIpv6Agent9AndLaterEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "integrityMonitoringSettingVirtualApplianceOptimizationScanCacheEntriesMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceNotifyTcpNullScanEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionIgnoreStatusCode1": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionIgnoreStatusCode0": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionIgnoreStatusCode2": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionSslSessionSize": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingScanCacheRealTimeConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingRecommendationOngoingScansInterval": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingSmartProtectionGlobalServerUseProxyEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingInterfaceLimitOneActiveEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckTcpChecksum": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDropIpv6ExtType0Enabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingScanFileSizeMaxMbytes": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionGenerateConnectionEventsTcpEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingFileHashSizeMaxMbytes": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEventLogFileCachedEntriesLifeTime": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingSmartProtectionGlobalServerProxyId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "logInspectionSettingAutoApplyRecommendationsEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingConnectedThreatDefenseSuspiciousFileDdanSubmissionEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "deviceControlSettingDeviceControlUsbStorageDeviceAction": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingBlockingPageLink": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingSyslogConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAgentCommunicationsDirection": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "integrityMonitoringSettingScanCacheConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingDocumentExploitProtectionRuleExceptions": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckTcpSynWithData": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingFileHashEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceBlockFingerprintProbeDuration": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDropIpv6BogonsAddressesEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionBootStartTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionConnectionsNumTcpMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionSecurityPosture": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingInterfacePatterns": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingInterfaceIsolationEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingVirtualApplianceRealTimeScanCacheEntriesMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEventsOutOfAllowedPolicyEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckEvasiveRetransmit": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionIcmpTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "integrityMonitoringSettingSyslogConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionConnectionCleanupTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingSmartProtectionLocalServerAllowOffDomainGlobal": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceNotifyTcpSynFinScanEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionErrorTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "integrityMonitoringSettingState": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingOfflineScheduledScanEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingAllowedUrls": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceNotifyNetworkOrPortScanEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionFinWait1Timeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionGenerateConnectionEventsUdpEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "activityMonitoringSettingSyslogConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckTcpSynRstFlags": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingSpywareApprovedList": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "activityMonitoringSettingState": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckTcpUrgentFlags": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingNsxSecurityTaggingDetectModeLevel": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingEngineOptionFragmentedIpUnconcernedMacAddressBypassEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionLogAllPacketDataEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckTcpSynFinFlags": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingHeartbeatInterval": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionFragmentSizeMin": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingSmartProtectionServerConnectionLostWarningEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceBlockNetworkOrPortScanDuration": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "integrityMonitoringSettingContentHashAlgorithm": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingSmartScanState": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingConfigPackageExceedsAlertMaxEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingEnvironmentVariableOverrides": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionFragmentOffsetMin": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingSmartProtectionLocalServerUrls": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionSynRcvdTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEventLogFileCachedEntriesNum": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionForceAllowIcmpType3Code4": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceBlockTcpNullScanDuration": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingSmartProtectionGlobalServerEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "integrityMonitoringSettingRealtimeEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionLastAckTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "deviceControlSettingDeviceControlAutoRunUsbAction": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceExcludeIpListId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "deviceControlSettingDeviceControlEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAgentSelfProtectionEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDropIpv6ReservedAddressesEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckFinNoConnection": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDebugPacketNumMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingState": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionBypassCiscoWaasConnectionsEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingHeartbeatLocalTimeShiftAlertThreshold": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingFileHashMd5Enabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceDetectNetworkOrPortScanEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionSilentTcpConnectionDropEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionBlockSameSrcDstIpEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionForceAllowDhcpDns": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceIncludeIpListId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionsEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingReconnaissanceBlockTcpSynFinScanDuration": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingSecurityBlockUntestedPagesEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingAllowedUrlDomains": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingEnableContainerFileOnAccessScan": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingTrustedCertificateExceptionEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEventLogFileIgnoreSourceIpListId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEngineOptionDropIpv6FragmentsLowerThanMinMtuEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAutoAssignNewIntrusionPreventionRulesEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingAntiEvasionCheckRstNoConnection": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingBlockedUrls": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingCombinedModeNetworkGroupProtectionSource": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingAlertingEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingNsxSecurityTaggingOnRemediationFailureEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "integrityMonitoringSettingCpuUsageLevel": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAutoUpdateAntiMalwareEngineEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "deviceControlSettingDeviceControlMobileDeviceAction": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingInspectTlsTrafficEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingCombinedModeProtectionSource": {
            "$ref": "#/components/schemas/SettingValue"
          }
        }
      },
      "PolicyInfo": {
        "type": "object",
        "properties": {
          "policyID": {
            "type": "integer",
            "format": "int32",
            "description": "Policy id",
            "readOnly": true
          },
          "policyName": {
            "type": "string",
            "description": "Policy name",
            "readOnly": true
          }
        }
      },
      "policyImportTask": {
        "type": "object",
        "properties": {
          "policyContent": {
            "type": "string",
            "description": "Policy content zip and encoded by base64, write only."
          },
          "status": {
            "type": "string",
            "description": "status",
            "readOnly": true,
            "enum": [
              "requested",
              "in-progress",
              "complete",
              "failed"
            ]
          },
          "created": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the created time, in milliseconds since epoch. Searchable as Date.",
            "readOnly": true
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the last updated time, in milliseconds since epoch. Searchable as Date.",
            "readOnly": true
          },
          "policyMappings": {
            "type": "array",
            "description": "Policy mappings on Workload Security",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/policyMapping"
            }
          },
          "errorCode": {
            "type": "integer",
            "format": "int32",
            "description": "Type of import failed",
            "readOnly": true
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the PolicyImportTask.",
            "readOnly": true
          },
          "taskGUID": {
            "type": "string",
            "description": "GUID of the task. Searchable as String.",
            "readOnly": true
          },
          "sourceHostName": {
            "type": "string",
            "description": "(Optional) Source Deep Security Manager hostname. Searchable as String."
          }
        },
        "description": "Describes the task of policy import."
      },
      "policyMapping": {
        "type": "object",
        "properties": {
          "importTo": {
            "$ref": "#/components/schemas/PolicyInfo"
          },
          "importFrom": {
            "$ref": "#/components/schemas/PolicyInfo"
          }
        },
        "description": "Policy mapping on Deep Security Manager to Workload Security."
      },
      "PolicyImportTasks": {
        "type": "object",
        "properties": {
          "policyImportTask": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/policyImportTask"
            }
          }
        }
      },
      "portList": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the port list. Searchable as String."
          },
          "description": {
            "type": "string",
            "description": "Description of the port list. Searchable as String."
          },
          "items": {
            "type": "array",
            "description": "List of comma-delimited port numbers. Can contain single ports or port ranges (for example: \"20-21\").",
            "items": {
              "type": "string"
            }
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the port list. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "Port list details."
      },
      "PortLists": {
        "type": "object",
        "properties": {
          "portLists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/portList"
            }
          }
        }
      },
      "proxy": {
        "type": "object",
        "required": [
          "hostName",
          "name",
          "port"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the proxy. The maximum length is 254 characters. Searchable as String."
          },
          "description": {
            "type": "string",
            "description": "Description of the proxy. The maximum length is 2000 characters. Searchable as String."
          },
          "hostName": {
            "type": "string",
            "description": "Host name of the proxy. The maximum length is 254 characters. Searchable as String."
          },
          "port": {
            "type": "integer",
            "format": "int32",
            "description": "Port of the proxy."
          },
          "protocol": {
            "type": "string",
            "description": "Protocol of the proxy. Default is \"http\".",
            "enum": [
              "http",
              "socks4",
              "socks5"
            ]
          },
          "authenticated": {
            "type": "boolean",
            "description": "Flag indicating whether access to the proxy is authenticated. Default is \"false\"."
          },
          "username": {
            "type": "string",
            "description": "Username of the proxy. The maximum length is 254 characters."
          },
          "password": {
            "type": "string",
            "description": "Password of the proxy, write only. The maximum length is 254 characters."
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the proxy. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "Details of a proxy."
      },
      "Proxies": {
        "type": "object",
        "properties": {
          "proxies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/proxy"
            }
          }
        }
      },
      "ReportTemplate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the report template.",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "Description of the report template.",
            "readOnly": true
          },
          "timeFilterSupported": {
            "type": "boolean",
            "description": "Flag indicating whether or not the report template supports a time filter. Searchable as Boolean.",
            "readOnly": true
          },
          "computerFilterSupported": {
            "type": "boolean",
            "description": "Flag indicating whether or not the report template supports a computer filter. Searchable as Boolean.",
            "readOnly": true
          },
          "tagFilterSupported": {
            "type": "boolean",
            "description": "Flag indicating whether or not the report template supports a tag filter. Searchable as Boolean.",
            "readOnly": true
          },
          "supportedFormats": {
            "type": "array",
            "description": "List of supported report formats.",
            "readOnly": true,
            "items": {
              "type": "string",
              "enum": [
                "pdf",
                "csv",
                "html",
                "plaintext",
                "rtf",
                "xls",
                "xml"
              ]
            }
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the report template. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "Details of a report template."
      },
      "ReportTemplates": {
        "type": "object",
        "properties": {
          "reportTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportTemplate"
            }
          }
        }
      },
      "context": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the context. Searchable as String."
          },
          "description": {
            "type": "string",
            "description": "Description of the context. Searchable as String."
          },
          "minimumAgentVersion": {
            "type": "string",
            "description": "Minimum supported agent version."
          },
          "localConnectionsEnabled": {
            "type": "boolean",
            "description": "Specifies whether the context applies to connections that are locally conntected to a domain. Set to true to apply to locally connected."
          },
          "remoteConnectionsEnabled": {
            "type": "boolean",
            "description": "Specifies whether the context applies to connections that are remotely conntected to a domain. Set to true to apply to remotely connected."
          },
          "noConnectionEnabled": {
            "type": "boolean",
            "description": "Specifies whether the context applies to connections that are no connection enabled. Set to true to apply to no connection enabled."
          },
          "noInternetEnabled": {
            "type": "boolean",
            "description": "Specifies whether the context applies to connections that are neither connection nor Internet enabled. Set to true to apply."
          },
          "restrictedInterfacesEnabled": {
            "type": "boolean",
            "description": "Controls if the firewall contents are restricted from view and duplication. Set to true if it's restricted. Searchable as Boolean."
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the context. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "Firewall context information."
      },
      "contexts": {
        "type": "object",
        "properties": {
          "contexts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/context"
            }
          }
        }
      },
      "Ruleset": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the ruleset. Searchable as String."
          },
          "description": {
            "type": "string",
            "description": "Description of the ruleset. Searchable as String."
          },
          "version": {
            "type": "integer",
            "format": "int32",
            "description": "Version number of the ruleset. Incremented by one whenever the ruleset rules are modified. Searchable as Numeric.",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "Type of the ruleset. Searchable as Choice.",
            "readOnly": true,
            "enum": [
              "local-file",
              "local-hash",
              "shared-file",
              "shared-hash"
            ]
          },
          "created": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the ruleset's creation, in milliseconds since epoch. Searchable as Date.",
            "readOnly": true
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of when the ruleset was last updated, in milliseconds since epoch. Searchable as Date.",
            "readOnly": true
          },
          "ID": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the ruleset. Searchable as ID.",
            "readOnly": true
          }
        }
      },
      "Rulesets": {
        "type": "object",
        "properties": {
          "rulesets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ruleset"
            }
          }
        }
      },
      "ApplicationControlRules": {
        "type": "object",
        "properties": {
          "applicationControlRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/applicationControlRule"
            }
          }
        }
      },
      "applicationControlRule": {
        "type": "object",
        "properties": {
          "sha256": {
            "type": "string",
            "description": "SHA-256 hash of the executable. Searchable as String.",
            "readOnly": true
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "Size of the executable in bytes. Searchable as Numeric.",
            "readOnly": true
          },
          "action": {
            "type": "string",
            "description": "Action to take when a user launches the executable. Searchable as Choice.",
            "enum": [
              "allow",
              "block"
            ]
          },
          "path": {
            "type": "string",
            "description": "Full path of the executable. Searchable as String.",
            "readOnly": true
          },
          "fileName": {
            "type": "string",
            "description": "File name of the executable.",
            "readOnly": true
          },
          "lastUpdatedAdministrator": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the last administrator to update the rule. Searchable as Numeric.",
            "readOnly": true
          },
          "lastUpdated": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the last rule modification, in milliseconds since epoch. Searchable as Date.",
            "readOnly": true
          },
          "ID": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the rule. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "Ruleset rule details."
      },
      "SAP": {
        "type": "object",
        "properties": {
          "entitlementState": {
            "type": "boolean",
            "description": "Entitlement state."
          },
          "licenseState": {
            "type": "string",
            "description": "SAP license state. Valid values are 'licensed' and 'trial'"
          },
          "expires": {
            "type": "string",
            "format": "date-time",
            "description": "The entitlement expiration date."
          },
          "customerAccountID": {
            "type": "string",
            "description": "customer Account ID of the tenant."
          }
        },
        "description": "SAP entitlement information"
      },
      "schedule": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Display name of the Schedule. Searchable as String."
          },
          "description": {
            "type": "string",
            "description": "Description of the Schedule. Searchable as String."
          },
          "hoursOfWeek": {
            "type": "array",
            "description": "An array of 168 boolean values representing each hour in the week starting Sunday at 0:00. A value of 'true' marks the given hour as 'on'.",
            "items": {
              "type": "boolean"
            }
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the Schedule. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "Schedules are reusable timetables that you can assign to rules, agent upgrades, and more."
      },
      "Schedules": {
        "type": "object",
        "properties": {
          "schedules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schedule"
            }
          }
        }
      },
      "CheckForSecurityUpdatesTaskParameters": {
        "type": "object",
        "properties": {
          "computerFilter": {
            "$ref": "#/components/schemas/ComputerFilter"
          },
          "timeout": {
            "type": "string",
            "description": "Time after the scheduled start time that security updates will not be started.",
            "enum": [
              "never",
              "one-hour",
              "two-hours",
              "four-hours",
              "eight-hours"
            ]
          }
        },
        "description": "Controls the behavior of a scheduled task of type check-for-security-updates."
      },
      "ComputerFilter": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of computer filter.",
            "enum": [
              "computer",
              "all-computers",
              "computers-in-group",
              "computers-in-group-or-subgroup",
              "computers-using-policy",
              "computers-using-policy-or-subpolicy",
              "computers-in-smart-folder"
            ]
          },
          "computerID": {
            "type": "integer",
            "format": "int32",
            "description": "Computer ID for filter type: computer."
          },
          "computerGroupID": {
            "type": "integer",
            "format": "int32",
            "description": "Computer Group ID for filter type: computers-in-group or computers-in-group-or-subgroup."
          },
          "policyID": {
            "type": "integer",
            "format": "int32",
            "description": "Policy ID for filter type: computers-using-policy or computers-using-policy-or-subpolicy."
          },
          "smartFolderID": {
            "type": "integer",
            "format": "int64",
            "description": "Smart Folder ID for filter type: computers-in-smart-folder."
          }
        },
        "description": "Details of a computer filter. A computer filter identifies the computers that certain types of scheduled tasks act on."
      },
      "DailyScheduleParameters": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "integer",
            "format": "int64",
            "description": "Date/Time when the task should run."
          },
          "frequencyType": {
            "type": "string",
            "description": "Frequency type.",
            "enum": [
              "everyday",
              "weekdays",
              "custom"
            ]
          },
          "customInterval": {
            "type": "integer",
            "format": "int32",
            "description": "Custom interval."
          }
        },
        "description": "Details for the daily schedule of a scheduled task."
      },
      "GenerateReportTaskParameters": {
        "type": "object",
        "properties": {
          "reportTemplateID": {
            "type": "integer",
            "format": "int32",
            "description": "Report template identifier."
          },
          "format": {
            "type": "string",
            "description": "Report format.",
            "enum": [
              "pdf",
              "csv",
              "html",
              "plaintext",
              "rtf",
              "xls",
              "xml"
            ]
          },
          "classification": {
            "type": "string",
            "description": "Report classification.",
            "enum": [
              "blank",
              "topsecret",
              "secret",
              "confidential",
              "official",
              "les",
              "limited",
              "unclassified",
              "internal"
            ]
          },
          "recipients": {
            "$ref": "#/components/schemas/Recipients"
          },
          "timeRange": {
            "$ref": "#/components/schemas/TimeRange"
          },
          "tagFilter": {
            "$ref": "#/components/schemas/TagFilter"
          },
          "computerFilter": {
            "$ref": "#/components/schemas/ComputerFilter"
          }
        },
        "description": "Controls the behavior of a scheduled task of type generate-report."
      },
      "HourlyScheduleParameters": {
        "type": "object",
        "properties": {
          "minutesPastTheHour": {
            "type": "string",
            "description": "Minutes past the hour when the task should run.",
            "enum": [
              "0",
              "5",
              "10",
              "15",
              "20",
              "25",
              "30",
              "35",
              "40",
              "45",
              "50",
              "55"
            ]
          }
        },
        "description": "Details for an hourly schedule for a scheduled task."
      },
      "MonthlyScheduleParameters": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "integer",
            "format": "int64",
            "description": "Date/Time when the task should run."
          },
          "frequencyType": {
            "type": "string",
            "description": "Frequency type.",
            "enum": [
              "day-of-month",
              "last-day-of-month",
              "custom"
            ]
          },
          "dayOfMonth": {
            "type": "integer",
            "format": "int32",
            "description": "Specific day of month for frequency type: day-of-month."
          },
          "weekOfMonth": {
            "type": "string",
            "description": "Specific week of month for frequency type: custom.",
            "enum": [
              "first",
              "second",
              "third",
              "fourth",
              "last"
            ]
          },
          "dayOfWeek": {
            "type": "string",
            "description": "Specific day of week for frequency type: custom.",
            "enum": [
              "sunday",
              "monday",
              "tuesday",
              "wednesday",
              "thursday",
              "friday",
              "saturday"
            ]
          },
          "months": {
            "type": "array",
            "description": "Months of the year when the scheduled task will run.",
            "items": {
              "type": "string",
              "enum": [
                "january",
                "feburary",
                "march",
                "april",
                "may",
                "june",
                "july",
                "august",
                "september",
                "october",
                "november",
                "december"
              ]
            }
          }
        },
        "description": "Details for a monthly schedule for a scheduled task."
      },
      "OnceOnlyScheduleParameters": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "integer",
            "format": "int64",
            "description": "Date/Time when the task should run."
          }
        },
        "description": "Details for a once-only schedule for a scheduled task."
      },
      "Recipients": {
        "type": "object",
        "properties": {
          "allAdministratorsAndContacts": {
            "type": "boolean",
            "description": "Send to all administrators and contacts with a valid email address."
          },
          "administratorIDs": {
            "type": "array",
            "description": "List of recipient administrators IDs.",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "contactIDs": {
            "type": "array",
            "description": "List of recipient contact IDs.",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "description": "Details of the recipients for a scheduled task. A recipiant is an administrator or contact who recieves reports or event summaries via scheduled tasks."
      },
      "RunScriptTaskParameters": {
        "type": "object",
        "properties": {
          "filename": {
            "type": "string",
            "description": "Name of the script."
          }
        },
        "description": "Controls the behavior of a scheduled task of type run-script."
      },
      "ScanForIntegrityChangesTaskParameters": {
        "type": "object",
        "properties": {
          "computerFilter": {
            "$ref": "#/components/schemas/ComputerFilter"
          },
          "trustedComputers": {
            "type": "string",
            "description": "Include or exclude trusted computers during scan.",
            "enum": [
              "all-computers",
              "trusted-computers-only",
              "exclude-trusted-computers"
            ]
          }
        },
        "description": "Controls the behavior of a scheduled task of type scan-for-integrity-changes."
      },
      "ScanForMalwareTaskParameters": {
        "type": "object",
        "properties": {
          "computerFilter": {
            "$ref": "#/components/schemas/ComputerFilter"
          },
          "timeout": {
            "type": "string",
            "description": "Maximum time after the scheduled start time that anti-malware scans will run.",
            "enum": [
              "never",
              "one-hour",
              "two-hours",
              "four-hours",
              "eight-hours",
              "twelve-hours",
              "one-day",
              "one-and-a-half-days",
              "two-days"
            ]
          }
        },
        "description": "Controls the behavior of a scheduled task of type: scan-for-malware."
      },
      "ScanForOpenPortsTaskParameters": {
        "type": "object",
        "properties": {
          "computerFilter": {
            "$ref": "#/components/schemas/ComputerFilter"
          }
        },
        "description": "Controls the behavior of a scheduled task of type scan-for-open-ports."
      },
      "ScanForRecommendationsTaskParameters": {
        "type": "object",
        "properties": {
          "computerFilter": {
            "$ref": "#/components/schemas/ComputerFilter"
          }
        },
        "description": "Controls the behavior of a scheduled task of type scan-for-recommendations."
      },
      "ScheduleDetails": {
        "type": "object",
        "properties": {
          "timeZone": {
            "type": "string",
            "description": "The timezone used to interpret the scheduled task schedule."
          },
          "recurrenceType": {
            "type": "string",
            "description": "Recurrence type.",
            "enum": [
              "none",
              "hourly",
              "daily",
              "weekly",
              "monthly"
            ]
          },
          "recurrenceCount": {
            "type": "integer",
            "format": "int32",
            "description": "Number of times the task should execute."
          },
          "hourlyScheduleParameters": {
            "$ref": "#/components/schemas/HourlyScheduleParameters"
          },
          "dailyScheduleParameters": {
            "$ref": "#/components/schemas/DailyScheduleParameters"
          },
          "weeklyScheduleParameters": {
            "$ref": "#/components/schemas/WeeklyScheduleParameters"
          },
          "monthlyScheduleParameters": {
            "$ref": "#/components/schemas/MonthlyScheduleParameters"
          },
          "onceOnlyScheduleParameters": {
            "$ref": "#/components/schemas/OnceOnlyScheduleParameters"
          }
        },
        "description": "Controls when a scheduled task runs."
      },
      "ScheduledAgentUpgradeTaskParameters": {
        "type": "object",
        "properties": {
          "computerFilter": {
            "$ref": "#/components/schemas/ComputerFilter"
          },
          "targetAgentVersion": {
            "type": "string",
            "description": "Controls which agent version to install."
          }
        },
        "description": "Controls the behavior of a scheduled task of type agent upgrade."
      },
      "ScheduledTask": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of scheduled task. Searchable as String."
          },
          "type": {
            "type": "string",
            "description": "Type of scheduled task. Searchable as Choice.",
            "enum": [
              "scan-for-open-ports",
              "send-alert-summary",
              "run-script",
              "send-policy",
              "generate-report",
              "synchronize-directory",
              "synchronize-users",
              "scan-for-recommendations",
              "synchronize-vcenter",
              "scan-for-integrity-changes",
              "scan-for-malware",
              "check-for-security-updates",
              "scheduled-agent-upgrade",
              "synchronize-cloud-account",
              "check-for-software-updates",
              "update-suspicious-objects-list"
            ]
          },
          "scheduleDetails": {
            "$ref": "#/components/schemas/ScheduleDetails"
          },
          "enabled": {
            "type": "boolean",
            "description": "Indicates whether or not the scheduled task is enabled. Searchable as Boolean."
          },
          "lastRunTime": {
            "type": "integer",
            "format": "int64",
            "description": "The last time this scheduled task was run, or null if never run. Searchable as Date."
          },
          "nextRunTime": {
            "type": "integer",
            "format": "int64",
            "description": "The next time this scheduled task is scheduled to run, or null if it not scheduled to run in the future. Searchable as Date."
          },
          "runNow": {
            "type": "boolean",
            "description": "Indicates that the scheduled task should execute immediately."
          },
          "scanForOpenPortsTaskParameters": {
            "$ref": "#/components/schemas/ScanForOpenPortsTaskParameters"
          },
          "sendAlertSummaryTaskParameters": {
            "$ref": "#/components/schemas/SendAlertSummaryTaskParameters"
          },
          "runScriptTaskParameters": {
            "$ref": "#/components/schemas/RunScriptTaskParameters"
          },
          "sendPolicyTaskParameters": {
            "$ref": "#/components/schemas/SendPolicyTaskParameters"
          },
          "generateReportTaskParameters": {
            "$ref": "#/components/schemas/GenerateReportTaskParameters"
          },
          "synchronizeDirectoryTaskParameters": {
            "$ref": "#/components/schemas/SynchronizeDirectoryTaskParameters"
          },
          "scanForRecommendationsTaskParameters": {
            "$ref": "#/components/schemas/ScanForRecommendationsTaskParameters"
          },
          "synchronizeVCenterTaskParameters": {
            "$ref": "#/components/schemas/SynchronizeVCenterTaskParameters"
          },
          "scanForIntegrityChangesTaskParameters": {
            "$ref": "#/components/schemas/ScanForIntegrityChangesTaskParameters"
          },
          "scanForMalwareTaskParameters": {
            "$ref": "#/components/schemas/ScanForMalwareTaskParameters"
          },
          "checkForSecurityUpdatesTaskParameters": {
            "$ref": "#/components/schemas/CheckForSecurityUpdatesTaskParameters"
          },
          "synchronizeCloudAccountTaskParameters": {
            "$ref": "#/components/schemas/SynchronizeCloudAccountTaskParameters"
          },
          "updateSuspiciousObjectsListTaskParameters": {
            "$ref": "#/components/schemas/UpdateSuspiciousObjectsListTaskParameters"
          },
          "scheduledAgentUpgradeTaskParameters": {
            "$ref": "#/components/schemas/ScheduledAgentUpgradeTaskParameters"
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "Scheduled task identifier. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "Defines a scheduled task. Scheduled tasks automatically perform specific Deep Security Manager tasks on a schedule."
      },
      "SendAlertSummaryTaskParameters": {
        "type": "object",
        "properties": {
          "recipients": {
            "$ref": "#/components/schemas/Recipients"
          }
        },
        "description": "Controls the behavior of a scheduled task of type send-alert-summary."
      },
      "SendPolicyTaskParameters": {
        "type": "object",
        "properties": {
          "computerFilter": {
            "$ref": "#/components/schemas/ComputerFilter"
          }
        },
        "description": "Controls the behavior of a scheduled task of type send-policy."
      },
      "SynchronizeCloudAccountTaskParameters": {
        "type": "object",
        "properties": {
          "computerGroupID": {
            "type": "integer",
            "format": "int32",
            "description": "Identifies the top-level computer group for the cloud."
          }
        },
        "description": "Controls the behavior of a scheduled task of type synchronize-cloud-account."
      },
      "SynchronizeDirectoryTaskParameters": {
        "type": "object",
        "properties": {
          "computerGroupID": {
            "type": "integer",
            "format": "int32",
            "description": "Identifies the top-level computer group for the directory."
          }
        },
        "description": "Controls the behavior of a scheduled task of type synchronize-cloud-account."
      },
      "SynchronizeVCenterTaskParameters": {
        "type": "object",
        "properties": {
          "computerGroupID": {
            "type": "integer",
            "format": "int32",
            "description": "Identifies the top-level computer group for the vCenter."
          }
        },
        "description": "Controls the behavior of a scheduled task of type synchronize-vcenter."
      },
      "TagFilter": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of tag filter.",
            "enum": [
              "all",
              "untagged",
              "specific-tags"
            ]
          },
          "tags": {
            "type": "array",
            "description": "Tags to be used when type is: specific-tags",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Details for a tag filter. For reports that contain event data, identifies the tags of the events to include in the report."
      },
      "TimeRange": {
        "type": "object",
        "properties": {
          "units": {
            "type": "string",
            "description": "Units for the time range",
            "enum": [
              "hour",
              "day",
              "week",
              "month"
            ]
          },
          "value": {
            "type": "integer",
            "format": "int32",
            "description": "Value of the time range. With the units, defines the report's time range as the length of time previous to the current time."
          }
        },
        "description": "Details for a time range. A time range identifies the period of time for which a report is generated via a scheduled task."
      },
      "UpdateSuspiciousObjectsListTaskParameters": {
        "type": "object",
        "properties": {
          "computerFilter": {
            "$ref": "#/components/schemas/ComputerFilter"
          }
        },
        "description": "Controls the behavior of a scheduled task of type update-suspicious-objects-list."
      },
      "WeeklyScheduleParameters": {
        "type": "object",
        "properties": {
          "startTime": {
            "type": "integer",
            "format": "int64",
            "description": "Date/Time when the task should run."
          },
          "interval": {
            "type": "integer",
            "format": "int32",
            "description": "Number of weeks between recurrences."
          },
          "days": {
            "type": "array",
            "description": "Days of the week when the scheduled task will run.",
            "items": {
              "type": "string",
              "enum": [
                "sunday",
                "monday",
                "tuesday",
                "wednesday",
                "thursday",
                "friday",
                "saturday"
              ]
            }
          }
        },
        "description": "Details for the weekly schedule of a scheduled task."
      },
      "ScheduledTasks": {
        "type": "object",
        "properties": {
          "scheduledTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduledTask"
            }
          }
        }
      },
      "SystemSettings": {
        "type": "object",
        "properties": {
          "platformSettingSamlIdentityProviderCertificateExpiryWarningDays": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingUpdateAgentSecurityOnMissingDeepSecurityManagerEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingDdanManualSourceServerUrl": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingSmartProtectionFeedbackThreatDetectionsThreshold": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingEventRankSeverityFilterMedium": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingIntranetConnectivityTestExpectedContentRegex": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingEventForwardingSnsEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingTenantAutoRevokeImpersonationByPrimaryTenantTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingEventRankRiskBlockedByAdministratorRank": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingEventEmailRecipients": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingIntranetConnectivityTestUrl": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingTenantUseDefaultRelayGroupFromPrimaryTenantEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingExportedDiagnosticPackageLocale": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingEventRankSeverityFilterCritical": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingTrendMicroXdrCommonLogReceiverUrl": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingManagedDetectResponseCompanyGuid": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAlertDefaultEmailAddress": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAgentInitiatedActivationReactivateClonedEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingManagedDetectResponseServerUrl": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingSyslogConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingSmtpStartTlsEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingUserPasswordRequireLettersAndNumbersEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingManagedDetectResponseEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingUpdateRulesPolicyAutoApplyEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingUserPasswordRequireNotSameAsUsernameEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "logInspectionSettingEventRankSeverityMedium": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingRetainEventDuration": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingUpdateAgentSecurityContactPrimarySourceOnMissingRelayEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEventRankSeverityLogOnly": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "applicationControlSettingRetainEventDuration": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingWindowsUpgradeOnActivationEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingSystemEventForwardingSnmpPort": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEventRankSeverityDeny": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingEventRankSeverityFilterLow": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingManagedDetectResponseServiceToken": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingSolutionCenterActivationDiagnosticPackage": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingTrendMicroXdrApiUser": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "logInspectionSettingRetainEventDuration": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingTenantAutoRevokeImpersonationByPrimaryTenantEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingEventEmailBodyTemplate": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingRetainSecurityUpdatesMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingConnectedThreatDefenseControlManagerSourceOption": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingEventEmailEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingRecommendationOngoingScansEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingUserPasswordLengthMin": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAwsManagerIdentityUseInstanceRoleEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAlertAgentUpdatePendingThreshold": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingUserPasswordRequireSpecialCharactersEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "deviceControlSettingRetainEventDuration": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingUpdateApplianceDefaultAgentVersion": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingSystemEventForwardingSnmpEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingSmtpBounceEmailAddress": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingUpdateRelaySecuritySupportAgent9AndEarlierEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingManagedDetectResponseProxyId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingTrendMicroXdrLogServerUrl": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingInactiveAgentCleanupEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingUserSessionIdleTimeout": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "antiMalwareSettingEventEmailSubject": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingConnectedThreatDefenseControlManagerUseProxyEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAwsManagerIdentityAccessKey": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingConnectedThreatDefenseControlManagerProxyId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingTrendMicroXdrRegistrationState": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingTenantAllowImpersonationByPrimaryTenantEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingConnectedThreatDefenseControlManagerManualSourceServerUrl": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingUserPasswordRequireMixedCaseEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingTrendMicroXdrIdentityProviderApiUrl": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingSmartProtectionFeedbackForSuspiciousFileEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingSmartProtectionFeedbackIndustryType": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingRetainEventDuration": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingEnableAgentAutoDetectOsProxy": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "integrityMonitoringSettingEventRankSeverityMedium": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingVisionOneThreatIntelligenceEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingMacUpgradeOnActivationEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingUpdateRelaySecurityAllRegionsPatternsDownloadEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingDdanSubmissionEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingEventRankRiskSuspicious": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "integrityMonitoringSettingEventRankSeverityCritical": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingSmtpFromEmailAddress": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingGlobalStatefulConfigId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingEventForwardingSnsTopicArn": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingInternetConnectivityTestExpectedContentRegex": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingConnectedThreatDefenseControlManagerManualSourceApiKey": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingUpdateSecurityPrimarySourceMode": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingEventRankRiskDangerous": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingUserHideUnlicensedModulesEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingCaptureEncryptedTrafficEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingRetainSystemEventDuration": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingUserPasswordExpiry": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingSmartProtectionFeedbackEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "integrityMonitoringSettingRetainEventDuration": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "logInspectionSettingEventRankSeverityCritical": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingDdanProxyId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAgentInitiatedActivationWithinIpListId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingUpdateSecurityPrimarySourceUrl": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAgentlessVcloudProtectionEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingLinuxUpgradeOnActivationEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingTrendMicroXdrEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingActiveSessionsMaxExceededAction": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingUpdateHostnameOnIpChangeEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "logInspectionSettingEventRankSeverityHigh": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingSmtpRequiresAuthenticationEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingActiveSessionsMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAwsExternalIdRetrievalEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "logInspectionSettingEventRankSeverityLow": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingSmtpUsername": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingXdrEnrolledVia": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingEventForwardingSnsAdvancedConfigEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingInternetConnectivityTestInterval": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingWhoisUrl": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingDdanSourceOption": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingConnectedThreatDefenseControlManagerSuspiciousObjectListComparisonEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingExportedFileCharacterEncoding": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingUserSessionDurationMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingUpdateSoftwareAlternateUpdateServerUrls": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingRetainCountersDuration": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingSmartProtectionFeedbackInterval": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingSystemEventForwardingSnmpAddress": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingSmtpServerAddress": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingSmtpPassword": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingEventForwardingSnsConfigJson": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingRetainEventDuration": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingEventRankRiskUntested": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingManagedDetectResponseUseProxyEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingEventForwardingSnsSecretKey": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAwsManagerIdentitySecretKey": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "webReputationSettingEventRankRiskHighlySuspicious": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingUserPasswordExpirySendEmailEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingUserSignInAttemptsAllowedNumber": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingDdanUseProxyEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAgentInitiatedActivationEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingSmartProtectionFeedbackBandwidthMaxKbytes": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingEventRankSeverityPacketRejection": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingManagedDetectResponseUsePrimaryTenantSettingsEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingEventForwardingSnsAccessKey": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAgentInitiatedActivationSpecifyHostnameEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingConnectedThreatDefensesUsePrimaryTenantServerSettingsEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingInactiveAgentCleanupDuration": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAgentInitiatedActivationDuplicateHostnameMode": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAllowPacketDataCaptureInNetworkEvents": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAgentInitiatedActivationReactivateUnknownEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingAgentInitiatedActivationPolicyId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingTrendMicroXdrApiServerUrl": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingRetainAgentInstallersPerPlatformMax": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "applicationControlSettingServeRulesetsFromRelaysEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "integrityMonitoringSettingEventRankSeverityHigh": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingSamlRetainInactiveExternalAdministratorsDuration": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingRetainEventDuration": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "firewallSettingInternetConnectivityTestUrl": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingProxyAgentUpdateProxyId": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingDdanAutoSubmissionEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingDdanManualSourceApiKey": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingEventRankSeverityFilterError": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "intrusionPreventionSettingEventRankSeverityFilterHigh": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingTrendMicroXdrApiKey": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingCloudOneWorkloadSecurityIocEnabled": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "integrityMonitoringSettingEventRankSeverityLow": {
            "$ref": "#/components/schemas/SettingValue"
          },
          "platformSettingTrendMicroXdrCompanyId": {
            "$ref": "#/components/schemas/SettingValue"
          }
        }
      },
      "SmartFolders": {
        "type": "object",
        "properties": {
          "smartFolders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/smartFolder"
            }
          }
        }
      },
      "smartFolder": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the smart folder. The maximum length is 255 characters. Searchable as String."
          },
          "parentSmartFolderID": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the parent smart folder. Searchable as Numeric."
          },
          "type": {
            "type": "string",
            "description": "Type of the smart folder.",
            "readOnly": true,
            "enum": [
              "standard",
              "hierarchical-tag-root",
              "hierarchical-tag-child",
              "independent-child"
            ]
          },
          "ruleGroups": {
            "type": "array",
            "description": "Rule groups of the smart folder.",
            "items": {
              "$ref": "#/components/schemas/smartFolderRuleGroup"
            }
          },
          "tagFolder": {
            "$ref": "#/components/schemas/tagFolder"
          },
          "logicalOperator": {
            "type": "string",
            "description": "Comparison of the smart folder.",
            "enum": [
              "and",
              "or"
            ]
          },
          "duplicateOf": {
            "type": "integer",
            "format": "int64",
            "description": "The ID of the Smart Folder to duplicate. If this value is set, then all other parameters will be ignored."
          },
          "ID": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the smart folder. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "Details of a smart folder."
      },
      "smartFolderRule": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "The key that specifies the type of rule.",
            "enum": [
              "general-host-name",
              "general-display-name",
              "general-description",
              "general-computer-group",
              "general-os",
              "general-ip",
              "general-policy",
              "general-agent-activated",
              "general-docker-host",
              "general-crio-host",
              "general-computer-type",
              "general-last-recommendation-scan-time",
              "general-last-agent-communication",
              "general-agent-offline",
              "general-host-created-time",
              "general-host-tasks",
              "general-agent-version",
              "aws-tag",
              "aws-security-group-name",
              "aws-security-group-id",
              "aws-ami-id",
              "aws-account-id",
              "aws-account-name",
              "aws-region-id",
              "aws-region-name",
              "aws-vpc-id",
              "aws-subnet-id",
              "aws-directory-id",
              "azure-subscription-name",
              "azure-resource-group",
              "azure-location",
              "azure-tag",
              "gcp-label",
              "gcp-network-tag",
              "vcenter-name",
              "vcenter-datacenter",
              "vcenter-folder",
              "vcenter-esx-hostname",
              "vcenter-custom-attribute",
              "vcloud-name",
              "vcloud-datacenter",
              "vcloud-vapp",
              "directory-name",
              "directory-folder"
            ]
          },
          "comparisonOperator": {
            "type": "string",
            "description": "The operator of the rule.",
            "enum": [
              "equals",
              "not-equals",
              "contains",
              "does-not-contain",
              "any-value",
              "in-range",
              "not-in-range",
              "older-than",
              "more-recently-than",
              "never",
              "before",
              "after",
              "version-older-than",
              "version-older-than-or-equal-to",
              "version-newer-than",
              "version-newer-than-or-equal-to"
            ]
          },
          "value": {
            "type": "string",
            "description": "The value of the rule.<br>• The value for <code>general-agent-activated</code>/<code>general-agent-offline</code>/<code>general-crio-host</code>/<code>general-docker-host</code> would be <code>yes</code>/<code>no</code>.<br>• The value for <code>general-computer-type</code> would be <code>physical-computer</code>/<code>amazon-ec2-instance</code>/<code>aws-workspace</code>/<code>vcloud-virtual-machine</code>/<code>azure-instance</code>/<code>azure-arm-instance</code>/<code>gcp-compute-instance</code>.<br>• The value for <code>general-policy</code> would be policy ID."
          },
          "secondaryComparisonOperator": {
            "type": "string",
            "description": "The secondary operator of the rule if needed.",
            "enum": [
              "equals",
              "not-equals",
              "contains",
              "does-not-contain",
              "any-value",
              "in-range",
              "not-in-range",
              "older-than",
              "more-recently-than",
              "never",
              "before",
              "after",
              "version-older-than",
              "version-older-than-or-equal-to",
              "version-newer-than",
              "version-newer-than-or-equal-to"
            ]
          },
          "secondaryValue": {
            "type": "string",
            "description": "The secondary value of the rule if needed."
          },
          "timeUnit": {
            "type": "string",
            "description": "The time unit of the rule if the key is <code>general-last-recommendation-scan-time</code>/<code>general-last-agent-communication</code>.",
            "enum": [
              "minutes",
              "hours",
              "days",
              "weeks"
            ]
          }
        },
        "description": "Details of rule for rule group in smart folder."
      },
      "smartFolderRuleGroup": {
        "type": "object",
        "properties": {
          "rules": {
            "type": "array",
            "description": "The list of rules in the group.",
            "items": {
              "$ref": "#/components/schemas/smartFolderRule"
            }
          },
          "logicalOperator": {
            "type": "string",
            "description": "The comparator for combining the rules.",
            "enum": [
              "and",
              "or"
            ]
          }
        },
        "description": "Details of rule group in smart folder."
      },
      "tagFolder": {
        "type": "object",
        "properties": {
          "cloudPlatform": {
            "type": "string",
            "description": "The cloud platform(aws/azure/gcp) of the tag folder.",
            "enum": [
              "aws",
              "azure",
              "gcp"
            ]
          },
          "cloudTagOrLabelKey": {
            "type": "string",
            "description": "Tag folders name key of cloud platform."
          }
        },
        "description": "Details of a tag folder for AWS/GCP/Azure."
      },
      "SoftwareChanges": {
        "type": "object",
        "properties": {
          "softwareChanges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/softwareChange"
            }
          }
        }
      },
      "softwareChange": {
        "type": "object",
        "properties": {
          "computerID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the computer on which the software change was found. Searchable as Numeric.",
            "readOnly": true
          },
          "computerGroupID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the computer group where the software change was found. Searchable as Numeric.",
            "readOnly": true
          },
          "vendorName": {
            "type": "string",
            "description": "Vendor name associated with the changed software. Searchable as String.",
            "readOnly": true
          },
          "productName": {
            "type": "string",
            "description": "Product name associated with the changed software. Searchable as String.",
            "readOnly": true
          },
          "productVersion": {
            "type": "string",
            "description": "Product version associated with the changed software. Searchable as String.",
            "readOnly": true
          },
          "fileVersion": {
            "type": "string",
            "description": "File version associated with the changed software. Searchable as String.",
            "readOnly": true
          },
          "fileDescription": {
            "type": "string",
            "description": "File description associated with the changed software. Searchable as String.",
            "readOnly": true
          },
          "sha1": {
            "type": "string",
            "description": "SHA1 hash calculated from the changed software. Searchable as String.",
            "readOnly": true
          },
          "sha256": {
            "type": "string",
            "description": "SHA256 hash calculated from the changed software. Searchable as String.",
            "readOnly": true
          },
          "md5": {
            "type": "string",
            "description": "MD5 hash calculated from the changed software. Searchable as String.",
            "readOnly": true
          },
          "fileName": {
            "type": "string",
            "description": "File name of the changed software. Searchable as String.",
            "readOnly": true
          },
          "installPath": {
            "type": "string",
            "description": "Path on which the software change was found. Searchable as String.",
            "readOnly": true
          },
          "fileSize": {
            "type": "integer",
            "format": "int64",
            "description": "File size of the changed software in bytes. Searchable as Numeric.",
            "readOnly": true
          },
          "changeEventTime": {
            "type": "integer",
            "format": "int64",
            "description": "Time the software change was discovered, in milliseconds since epoch. Searchable as Date.",
            "readOnly": true
          },
          "changeByUser": {
            "type": "string",
            "description": "Username of the user that introduced the software change. Searchable as String.",
            "readOnly": true
          },
          "changeByUserID": {
            "type": "string",
            "description": "User ID of the user that introduced the software change. Searchable as String.",
            "readOnly": true
          },
          "changeByProcess": {
            "type": "string",
            "description": "Name of the process that introduced the software change. Searchable as String.",
            "readOnly": true
          },
          "changeByProcessID": {
            "type": "string",
            "description": "Process ID of the process that introduced the software change. Searchable as String.",
            "readOnly": true
          },
          "ID": {
            "type": "integer",
            "format": "int64",
            "description": "ID of software change. Searchable as Numeric.",
            "readOnly": true
          }
        },
        "description": "Software change details."
      },
      "softwareChangeReview": {
        "type": "object",
        "properties": {
          "softwareChangeIDs": {
            "type": "array",
            "description": "List of software change IDs.",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "action": {
            "type": "string",
            "description": "Action to perform on the software changes.",
            "enum": [
              "allow",
              "block"
            ]
          },
          "softwareChangeReviewResults": {
            "type": "array",
            "description": "Results of software changes.",
            "readOnly": true,
            "items": {
              "$ref": "#/components/schemas/softwareChangeReviewResult"
            }
          }
        },
        "description": "Software change review details."
      },
      "softwareChangeReviewResult": {
        "type": "object",
        "properties": {
          "ruleSetID": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the ruleset.",
            "readOnly": true
          },
          "ruleIDs": {
            "type": "array",
            "description": "List of the rule IDs for newly created rules.",
            "readOnly": true,
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "description": "Software change review result details."
      },
      "softwareInventory": {
        "type": "object",
        "properties": {
          "computerID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the computer that the inventory scan was performed on (or is being performed on). Searchable as Numeric."
          },
          "name": {
            "type": "string",
            "description": "Name of the inventory. Searchable as String."
          },
          "description": {
            "type": "string",
            "description": "Description of the inventory. Searchable as String."
          },
          "state": {
            "type": "string",
            "description": "State of the inventory scan. Searchable as Choice.",
            "readOnly": true,
            "enum": [
              "unknown",
              "building",
              "complete",
              "failed",
              "requested"
            ]
          },
          "startDate": {
            "type": "integer",
            "format": "int64",
            "description": "Time the inventory scan was started, in milliseconds since epoch. Searchable as Date.",
            "readOnly": true
          },
          "completedDate": {
            "type": "integer",
            "format": "int64",
            "description": "Time the inventory scan was completed, in milliseconds since epoch. Searchable as Date.",
            "readOnly": true
          },
          "initiatorID": {
            "type": "integer",
            "format": "int32",
            "description": "Either the ID of the administrator that initiated the inventory scan or the ID of the API key if the inventory scan was initiated using an API Key. Searchable as Numeric.",
            "readOnly": true
          },
          "ID": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the software inventory. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "Software inventory details."
      },
      "softwareInventories": {
        "type": "object",
        "properties": {
          "softwareInventories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/softwareInventory"
            }
          }
        },
        "description": "Software inventories."
      },
      "inventoryItem": {
        "type": "object",
        "properties": {
          "vendorName": {
            "type": "string",
            "description": "Vendor name of the inventory item as reported by the package management system on the computer. Searchable as String."
          },
          "productName": {
            "type": "string",
            "description": "Product name of the inventory item as reported by the package management system on the computer. Searchable as String."
          },
          "productVersion": {
            "type": "string",
            "description": "Product version of the inventory item as reported by the package management system on the computer. Searchable as String."
          },
          "fileVersion": {
            "type": "string",
            "description": "File version of the inventory item as reported by the package management system on the computer. Searchable as String."
          },
          "fileDescription": {
            "type": "string",
            "description": "File description of the inventory item as reported by the package management system on the computer. Searchable as String."
          },
          "category": {
            "type": "string",
            "description": "File category of the inventory item as reported by the package management system on the computer. Searchable as String."
          },
          "sha256": {
            "type": "string",
            "description": "SHA-256 hash of the inventory item. Searchable as String."
          },
          "sha1": {
            "type": "string",
            "description": "SHA-1 hash of the inventory item. Searchable as String."
          },
          "md5": {
            "type": "string",
            "description": "MD5 hash of the inventory item. Searchable as String."
          },
          "fileName": {
            "type": "string",
            "description": "File name of the inventory item. Searchable as String."
          },
          "path": {
            "type": "string",
            "description": "File path of the inventory item. Searchable as String."
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "description": "File size of the inventory item in bytes. Searchable as Numeric."
          },
          "ID": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the inventory item. Searchable as ID."
          }
        },
        "description": "Software inventory item details."
      },
      "inventoryItems": {
        "type": "object",
        "properties": {
          "inventoryItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inventoryItem"
            }
          }
        },
        "description": "Software inventory items."
      },
      "statefulConfiguration": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the stateful configuration. Searchable as String."
          },
          "description": {
            "type": "string",
            "description": "Description of the stateful configuration. Searchable as String."
          },
          "denyFragmentedPacketsEnabled": {
            "type": "boolean",
            "description": "Controls if fragmented packets are denied. Set to true to deny fragmented packets. Searchable as Boolean."
          },
          "denyPacketsContainingCwrOrEceEnabled": {
            "type": "boolean",
            "description": "Controls if TCP CWR, ECE flags are denied. Set to true to enable CWR or ECE flags. Searchable as Boolean."
          },
          "maxIncomingConnections": {
            "type": "integer",
            "format": "int32",
            "description": "Maximum allowed incoming connections. Searchable as Numeric."
          },
          "maxOutgoingConnections": {
            "type": "integer",
            "format": "int32",
            "description": "Maximum allowed outgoing connections. Searchable as Numeric."
          },
          "maxHalfOpenConnections": {
            "type": "integer",
            "format": "int32",
            "description": "Maximum allowed half open connections. Searchable as Numeric."
          },
          "tcpstatefulInspectionEnabled": {
            "type": "boolean"
          },
          "tcpstatefulLoggingEnabled": {
            "type": "boolean"
          },
          "udpstatefulInspectionEnabled": {
            "type": "boolean"
          },
          "udpstatefulLoggingEnabled": {
            "type": "boolean"
          },
          "icmpstatefulInspectionEnabled": {
            "type": "boolean"
          },
          "icmpstatefulLoggingEnabled": {
            "type": "boolean"
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the stateful configuration. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "Stateful configurations of the interface."
      },
      "StatefulConfigurations": {
        "type": "object",
        "properties": {
          "statefulConfigurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/statefulConfiguration"
            }
          }
        }
      },
      "SyslogConfigurations": {
        "type": "object",
        "properties": {
          "syslogConfigurations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/syslogConfiguration"
            }
          }
        }
      },
      "syslogConfiguration": {
        "type": "object",
        "required": [
          "hostName",
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the syslog configuration. The maximum length is 254 characters. Searchable as String."
          },
          "description": {
            "type": "string",
            "description": "Description of the syslog configuration. The maximum length is 2000 characters. Searchable as String."
          },
          "hostName": {
            "type": "string",
            "description": "Server name of the syslog configuration. The maximum length is 253 characters. Searchable as String."
          },
          "port": {
            "type": "integer",
            "format": "int32",
            "description": "Port of the syslog configuration. Default is \"514\"."
          },
          "agentDirectForwarding": {
            "type": "boolean",
            "description": "Flag indicating whether access to the syslog configuration is directly to the syslog server (true) or is it via the manager (false). Default is \"false\"."
          },
          "includeTimezone": {
            "type": "boolean",
            "description": "Flag indicating whether time zone is included in events. Default is \"false\"."
          },
          "privateKey": {
            "type": "string",
            "description": "Private key of the syslog configuration, write only. It's a PEM formatted string."
          },
          "certificateChain": {
            "type": "array",
            "description": "Certificate chain of the syslog configuration. It's a PEM formatted string.",
            "items": {
              "type": "string"
            }
          },
          "transport": {
            "type": "string",
            "description": "Transport of the syslog configuration. Default is \"udp\".",
            "enum": [
              "udp",
              "tls"
            ]
          },
          "eventFormat": {
            "type": "string",
            "description": "Event format of the syslog configuration. Default is \"cef\".",
            "enum": [
              "standard",
              "cef",
              "leef"
            ]
          },
          "facility": {
            "type": "string",
            "description": "Facility of the syslog configuration. Default is \"local0\".",
            "enum": [
              "kernel",
              "user",
              "mail",
              "daemon",
              "authorization",
              "syslog",
              "printer",
              "news",
              "uucp",
              "clock",
              "authpriv",
              "ftp",
              "ntp",
              "log-audit",
              "log-alert",
              "cron",
              "local0",
              "local1",
              "local2",
              "local3",
              "local4",
              "local5",
              "local6",
              "local7"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "description": "Log source identifier of the syslog configuration. The maximum length is 254 characters."
          },
          "lastStatus": {
            "type": "integer",
            "format": "int32",
            "description": "Last connect/send status of the syslog configuration.",
            "readOnly": true
          },
          "lastStatusDate": {
            "type": "integer",
            "format": "int64",
            "description": "Last connect/send status time of the syslog configuration.",
            "readOnly": true
          },
          "ID": {
            "type": "integer",
            "format": "int32",
            "description": "ID of the syslog configuration. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "Details of a syslog configuration."
      },
      "LiftCycleUpdateData": {
        "type": "object",
        "properties": {
          "tenantUpdateState": {
            "type": "string",
            "description": "Tenant Update State. Valid values are 'pending-deletion' and 'active'"
          },
          "customerAccountID": {
            "type": "string",
            "description": "customer Account ID of the tenant."
          }
        },
        "description": "Tenant Life Cycle update information"
      },
      "TrustRuleAttribute": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the attribute."
          },
          "value": {
            "type": "string",
            "description": "The value of the attribute."
          }
        },
        "description": "Attribute that defines the trust rule."
      },
      "TrustRules": {
        "type": "object",
        "properties": {
          "trustRuleCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "applicationControlTrustRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/applicationControlTrustRule"
            }
          }
        }
      },
      "applicationControlTrustRule": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of the rule. Searchable as Choice.",
            "enum": [
              "allowFromSourceTarget",
              "allowFromSource",
              "allowByTarget",
              "ignoreFromSource"
            ]
          },
          "name": {
            "type": "string",
            "description": "Name of the trust rule. Searchable as String."
          },
          "description": {
            "type": "string",
            "description": "Description of the trust rule. Searchable as String."
          },
          "isAssigned": {
            "type": "boolean",
            "description": "Whether the rule is assigned to any rulesets",
            "readOnly": true
          },
          "createdTime": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the trust rule's creation, in milliseconds since epoch. Searchable as Date.",
            "readOnly": true
          },
          "lastUpdatedTime": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of when the trust rule was last updated, in milliseconds since epoch. Searchable as Date.",
            "readOnly": true
          },
          "rulesetIDs": {
            "type": "array",
            "description": "IDs of all rulesets that the rule is assigned to.",
            "readOnly": true,
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "attributes": {
            "type": "array",
            "description": "Attributes that define the trust rule.",
            "items": {
              "$ref": "#/components/schemas/TrustRuleAttribute"
            }
          },
          "ID": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the trust rule. Searchable as ID.",
            "readOnly": true
          }
        },
        "description": "TrustRuleset rule details."
      },
      "TrustRuleUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the trust rule. Searchable as String."
          },
          "description": {
            "type": "string",
            "description": "Description of the trust rule. Searchable as String."
          },
          "attributes": {
            "type": "array",
            "description": "List of rule attributes.",
            "items": {
              "$ref": "#/components/schemas/TrustRuleAttribute"
            }
          }
        }
      },
      "TrustRuleset": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the trust ruleset. Searchable as String."
          },
          "description": {
            "type": "string",
            "description": "Description of the trust ruleset. Searchable as String."
          },
          "version": {
            "type": "integer",
            "format": "int32",
            "description": "Version number of the trust ruleset. Incremented by one whenever the ruleset rules are modified. Searchable as Numeric.",
            "readOnly": true
          },
          "createdTime": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of the trust ruleset's creation, in milliseconds since epoch. Searchable as Date.",
            "readOnly": true
          },
          "lastUpdatedTime": {
            "type": "integer",
            "format": "int64",
            "description": "Timestamp of when the trust ruleset was last updated, in milliseconds since epoch. Searchable as Date.",
            "readOnly": true
          },
          "usageCount": {
            "type": "integer",
            "format": "int32",
            "description": "Count for trust ruleset usage.",
            "readOnly": true
          },
          "ID": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the trust ruleset. Searchable as ID.",
            "readOnly": true
          }
        }
      },
      "TrustRulesets": {
        "type": "object",
        "properties": {
          "trustRuleSetCount": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "applicationControlTrustRulesets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrustRuleset"
            }
          }
        }
      },
      "TrustRulesetUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the trust ruleset. Searchable as String."
          },
          "description": {
            "type": "string",
            "description": "Description of the trust ruleset. Searchable as String."
          },
          "ruleIds": {
            "type": "array",
            "description": "List of rule Ids.",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "RuleLongIDs": {
        "type": "object",
        "properties": {
          "ruleIDs": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "TrustRuleIDs": {
        "type": "object",
        "properties": {
          "ruleIDs": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "description": "ID numbers of trust rules in a trust ruleset."
      },
      "TrustRulesetAssignments": {
        "type": "object",
        "properties": {
          "computers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrustruleComputerAssignment"
            }
          },
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrustrulePolicyAssignment"
            }
          }
        },
        "description": "Trust ruleset assignments."
      },
      "TrustruleComputerAssignment": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the computer"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TrustruleComputerAssignments": {
        "type": "object",
        "properties": {
          "computers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrustruleComputerAssignment"
            }
          }
        }
      },
      "TrustrulePolicyAssignment": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the policy"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TrustrulePolicyAssignments": {
        "type": "object",
        "properties": {
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrustrulePolicyAssignment"
            }
          }
        }
      },
      "vCenterConnectorAction": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of the VCenterConnectorAction.",
            "enum": [
              "synchronize"
            ]
          },
          "status": {
            "type": "string",
            "description": "Status of the VCenterConnectorAction.",
            "enum": [
              "SUBMITTED",
              "RUNNING",
              "SUCCESS",
              "FAILED"
            ]
          },
          "submittedTime": {
            "type": "integer",
            "format": "int64",
            "description": "Submitted time of the VCenterConnectorAction."
          },
          "ID": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the VCenterConnectorAction.",
            "readOnly": true
          }
        },
        "description": "The supported action of a vCenter connector."
      },
      "VCenterConnector": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "ID number of the vCenter connector.",
            "readOnly": true
          },
          "vCenter": {
            "$ref": "#/components/schemas/VCenterInfo"
          }
        },
        "description": "Everything about VCenter connector."
      },
      "VCenterInfo": {
        "type": "object",
        "properties": {
          "host": {
            "type": "string",
            "description": "vCenter server address."
          },
          "port": {
            "type": "integer",
            "format": "int32",
            "description": "vCenter server port."
          },
          "name": {
            "type": "string",
            "description": "Display name of the connector."
          },
          "description": {
            "type": "string",
            "description": "Description of the connector."
          },
          "username": {
            "type": "string",
            "description": "Username that the connector will use to authenticate to vCenter."
          },
          "password": {
            "type": "string",
            "description": "Password of the vCenter user. Must be base64-encoded."
          }
        }
      },
      "VCenterConnectors": {
        "type": "object",
        "properties": {
          "vcenterconnectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VCenterConnector"
            }
          }
        }
      },
      "Expand": {
        "type": "object",
        "description": "The expand parameter for a Computer.",
        "properties": {
          "Options": {
            "type": "array",
            "description": "The options of expand parameter.",
            "items": {
              "type": "string",
              "enum": [
                "none",
                "all",
                "computerStatus",
                "tasks",
                "securityUpdates",
                "computerSettings",
                "allSecurityModules",
                "antiMalware",
                "webReputation",
                "activityMonitoring",
                "deviceControl",
                "firewall",
                "intrusionPrevention",
                "integrityMonitoring",
                "logInspection",
                "applicationControl",
                "SAP",
                "interfaces",
                "ESXSummary",
                "allVirtualMachineSummaries",
                "azureARMVirtualMachineSummary",
                "azureVMVirtualMachineSummary",
                "ec2VirtualMachineSummary",
                "noConnectorVirtualMachineSummary",
                "vmwareVMVirtualMachineSummary",
                "vcloudVMVirtualMachineSummary",
                "workspaceVirtualMachineSummary",
                "gcpVirtualMachineSummary"
              ]
            }
          }
        },
        "x-ux-improve": true
      }
    }
  }
}